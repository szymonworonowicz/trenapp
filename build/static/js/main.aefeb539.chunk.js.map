{"version":3,"sources":["languages/LanguageOptions.js","languages/LanguageContext.js","Forms/Registration.js","Forms/Login.js","Forms/PasswordRecovery.js","Forms/PasswordChange.js","Forms/PasswordReset.js","Components/StyledComponents.js","Forms/PersonalData.js","Assets/mainPage.jpg","Home.js","Forms/BravermanForm.js","Forms/BravermanFileForm.js","Forms/PersonalTrainingData.js","Forms/MesocycleForm.js","Forms/TrainingPlan3days.js","Forms/RpeSliders.js","Forms/RpeQuestionnaire.js","Forms/RpeForm.js","Forms/TrainingPlan3daysUser.js","Forms/AvatarForm.js","Forms/EditUserData.js","Forms/settingsTrainer.js","languages/LanguageSelector.js","Navs/Header.js","Navs/Navbar.js","Forms/Pupils.js","Forms/TrainerProfile.js","Footer.js","Forms/Settings.js","Forms/NumberInfoField.js","Forms/ExcerciseForm.js","Components/ExcercisesList.js","Views/ExcerciseView.js","Views/Notifications.js","languages/LanguageProvider.js","Forms/CreatePlanForm.js","Views/TrainingPlanTrainerView.js","Views/UserProfile.js","App.js","reportWebVitals.js","index.js"],"names":["languageList","GB","PL","languageOptions","LanguageContext","createContext","userLanguage","dictionary","ContextConsumer","Consumer","Alert","props","elevation","variant","backgroundColor","Registration","validateEmail","email","test","String","toLowerCase","onClick","state","password","repeatedPassword","typedPassword","typedLogin","login","setState","areDetailsVisible","errorMessage","onChange","e","target","id","value","handleFilterClose","event","reason","this","classes","to","pathname","registrationData","language","className","formPosition","Snackbar","styledSnackbar","open","autoHideDuration","onClose","styledAlert","severity","paper","Typography","component","style","color","form","noValidate","TextField","margin","required","fullWidth","label","Name","autoFocus","formElements","Surname","UserName","Password","type","RepeatPassword","Button","submit","GoNext","align","Link","href","HaveAccount","Component","withStyles","theme","marginTop","spacing","display","flexDirection","alignItems","width","padding","borderRadius","maxWidth","withTheme","Login","onLogin","data","axios","defaults","baseURL","headers","post","get","then","response","token","localStorage","setItem","redirect","catch","error","console","log","document","getElementById","textContent","alertLbl","RememberMe","prev","logininfo","window","sessionStorage","getItem","JSON","parse","name","autoComplete","FormControlLabel","control","Checkbox","SignIn","Grid","container","item","xs","ForgotYourPassword","DontHaveAnAccount","location","replace","position","height","top","left","PasswordRecovery","onSubmit","sendMail","alert","Send","backgrounColor","PasswordChange","componentDidMount","logged","userId","parseInt","jwt_decode","newPassword","passwordRegex","oldPassword","UserId","OldPassword","NewPassword","changePasswordStatus","RepeatNewPassword","OnlyRegistered","PasswordReset","resetPasswordStatus","ResetPassword","WhiteRadio","styled","Radio","grey","red","CustomSlider","root","track","rail","markLabel","thumb","border","marginLeft","Slider","CustomCheckbox","checked","StyledPagination","marginRight","ul","textAlign","Pagination","StyledPaginationItem","page","PaginationItem","PersonalData","undefined","AthleteId","readOnly","Accept","newDetails","details","Gender","gender","trim","Weight","weight","Height","SportClass","sportClass","Experience","experience","Age","age","Diet","diet","Sleep","sleep","Stress","stress","Ssa","ssa","BenchPress","benchPress","Squat","squat","Deadlift","deadlift","StartVolume","startVolume","isNaN","length","detailsToSend","registerUser","editPersonalData","handleChangeInput","prevDetails","handleChangeRadio","handleChangeSlider","status","NaN","confirmForm","stressValue","Low","Medium","High","startVolumeValue","marginBottom","FillInFormBelow","justify","Experience_years","gutterBottom","StressLevel","aria-labelledby","step","marks","onChangeCommitted","val","StartingVolume","FormControl","FormLabel","RadioGroup","aria-label","column","Woman","Man","Yes","No","Nutrition","row","Insufficient","Basic","Full","Register","Edit","formControl","minWidth","radio","borderColor","Home","role","personalData","trainingData","config","push","user","firstName","lastName","content","BravermanForm","fetchData","withCredentials","Authorization","category","x","qList","question","sort","SortByProp","questionList","counter","prop","a","b","changeClicks","c","changeType","onButtonClick","Submit","prevProps","map","key","icon","fontSize","checkedIcon","BravermanFileForm","PersonalTrainingDataId","cat_nr","category_nr","categories","SendBraverman","body","Info","Dopamine1","Serotonin1","Acetylocholine1","Gaba1","Dopamine2","Serotonin2","Acetylocholine2","Gaba2","nr","StyledTableCell","head","TableCell","StyledTableRow","palette","action","hover","TableRow","StyledPaper","Paper","PersonalTrainingData","loadTrainers","listOfTrainers","trainers","sendForm","dto","jwtDecode","injuries","bravermanId","anthropometry","stickingPointSquat","stickingPointBenchpress","stickingPointDeadLift","trainerId","str","stringify","prevstate","successmsg","errormsg","loadData","encrypted","json","Number","mychangeRadioPrzysiad","mychangeRadioWyciskanie","mychangeRadioMartwyCiag","personalTrainingDataId","trainer","braverman","handleChange","bind","handleSubmit","prevState","newdata","personaldata","Tooltip","title","MostImportantInjuries","Injuries","disabled","multiline","Anthropometry","Weaknesses","Squad","onTheBottom","inTheMiddle","onTop","upperRidge","underTheKnee","behindTheKnee","grip","BravermannTest","CompleteTheTest","TableContainer","Table","TableHead","Serotonin","Acetylcholine","Dopamine","TableBody","serotonin1","serotonin2","acetylocholine1","acetylocholine2","dopamine1","dopamine2","gaba1","gaba2","MesocycleForm","days","description","trainingDaysPerWeek","boxShadow","textTransform","textVariant","TrainingPlan3days","eList","excercises","result","i","Exercises","onSelectionChange","onAthleteSelectionChange","postPlan","Days","TrainerId","defaultAthleteIdSetted","idFromProps","setToken","button","postplan","SendPlan","ref","componentRef","Category","ExcerciseName","ProgressionMethod","Sets","Reps","Break","Comments","colSpan","header","Day","tableCellStyle","Autocomplete","options","getOptionLabel","option","excerciseName","renderInput","params","toggler","right","fontVariant","active","completed","stepLabelActiveComplete","labelContainer","RpeSliders","context","useContext","onSave","closeModalFn","Array","isArray","sliderValue","generateSliderValue","index","excercise","sets","reps","min","max","defaultValue","Save","defaultProps","RpeQuestionnaire","fontWeight","WhatWrong","ToHeavy","ToHeightVolume","Trouble","PreviousExcercise","RpeForm","useState","questionnaire","setQuestionnaire","BootstrapButton","changeWeek","selectedWeek","getStepps","steps","handleStep","closeModal","openModal","modalInitValue","day","filtered","plan","exercises","filter","dayId","PNGClick","buttons","getElementsByName","forEach","element","visibility","htmlToImage","dataUrl","download","PDFClick","exportComponentAsPDF","fileName","pdfOptions","w","h","orientation","unit","React","createRef","exerciseList","eListLength","statsArray","emptyField","progresMethod","comments","Dialog","onBackdropClick","onEscapeKeyDown","DialogTitle","RPERating","DialogContent","Stepper","nonLinear","activeStep","stepperRoot","Step","StepButton","StepLabel","StepIconProps","Weight2","RateRPE","slice","ExportPDF","ExportPNG","useStyle","makeStyles","AvatarForm","image","localImage","setLocalImage","onCrop","preview","src","reload","err","EditUserData","handleUploadClick","file","files","reader","FileReader","onloadend","readAsDataURL","put","photo","sendClick","userData","Avatar","large","accept","input","hidden","htmlFor","Fab","opacity","useStyles","flexGrow","tabItem","IconStyle","TabPanel","children","other","Box","p","SettingsTrainer","useTheme","setValue","Tabs","newValue","indicatorColor","textColor","centered","Tab","dir","direction","list__navbar__element","inlineAnchor","verticalAlign","cursor","LanguageSelector","userLanguageChange","handleLanguageChange","splitted","alt","split","country","Header","logOut","removeItem","isTokenExist","SignOut","bottom","borderTop","Navbar","avatar","setAvatar","useEffect","decode","surname","TrainingPlan","Notifications","Settings","Progress","Polls","Proteges","ExcerciseDataBase","styles","heading","typography","pxToRem","flexBasis","flexShrink","pupilElement","small","expandedAcordionDetails","rootAcordionDetails","rootAcordionSummary","contentAcordionSummary","StyledTypography","filterOptions","sortOptions","Pupils","filterOpen","setfilterOpen","filterAnchorRef","useRef","filterSelectedIndex","setfilterSelectedIndex","sortOpen","setSortOpen","sortAnchorRef","sortSelectedIndex","setSortSelectedIndex","searchValue","setSearchValue","expanded","setExpanded","modifiedUsers","setmUsers","users","mikrocykl","pageUsers","setPage","pageSize","pageNR","setPageNR","Math","ceil","pageCount","setPageCount","pupils","current","contains","handleSortClose","onRequestSearch","zIndex","ButtonGroup","info","Filter","size","aria-controls","aria-expanded","aria-haspopup","prevfilterOpen","Popper","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","MenuItem","selected","filteredUsers","handleMenuFilterClick","Sort","prevSortOpen","sortedUsers","SortByPropDescending","handleMenuSortClick","RemoveFilters","count","showFirstButton","showLastButton","defaultPage","pageUserslocal","PaginationFun","renderItem","Accordion","concat","panel","isExpanded","AccordionSummary","expandIcon","m","AccordionDetails","xl","Profile","Plan","MesocyclePhase","number","TrainerProfile","loadUsers","render","DataNotLoaded","jsonID","Footer","spotifyIcon","a11yProps","BasicData","TrainingData","NumberInfoField","placeholder","isNumericString","format","onValueChange","vals","formattedValue","isObjectEmpty","obj","formStyle","background","ExcerciseForm","Muscle","setMuscle","types","Bodybuilding","Prehab","Core","progressMethod","ConstantWeight","BodyWeight","Band","Kettle","RampClosed","stickySQBP","stickyDL","initialValues","Id","lift","stickyPoint","Variant","validationSchema","Yup","shape","Required","positive","greaterThan0","of","addExcercise","values","ExcerciseAdded","Error","ExcerciseNotAdded","updateExcercise","ExcerciseEdited","ExcerciseNotEdited","success","removePolishLetter","enableReinitialize","formik","select","Type","SelectProps","multiple","elem","muscleName","Accessory","setFieldValue","floatValue","Description","rows","isValid","StyledTableSortLabel","TableSortLabel","common","white","StyledTablePagination","selectIcon","actions","TablePagination","StyledEditIcon","EditIcon","StyledDeleteIcon","DeleteIcon","EnhancedTableHead","order","orderBy","onRequestSort","languageContext","headCell","hide","alignleft","sortDirection","field","property","Delete","descendingComparator","stableSort","array","comparator","stabilizedThis","el","getComparator","ExcercisesList","handleRequestSort","isAsc","handleChangePage","newPage","handleChangeRowsPerPage","rowsPerPage","resp","EditClick","exercise","changeFormValuesFn","DeleteClick","modalDelete","selectedId","handleCloseDelete","handleDeleteAction","deleteExcercise","delete","columns","headerName","columns2","table","rowCount","scope","TableFooter","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","PaperProps","ExcerciseDelete","DialogContentText","tabIndex","AskConfirmDeleteExercise","DialogActions","StyledFab","secondary","ExcerciseView","formInitValues","newExcercise","changeFormInitValues","newValues","Object","keys","ExcerciseAdd","Container","Excercises","fab","Add","borderBottom","card","not_received","inline_div","inline_p","received","notifications","pageNotifications","setOpen","selectedNotification","setSelectedNotification","handleClickOpen","notification","handleClose","findIndex","descriptionElementRef","descriptionElement","focus","pageNotificationslocal","Card","CardActionArea","CardContent","scroll","LanguageProvider","defaultLanguage","setUserLanguage","provider","newLanguage","Provider","CreatePlanForm","Phase","StartDate","Date","toLocaleDateString","Phases","Types","submitForm","isSubmitting","handleBlur","utils","DateFnsUtils","locale","pl","DatePicker","TraininingPlanTrainerView","editDialog","setEditDialog","editPlan","setEditPlan","closeEditModalFn","doPostplan","postplanF","justifyContent","TrainingPlan3daysUser","section","viewPosition","slider","formControlLabel","sleepValue","sportClassValue","UserProfile","useLocation","basicData","setBasicData","setPersonalData","fetchBasicData","fetchPersonalData","InputProps","App","hamburgerHandle","istoogled","isToogled","isLoading","registationData","User","Data","exact","path","onRegistration","onPasswordChange","onPasswordRecover","onPersonalDataChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"0oRAGaA,EAAe,CAACC,G,OAAGC,G,QAEnBC,EAAkB,CAC3BF,GAAI,UACJC,GAAI,UCJGE,EAAkBC,wBAAc,CACvCC,aAAe,KACfC,WAAYP,EAAaE,KAGhBM,EAAkBJ,EAAgBK,S,wEC0C/C,SAASC,EAAMC,GACb,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGC,QAAQ,SAASC,gBAAgB,aAAgBH,I,IAG5EI,E,kDACF,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IAUVK,cAAgB,SAACC,GAEf,MADc,wJACDC,KAAKC,OAAOF,GAAOG,gBAbf,EAgBnBC,QAAU,WACN,GAAI,EAAKC,MAAMC,WAAa,EAAKD,MAAME,iBAAvC,CAOA,IAAIC,EAAgB,EAAKH,MAAMC,SAE/B,GADsB,uCACHL,KAAKO,GAAxB,CAOA,IAAIC,EAAa,EAAKJ,MAAMK,MACT,6DACHT,KAAKQ,GAQtB,EAAKE,SAAS,CACVC,mBAAkB,IAPjB,EAAKD,SAAS,CACVE,aAAa,4IAVjB,EAAKF,SAAS,CACVE,aAAa,4IAVjB,EAAKF,SAAS,CACVE,aAAa,+CApBN,EAgDnBC,SAAW,SAACC,GAER,EAAKJ,SAAL,eACKI,EAAEC,OAAOC,GAAMF,EAAEC,OAAOE,SAnDd,EAwDnBC,kBAAoB,SAACC,EAAMC,GACR,cAAXA,GAGJ,EAAKV,SAAS,CACVE,aAAa,MA3DjB,EAAKR,MAAQ,CACTK,MAAM,GACNJ,SAAS,GACTC,iBAAkB,GAClBK,mBAAkB,EAClBC,aAAa,IAPF,E,qDAiEV,IAAD,SACuCS,KAAKjB,MAAzCO,EADH,EACGA,kBAAmBC,EADtB,EACsBA,aACnBU,EAAYD,KAAK5B,MAAjB6B,QAEP,OAAuB,IAApBX,EAEQ,cAAC,IAAD,CAAUY,GAAI,CACjBC,SAAU,WACVC,iBAAkB,CAAEhB,MAAOY,KAAKjB,MAAMK,MAAQJ,SAAUgB,KAAKjB,MAAMC,aAKzE,cAACf,EAAD,UAEI,SAAAoC,GACE,OACE,sBAAKC,UAAWL,EAAQM,aAAxB,UACE,cAACC,EAAA,EAAD,CAAUF,UAAWL,EAAQQ,eAAgBC,KAAqB,KAAfnB,EACzCoB,iBAAkB,IAAMC,QAAS,EAAKf,kBADhD,SAEI,cAAC,EAAD,CAAOS,UAAWL,EAAQY,YAAaD,QAAS,EAAKf,kBAAmBiB,SAAS,QAAjF,SACKvB,MAGX,sBAAKe,UAAWL,EAAQc,MAAxB,UACE,cAACC,EAAA,EAAD,CAAYC,UAAU,KAAK3C,QAAQ,KAAK4C,MAAO,CAACC,MAAO,SAAvD,yBAGA,uBAAMb,UAAWL,EAAQmB,KAAMC,YAAU,EAAzC,UACA,cAACC,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,OACH+B,MAAOrB,EAASrC,WAAW2D,KAC3BC,WAAS,EACTtB,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,MAEnC,cAAC6B,EAAA,EAAD,CACEhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,UACH+B,MAAOrB,EAASrC,WAAW8D,QAC3BF,WAAS,EACTtB,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,MAEnC,cAAC6B,EAAA,EAAD,CACEhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,QACH+B,MAAM,QACNE,WAAS,EACTtB,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,MAEjC,cAAC6B,EAAA,EAAD,CACAhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,QACH+B,MAAOrB,EAASrC,WAAW+D,SAC3BH,WAAS,EACTtB,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,MAEnC,cAAC6B,EAAA,EAAD,CACEhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAOrB,EAASrC,WAAWgE,SAC3BC,KAAK,WACLtC,GAAG,WACHW,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,MAEjC,cAAC6B,EAAA,EAAD,CACAhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAOrB,EAASrC,WAAWkE,eAC3BD,KAAK,WACLtC,GAAG,mBACHW,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,MAGnC,cAAC0C,EAAA,EAAD,CACEV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OACnBtD,QAAS,SAACW,GAAD,OAAO,EAAKX,WALvB,SAOGuB,EAASrC,WAAWqE,SAEvB,cAACrB,EAAA,EAAD,CAAYC,UAAU,KAAKqB,MAAM,SAAjC,SACE,cAACC,EAAA,EAAD,CAAMC,KAAK,SAASlE,QAAQ,QAAQ4C,MAAO,CAACC,MAAM,aAAlD,SACGd,EAASrC,WAAWyE,gC,GA7KpBC,aA2LZC,eArOA,SAAAC,GAAK,MAAK,CACrB7B,MAAO,CACL8B,UAAWD,EAAME,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEd7B,KAAM,CACJ8B,MAAO,OACPL,UAAWD,EAAME,QAAQ,IAE3BV,OAAQ,CACNb,OAAQqB,EAAME,QAAQ,EAAG,EAAG,GAC5BvE,gBAAiB,aAGnBgC,aAAc,CACZgB,OAAQ,OACR2B,MAAO,MACP3E,gBAAgB,QAChB4E,QAAQ,sBAEVtB,aAAc,CACVtD,gBAAgB,QAChB6E,aAAc,OAElBvC,YAAa,CACX,yBAA0B,CACxBtC,gBAAiB,cAGrBkC,eAAgB,CACd,qBAAsB,CACpB4C,SAAU,WAoMgB,CAAEC,WAAW,GAAhCX,CAAwCnE,G,6CChMjD+E,E,kDACF,WAAYnF,GAAQ,IAAD,8BACf,cAAMA,IAwBVoF,QAAU,SAACC,GAOTC,IAAMC,SAASC,QAAU,yBACzBF,IAAMC,SAASE,QAAQC,KAAK,+BAAiC,yBAC7DJ,IAAMC,SAASE,QAAQE,IAAI,+BAAiC,yBAC5DL,IAAMI,KAAK,kBAAmBL,EATf,CACbI,QAAS,CACP,eAAgB,sBAQjBG,MAAK,SAACC,GACL,IAAIC,EAAQD,EAASR,KAAKS,MACb,MAATA,IACFC,aAAaC,QAAQ,QAASF,GAC9B,EAAK7E,SAAS,CACZgF,UAAU,QAIfC,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZ,EAAKlF,SAAS,CACZgF,UAAS,IAEIK,SAASC,eAAe,eAC9BC,YAAY,4CAnDV,EAwDnB9F,QAAU,WACN,IAAI2E,EAAK,CACL9B,KAAM,EAAK5C,MAAMK,MACjB4C,SAAU,EAAKjD,MAAMC,UAEzB,EAAKwE,QAAQC,IA7DE,EAgEnBjE,SAAW,SAACC,GACV,IAAIoF,EAAWH,SAASC,eAAe,eACX,KAAzBE,EAASD,cACRC,EAASD,YAAc,IAC3B,EAAKvF,SAAL,eACKI,EAAEC,OAAOC,GAAMF,EAAEC,OAAOE,SArEZ,EAwEnBkF,WAAa,WACX,EAAKzF,UAAS,SAAC0F,GAAD,MAAW,CACvBD,YAAYC,EAAKD,gBAxEjB,EAAK/F,MAAQ,CACTsF,UAAU,EACVjF,MAAM,GACNJ,SAAS,GACT8F,YAAW,GANA,E,gEAWjB,IAAME,EAAYC,OAAOC,eAAeC,QAAQ,cAEhD,GAAiB,OAAdH,EAAqB,CAAC,IAAD,EACII,KAAKC,MAAML,GAA9B5F,EADe,EACfA,MAAOJ,EADQ,EACRA,SAEdgB,KAAKX,SAAS,CACZD,QACAJ,WACA8F,YAAW,O,+BA2DR,IAAD,OACG7E,EAAWD,KAAK5B,MAAhB6B,QAGP,IAAiB,IAFED,KAAKjB,MAAjBsF,SAQP,OACE,cAACpG,EAAD,UAEI,SAAAoC,GACE,OACE,qBAAKC,UAAWL,EAAQM,aAAxB,SACA,sBAAKD,UAAWL,EAAQc,MAAxB,UACE,cAACC,EAAA,EAAD,CAAYC,UAAU,KAAK3C,QAAQ,KAAK4C,MAAO,CAACC,MAAO,SAAvD,SACCd,EAASrC,WAAWuF,QAErB,uBAAMjD,UAAWL,EAAQmB,KAAMC,YAAU,EAAzC,UACE,cAACC,EAAA,EAAD,CACEhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAM,QACN4D,KAAK,QACL3F,GAAG,QACH4F,aAAa,QACb3D,WAAS,EACTtB,UAAWL,EAAQ4B,aACnBrC,SAAU,SAACC,GAAD,OAAO,EAAKD,SAASC,MAEjC,cAAC6B,EAAA,EAAD,CACEhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT6D,KAAK,WACL5D,MAAOrB,EAASrC,WAAWgE,SAC3BrC,GAAG,WACHsC,KAAK,WACLsD,aAAa,mBACbjF,UAAWL,EAAQ4B,aACnBrC,SAAU,SAACC,GAAD,OAAO,EAAKD,SAASC,MAEjC,cAAC+F,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAU9F,MAAM,WAAWd,QAAS,kBAAM,EAAKgG,cAAc5D,MAAO,CAACC,MAAO,QAAQI,OAAQ,sBACrGG,MAAO,cAACV,EAAA,EAAD,CAAaE,MAAO,CAAC2B,UAAU,OAA/B,SAAyCxC,EAASrC,WAAW8G,aACpE5D,MAAO,CAACC,MAAM,WAEhB,cAACgB,EAAA,EAAD,CACEV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OACnBtD,QAAS,kBAAM,EAAKA,WALtB,SAOGuB,EAASrC,WAAW2H,SAEvB,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACE,cAACxD,EAAA,EAAD,CAAMC,KAAK,kBAAkBlE,QAAQ,QAAQ4C,MAAO,CAACC,MAAM,aAA3D,SACCd,EAASrC,WAAWgI,uBAGvB,cAACJ,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACvD,EAAA,EAAD,CAAMC,KAAK,gBAAgBlE,QAAQ,QAAQ4C,MAAO,CAACC,MAAM,aAAzD,SACCd,EAASrC,WAAWiI,4BAK3B,uBAAOtG,GAAG,cAAcW,UAAU,8BApE5C2E,OAAOiB,SAASC,QAAQ,S,GArFdzD,aAoKLC,eAtMA,SAAAC,GAAK,MAChB,CACE7B,MAAO,CACL8B,UAAW,kBACXE,QAAS,OACTC,cAAe,SACfC,WAAY,UAGd7B,KAAM,CACJ8B,MAAO,OACPL,UAAW,OAEbT,OAAQ,CACNb,OAAQ,kBACRhD,gBAAiB,aAGnBgC,aAAc,CACZ6F,SAAU,WACVlD,MAAO,MACPmD,OAAQ,MACRC,IAAI,MACJC,KAAM,MACNhI,gBAAgB,QAChB4E,QAAQ,sBAEVtB,aAAc,CACVtD,gBAAgB,QAChB6E,aAAc,UAyKU,CAAEE,WAAW,GAAhCX,CAAwCY,GC5KjDiD,E,kDACF,WAAYpI,GAAQ,IAAD,8BACf,cAAMA,IAWVqI,SAAW,WAAO,IACP/H,EAAS,EAAKK,MAAdL,MACP8F,QAAQC,IAAI/F,GACZ,IAAImG,EAAWH,SAASC,eAAe,eAEpB,wJACHhG,KAAKC,OAAOF,GAAOG,eAG/B,EAAK6H,SAAShI,GAFdmG,EAASD,YAAc,uMAnBZ,EAqCnBpF,SAAW,SAACC,GACR,IAAIoF,EAAWH,SAASC,eAAe,eACZ,KAAvBE,EAASD,cACTC,EAASD,YAAY,IACzB,EAAKvF,SAAS,CACVX,MAAQe,EAAEC,OAAOE,SAxCrB,EAAKb,MAAQ,CACTsF,UAAU,EACV3F,MAAO,IAJI,E,8FA0BHA,G,iFACSsB,KAAK5B,MAAMU,QAAQJ,G,QACzB,I,SACXiI,MAAM,6EACN3G,KAAKX,SAAS,CACVgF,UAAU,K,sIAiBb,IAAD,OACGA,EAAYrE,KAAKjB,MAAjBsF,SACApE,EAAWD,KAAK5B,MAAhB6B,QAGX,OAAiB,IAAboE,EACO,cAAC,IAAD,CAAUnE,GAAG,WAGhB,cAACjC,EAAD,UAEQ,SAAAoC,GACI,OACI,qBAAKC,UAAWL,EAAQM,aAAxB,SACI,sBAAKD,UAAWL,EAAQc,MAAxB,UACI,cAACC,EAAA,EAAD,CAAYC,UAAU,KAAK3C,QAAQ,KAAK4C,MAAO,CAACC,MAAO,SAAvD,SACKd,EAASrC,WAAWwI,mBAEzB,uBAAMlG,UAAWL,EAAQmB,KAAzB,UACI,cAACE,EAAA,EAAD,CACAhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,QACH+B,MAAM,QACNE,WAAS,EACTtB,UAAWL,EAAQ4B,aACnBrC,SAAU,SAACC,GAAD,OAAK,EAAKD,SAASC,MAE7B,cAAC0C,EAAA,EAAD,CACAV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OACnBtD,QAAS,kBAAI,EAAK2H,YALlB,SAMKpG,EAASrC,WAAW4I,UAG7B,uBAAOjH,GAAG,cAAcW,UAAU,kC,GAxFvCoC,aAmGhBC,eAnIA,SAAAC,GAAK,MAAK,CACrB7B,MAAO,CACH8B,UAAWD,EAAME,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ1E,gBAAiB,SAErB6C,KAAM,CACF8B,MAAO,OACPL,UAAWD,EAAME,QAAQ,IAE7BV,OAAQ,CACJb,OAAQqB,EAAME,QAAQ,EAAE,EAAE,GAC1B+D,eAAgB,aAEpBtG,aAAc,CACV6F,SAAU,WACVlD,MAAO,MACPmD,OAAQ,MACRC,IAAK,MACLC,KAAM,MACNhI,gBAAiB,QACjB4E,QAAS,sBAEbtB,aAAc,CACVtD,gBAAiB,QACjB6E,aAAc,UAwGW,CAACE,WAAU,GAA7BX,CAAoC6D,G,QCnG7CM,E,kDACF,WAAY1I,GAAQ,IAAD,8BACf,cAAMA,IAWV2I,kBAAoB,WAChB,IAAI7C,EAAQC,aAAagB,QAAQ,SAC7B6B,GAAS,EACD,MAAT9C,IAEC8C,GAAS,EACT,EAAK3H,SAAS,CACV4H,OAAQC,SAASC,YAAWjD,GAAOvE,OAI3C,EAAKN,SAAS,CACV2H,OAAQA,KAxBG,EA4BnBlI,QAAU,WACN,IAAI+F,EAAWH,SAASC,eAAe,eACvC,GAAI,EAAK5F,MAAMqI,cAAgB,EAAKrI,MAAME,iBAA1C,CAIA,IAAMoI,EAAgB,uCACtB,GAAIA,EAAc1I,KAAK,EAAKI,MAAMuI,aAIlC,GAAKD,EAAc1I,KAAK,EAAKI,MAAMqI,aAG/B,CACA,IAAI3D,EAAK,CACL8D,OAAQ,EAAKxI,MAAMkI,OACnBO,YAAa,EAAKzI,MAAMuI,YACxBG,YAAa,EAAK1I,MAAMqI,aAE5B,EAAKM,qBAAqBjE,QAR1BoB,EAASD,YAAc,iJAJvBC,EAASD,YAAc,4CALvBC,EAASD,YAAc,qCA/BZ,EAmEnBpF,SAAW,SAACC,GACR,IAAIoF,EAAWH,SAASC,eAAe,eACX,KAAzBE,EAASD,cACRC,EAASD,YAAc,IAC3B,EAAKvF,SAAL,eACKI,EAAEC,OAAOC,GAAMF,EAAEC,OAAOE,SAtE7B,EAAKb,MAAQ,CACTiI,QAAQ,EACR3C,UAAS,EACT4C,QAAQ,EACRK,YAAY,GACZF,YAAY,GACZnI,iBAAiB,IARN,E,0GAoDQwE,G,iFACFzD,KAAK5B,MAAMU,QAAQ2E,G,QAC1B,I,QACVkD,MAAM,qCACN3G,KAAKX,SAAS,CACVgF,UAAU,KAKCK,SAASC,eAAe,eAC9BC,YAAc,uC,sIAatB,IAAD,OACIP,EAAarE,KAAKjB,MAAlBsF,SACDpE,EAAWD,KAAK5B,MAAhB6B,QAEP,OAAiB,IAAboE,EACO,cAAC,IAAD,CAAUnE,GAAG,MACrBF,KAAKjB,MAAMiI,OAEV,cAAC/I,EAAD,UAEQ,SAAAoC,GACI,OACI,qBAAKC,UAAWL,EAAQM,aAAxB,SACI,sBAAKD,UAAWL,EAAQc,MAAxB,UACA,uBAAMT,UAAWL,EAAQmB,KAAMC,YAAU,EAAzC,UACI,cAACC,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,cACH+B,MAAOrB,EAASrC,WAAWwJ,YAC3BvF,KAAK,WACLL,WAAS,EACTtB,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,MAErC,cAAC6B,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,cACH+B,MAAOrB,EAASrC,WAAWyJ,YAC3BxF,KAAK,WACLL,WAAS,EACTtB,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,MAErC,cAAC6B,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,mBACH+B,MAAOrB,EAASrC,WAAW2J,kBAC3B1F,KAAK,WACLL,WAAS,EACTtB,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,MAErC,cAAC0C,EAAA,EAAD,CACAV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OACnBtD,QAAS,SAACW,GAAD,OAAO,EAAKX,WALrB,sCAUJ,uBAAOa,GAAG,cAAcW,UAAU,8BAStD,cAACrC,EAAD,UAEQ,SAAAoC,GACI,OACI,qBAAKC,UAAU,YAAf,SACI,6BAAKD,EAASrC,WAAW4J,0B,GAxJ5BlF,aAkKdC,eAlMA,SAAAC,GAAK,MAAK,CACrB7B,MAAO,CACL8B,UAAWD,EAAME,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ1E,gBAAgB,SAElB6C,KAAM,CACJ8B,MAAO,OACPL,UAAWD,EAAME,QAAQ,IAE3BV,OAAQ,CACNb,OAAQqB,EAAME,QAAQ,EAAG,EAAG,GAC5BvE,gBAAiB,aAGnBgC,aAAc,CACZ6F,SAAU,WACVlD,MAAO,MACPmD,OAAQ,MACRC,IAAI,MACJC,KAAM,MACNhI,gBAAgB,QAChB4E,QAAQ,sBAEVtB,aAAc,CACVtD,gBAAgB,QAChB6E,aAAc,UAsKW,CAACE,WAAU,GAA7BX,CAAoCmE,GClK7Ce,E,kDACF,WAAYzJ,GAAQ,IAAD,8BACf,cAAMA,IAUV2I,kBAAoB,WAChB,IAAI7C,EAAQC,aAAagB,QAAQ,SAC7B6B,GAAS,EACD,MAAT9C,IAEC8C,GAAS,EACT,EAAK3H,SAAS,CACV4H,OAAQC,SAASC,YAAWjD,GAAOvE,OAI3C,EAAKN,SAAS,CACV2H,OAAQA,KAvBG,EA2BnBlI,QAAU,WACN,IAAI+F,EAAWH,SAASC,eAAe,eACvC,GAAI,EAAK5F,MAAMqI,cAAgB,EAAKrI,MAAME,iBAA1C,CAKA,GADsB,uCACHN,KAAK,EAAKI,MAAMqI,aAG/B,CACA,IAAI3D,EAAK,CACL8D,OAAQ,EAAKxI,MAAMkI,OACnBQ,YAAa,EAAK1I,MAAMqI,aAE5B,EAAKU,oBAAoBrE,QAPzBoB,EAASD,YAAc,iJALvBC,EAASD,YAAc,qCA9BZ,EAwDnBpF,SAAW,SAACC,GACR,IAAIoF,EAAWH,SAASC,eAAe,eACX,KAAzBE,EAASD,cACRC,EAASD,YAAc,IAC3B,EAAKvF,SAAL,eACKI,EAAEC,OAAOC,GAAMF,EAAEC,OAAOE,SA3D7B,EAAKb,MAAQ,CACTiI,QAAQ,EACR3C,UAAS,EACT4C,QAAQ,EACRG,YAAY,GACZnI,iBAAiB,IAPN,E,yGA8COwE,G,iFACDzD,KAAK5B,MAAMU,QAAQ2E,G,QAC1B,I,SACVkD,MAAM,qCACN3G,KAAKX,SAAS,CACVgF,UAAU,K,sIAcb,IAAD,OACIA,EAAarE,KAAKjB,MAAlBsF,SACDpE,EAAWD,KAAK5B,MAAhB6B,QAEP,OAAiB,IAAboE,EACO,cAAC,IAAD,CAAUnE,GAAG,MACrBF,KAAKjB,MAAMiI,OAEV,cAAC/I,EAAD,UAEQ,SAAAoC,GACI,OACI,qBAAKC,UAAWL,EAAQM,aAAxB,SACI,sBAAKD,UAAWL,EAAQc,MAAxB,UACI,uBAAMT,UAAWL,EAAQmB,KAAMC,YAAU,EAAzC,UACI,cAACC,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,cACH+B,MAAOrB,EAASrC,WAAWyJ,YAC3BxF,KAAK,WACLL,WAAS,EACTtB,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,MAErC,cAAC6B,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,mBACH+B,MAAOrB,EAASrC,WAAW2J,kBAC3B1F,KAAK,WACLL,WAAS,EACTtB,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,MAErC,cAAC0C,EAAA,EAAD,CACAV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OACnBtD,QAAS,SAACW,GAAD,OAAO,EAAKX,WALrB,SAOCuB,EAASrC,WAAW+J,mBAGzB,uBAAOpI,GAAG,cAAcW,UAAU,8BAS1D,cAACrC,EAAD,UAEQ,SAAAoC,GACI,OACI,qBAAKC,UAAU,YAAf,SACI,6BAAKD,EAASrC,WAAW4J,0B,GAjI7BlF,aA2IbC,eA3KA,SAAAC,GAAK,MAAK,CACrB7B,MAAO,CACL8B,UAAWD,EAAME,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ1E,gBAAgB,SAElB6C,KAAM,CACJ8B,MAAO,OACPL,UAAWD,EAAME,QAAQ,IAE3BV,OAAQ,CACNb,OAAQqB,EAAME,QAAQ,EAAG,EAAG,GAC5BvE,gBAAiB,aAGnBgC,aAAc,CACZ6F,SAAU,WACVlD,MAAO,MACPmD,OAAQ,MACRC,IAAI,MACJC,KAAM,MACNhI,gBAAgB,QAChB4E,QAAQ,sBAEVtB,aAAc,CACVtD,gBAAgB,QAChB6E,aAAc,UA+IW,CAACE,WAAU,GAA7BX,CAAoCkF,G,yPC7K5C,IAAMG,GAAaC,YAAOC,IAAPD,CAAH,KACZE,KAAK,IAEHC,KAAI,MAIJC,GAAe1F,YAAW,CACnC2F,KAAM,CACFnH,MAAO,YACPkF,OAAQ,EACRlD,QAAS,UAEboF,MAAO,CACHlC,OAAQ,EACRjD,aAAc,IAElBoF,KAAM,CACFrH,MAAM,SAEVsH,UAAW,CACPtH,MAAM,SAEVuH,MAAO,CACHrC,OAAQ,GACRnD,MAAO,GACP3E,gBAAiB,YACjBoK,OAAQ,sBACR9F,WAAY,EACZ+F,YAAa,GACbzH,MAAO,SAvBawB,CAyBzBkG,KAEUC,GAAiBnG,YAAW,CACrC2F,KAAM,CACJnH,MAAO,UACP,YAAa,CACXA,MAAO,cAGX4H,QAAS,IAPiBpG,EAQ3B,SAACvE,GAAD,OAAW,cAACsH,EAAA,EAAD,aAAUvE,MAAM,WAAc/C,OAE/B4K,GAAmBrG,YAAW,CACvC2F,KACA,CACIM,WAAY,OACZK,YAAa,QAEjBC,GACA,CACIC,UAAW,SACX5K,gBAAiB,UATOoE,CAW7ByG,MAEUC,GAAuB1G,YAAW,CAC3C2F,KACA,CACInH,MAAO,SAEXmI,KACA,CACI,iBAAkB,CACd/K,gBAAiB,YACjB,UAAW,CACPA,gBAAiB,SAGzB,UAAW,CACPA,gBAAiB,UAdOoE,CAiBjC4G,MC1DH7F,IAAMC,SAASC,QAAU,yBACzBF,IAAMC,SAASE,QAAQE,IAAI,+BAAiC,0BA8DxD,SAAS5F,GAAMC,GACX,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGC,QAAQ,SAASC,gBAAgB,aAAgBH,I,IAGlFoL,G,kDACF,WAAYpL,GAAQ,IAAD,8BACf,cAAMA,IAyBV2I,kBAAoB,WAChBvC,QAAQC,IAAI,EAAKrG,MAAM6I,QACvB,IAAM/C,EAAQC,aAAagB,QAAQ,SAEnC,GAAY,OAARjB,EAAc,CAEd,IAOIvE,OACsB8J,IAAtB,EAAKrL,MAAM8H,UACfvG,EAAKuH,SAASC,YAAWjD,GAAOvE,IAChC6E,QAAQC,IAAI9E,EAAG,cACf,EAAKN,SAAL,2BACO,EAAKN,OADZ,IAEIkI,OAAQtH,OAIZA,EAAK,EAAKvB,MAAM8H,SAASnH,MAAM2K,UAC/BlF,QAAQC,IAAI9E,EAAG,cACf,EAAKN,SAAL,2BACO,EAAKN,OADZ,IAEIkI,OAAQtH,EACRgK,UAAU,MAKdjG,IAAMK,IAAN,mCAAsCpE,GA3BvB,CACXkE,QAAS,CACP,eAAgB,mBAChB+F,OAAQ,sBAyBb5F,MAAK,SAAAC,GAEFO,QAAQC,IAAIR,EAASR,KAAKA,MAE1B,IAAIoG,EAAa,EAAK9K,MAAM+K,QAE5BD,EAAa,CACTE,OAAQ9F,EAASR,KAAKA,KAAKuG,OAAOC,OAClCC,OAAQjG,EAASR,KAAKA,KAAK0G,OAC3BC,OAAQnG,EAASR,KAAKA,KAAK4C,OAC3BgE,WAAYpG,EAASR,KAAKA,KAAK6G,WAAWL,OAC1CM,WAAYtG,EAASR,KAAKA,KAAK+G,WAC/BC,IAAKxG,EAASR,KAAKA,KAAKiH,IACxBC,KAAM1G,EAASR,KAAKA,KAAKmH,KAAKX,OAC9BY,MAAO5G,EAASR,KAAKA,KAAKqH,MAC1BC,OAAQ9G,EAASR,KAAKA,KAAKuH,OAAOf,OAClCgB,IAAKhH,EAASR,KAAKA,KAAKyH,IACxBC,WAAYlH,EAASR,KAAKA,KAAK2H,WAC/BC,MAAOpH,EAASR,KAAKA,KAAK6H,MAC1BC,SAAUtH,EAASR,KAAKA,KAAK+H,SAC7BC,YAAaxH,EAASR,KAAKA,KAAKiI,YAAYzB,QAGhD,EAAK5K,SAAL,2BACG,EAAKN,OADR,IAEAkI,OAAQtH,EACRmK,QAASD,QAKZvF,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QA3FjB,EA+FnBzF,QAAU,WACN,IAAMgL,EAAU,EAAK/K,MAAM+K,QAG3B,GAAI6B,MAAM7B,EAAQW,KACd,EAAKpL,SAAS,CACVE,aAAa,6BAIrB,GAAIuK,EAAQW,KAAO,EACf,EAAKpL,SAAS,CACVE,aAAa,uDAOrB,GAAIoM,MAAM7B,EAAQS,YACd,EAAKlL,SAAS,CACVE,aAAa,2CAIrB,GAAIuK,EAAQS,YAAc,EACtB,EAAKlL,SAAS,CACVE,aAAa,0DAOrB,GAAIoM,MAAM7B,EAAQI,QACd,EAAK7K,SAAS,CACVE,aAAa,kCAIrB,GAAIuK,EAAQI,QAAU,EAClB,EAAK7K,SAAS,CACVE,aAAa,uDAOrB,GAAIoM,MAAM7B,EAAQM,QACd,EAAK/K,SAAS,CACVE,aAAa,+BAIrB,GAAGuK,EAAQM,QAAU,EACjB,EAAK/K,SAAS,CACVE,aAAa,yDAOrB,GAAIoM,MAAM7B,EAAQuB,OACd,EAAKhM,SAAS,CACVE,aAAa,iCAIrB,GAAGuK,EAAQuB,OAAS,EAChB,EAAKhM,SAAS,CACVE,aAAa,2DAOrB,GAAIoM,MAAM7B,EAAQqB,YACd,EAAK9L,SAAS,CACVE,aAAa,mCAIrB,GAAGuK,EAAQqB,YAAc,EACrB,EAAK9L,SAAS,CACVE,aAAa,6DAOrB,GAAIoM,MAAM7B,EAAQyB,UACd,EAAKlM,SAAS,CACVE,aAAa,yCAIrB,GAAGuK,EAAQyB,UAAY,EACnB,EAAKlM,SAAS,CACVE,aAAa,mEAOrB,GAA6B,IAA1BuK,EAAQC,OAAO6B,OASlB,GAA0B,IAAvB9B,EAAQmB,IAAIW,OASf,GAA2B,IAAxB9B,EAAQa,KAAKiB,OAAhB,CAQA,IAAIC,EAAgB,EAAK9M,MAAM+K,QAC/B+B,EAAcZ,IAAM7F,KAAKC,MAAMwG,EAAcZ,KAG7CzG,QAAQC,IAAI,UAAUoH,GA3IX,IA6IJ5E,EAAU,EAAKlI,MAAfkI,OAEK,OAATA,EACC,EAAK6E,aAAa,EAAK1N,MAAM8H,SAAS9F,iBAAiByL,GAEvD,EAAKE,iBAAiB9E,EAAQ4E,QAlB9B,EAAKxM,SAAS,CACVE,aAAa,4CAVjB,EAAKF,SAAS,CACVE,aAAa,gCAVjB,EAAKF,SAAS,CACVE,aAAa,uCA9MN,EAwRnByM,kBAAoB,SAACvM,GACjB,IAAM6F,EAAO7F,EAAEC,OAAO4F,KACtB,EAAKjG,UAAS,SAAC0F,GACX,IAAMkH,EAAclH,EAAK+E,QAEzB,OADAmC,EAAY3G,GAAQ4B,SAASzH,EAAEC,OAAOE,OAC/B,2BACA,EAAKb,OADZ,IAEI+K,QAAUmC,QA/RH,EAoSnBC,kBAAoB,SAACzM,GACjB,IAAM6F,EAAO7F,EAAEC,OAAO4F,KACtBd,QAAQC,IAAIa,GACZ,EAAKjG,UAAS,SAAC0F,GACX,IAAMkH,EAAclH,EAAK+E,QAKzB,OAHImC,EAAY3G,GADL,QAAPA,GACqB2G,EAAY3G,GAEjB7F,EAAEC,OAAOE,MACtB,2BACA,EAAKb,OADZ,IAEI+K,QAAUmC,QA/SH,EAoTnBE,mBAAqB,SAAC1M,EAAEG,EAAM0F,GAC1B,EAAKjG,UAAS,SAAC0F,GACX,IAAMkH,EAAclH,EAAK+E,QAEzB,OADAmC,EAAY3G,GAAQ1F,EACb,2BACA,EAAKb,OADZ,IAEI+K,QAAUmC,QA1TH,EAmUnBpM,kBAAoB,SAACC,EAAMC,GACR,cAAXA,GAGJ,EAAKV,SAAS,CACVE,aAAa,MAtUjB,EAAKR,MAAQ,CACTkI,OAAQ,KACRmF,QAAQ,EACR7M,aAAa,GACbuK,QACA,CACIC,OAAQ,GACRG,OAAQmC,IACRjC,OAAQiC,IACRhC,WAAY,GACZE,WAAY8B,IACZ5B,IAAK4B,IACL1B,KAAM,GACNE,MAAO,GACPE,OAAQ,GACRE,KAAK,EACLE,WAAYkB,IACZhB,MAAOgB,IACPd,SAAUc,IACVZ,YAAa,KArBN,E,kGAoPArL,EAAiB0J,G,iFAC1B9J,KAAK5B,MAAMkO,YAAYlM,EAAiB0J,G,OAE9C9J,KAAKX,SAAS,CACV+M,QAAQ,I,yLAyBOnF,EAAQ6C,G,wEAC3BtF,QAAQC,IAAIwC,G,SACNjH,KAAK5B,MAAM2N,iBAAiB9E,EAAQ6C,G,OAE1CnD,MAAM,2B,wIAuDD,IAAD,OACG1G,EAAWD,KAAK5B,MAAhB6B,QADH,EAE2BD,KAAKjB,MAA7BQ,EAFH,EAEGA,aACP,IAAe,IAHX,EAEiB6M,OAEjB,OAAO,cAAC,IAAD,CAAUlM,GAAG,WAJpB,IAMG+G,EAAUjH,KAAKjB,MAAfkI,OAEP,OADAzC,QAAQC,IAAIzE,KAAKjB,MAAM+K,SAEnB,cAAC7L,EAAD,UAEI,SAAAoC,GACI,IAAMkM,EAAc,CAChB,CACG3M,MAAO,EACP8B,MAAOrB,EAASrC,WAAWwO,KAE9B,CACI5M,MAAM,GACN8B,MAAOrB,EAASrC,WAAWyO,QAE9B,CACG7M,MAAM,IACN8B,MAAOrB,EAASrC,WAAW0O,OAmC7BC,EAAmB,CACrB,CACI/M,MAAM,EACN8B,MAAOrB,EAASrC,WAAWwO,KAE/B,CACI5M,MAAM,GACN8B,MAAMrB,EAASrC,WAAWyO,QAE9B,CACI7M,MAAM,IACN8B,MAAOrB,EAASrC,WAAW0O,OAGnC,OACI,sBAAKpM,UAAWL,EAAQM,aAAcW,MAAO,CAACoF,IAAI,GAAD,OAAe,OAAXW,EAAiB,MAAM,QAA5E,UACI,cAACzG,EAAA,EAAD,CAAUF,UAAWL,EAAQQ,eAAgBC,KAAqB,KAAfnB,EACzCoB,iBAAkB,IAAMC,QAAS,EAAKf,kBADhD,SAEI,cAAC,GAAD,CAAOS,UAAWL,EAAQY,YAAaD,QAAS,EAAKf,kBAAmBiB,SAAS,QAAjF,SACKvB,MAGT,sBAAKe,UAAWL,EAAQc,MAAxB,UAEe,OAAXkG,EACA,cAACjG,EAAA,EAAD,CAAYC,UAAU,KAAK3C,QAAQ,KAAK4C,MAAO,CAACC,MAAO,QAAQyL,aAAa,QAA5E,SACKvM,EAASrC,WAAW6O,kBAEzB,KAGJ,uBAAMvM,UAAWL,EAAQmB,KAAMC,YAAU,EAAzC,UACI,eAACuE,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAIgK,QAAQ,gBAAgB7J,WAAW,SAAhE,UACI,cAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAOrB,EAASrC,WAAWyM,IAC3BnF,KAAK,MACL3F,GAAG,MACHiC,WAAS,EACTT,MAAM,QACNb,UAAWL,EAAQ4B,aACnBjC,MAAO,EAAKb,MAAM+K,QAAQW,IAC1BjL,SAAU,SAACC,GAAD,OAAO,EAAKuM,kBAAkBvM,QAGhD,cAACmG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAOrB,EAASrC,WAAW+O,iBAC3BzH,KAAK,aACL3F,GAAG,aACHiC,WAAS,EACTT,MAAM,QACNb,UAAWL,EAAQ4B,aACnBjC,MAAO,EAAKb,MAAM+K,QAAQS,WAC1B/K,SAAU,SAACC,GAAD,OAAO,EAAKuM,kBAAkBvM,QAGhD,cAACmG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAOrB,EAASrC,WAAWkM,OAAS,QACpC5E,KAAK,SACL3F,GAAG,SACHiC,WAAS,EACTT,MAAM,QACNb,UAAWL,EAAQ4B,aACnBjC,MAAO,EAAKb,MAAM+K,QAAQI,OAC1B1K,SAAU,SAACC,GAAD,OAAO,EAAKuM,kBAAkBvM,QAGhD,cAACmG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAOrB,EAASrC,WAAWoM,OAAS,QACpC9E,KAAK,SACL3F,GAAG,SACHiC,WAAS,EACTT,MAAM,QACNb,UAAWL,EAAQ4B,aACnBjC,MAAO,EAAKb,MAAM+K,QAAQM,OAC1B5K,SAAU,SAACC,GAAD,OAAO,EAAKuM,kBAAkBvM,QAGhD,cAACmG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAOrB,EAASrC,WAAWqN,MAAQ,QACnC/F,KAAK,QACL3F,GAAG,QACHiC,WAAS,EACTT,MAAM,QACNb,UAAWL,EAAQ4B,aACnBjC,MAAO,EAAKb,MAAM+K,QAAQuB,MAC1B7L,SAAU,SAACC,GAAD,OAAO,EAAKuM,kBAAkBvM,QAGhD,cAACmG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAOrB,EAASrC,WAAWmN,WAAa,QACxC7F,KAAK,aACL3F,GAAG,aACHiC,WAAS,EACTT,MAAM,QACNb,UAAWL,EAAQ4B,aACnBjC,MAAO,EAAKb,MAAM+K,QAAQqB,WAC1B3L,SAAU,SAACC,GAAD,OAAO,EAAKuM,kBAAkBvM,QAGhD,cAACmG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAOrB,EAASrC,WAAWuN,SAAW,QACtCjG,KAAK,WACL3F,GAAG,WACHiC,WAAS,EACTT,MAAM,QACNb,UAAWL,EAAQ4B,aACnBjC,MAAO,EAAKb,MAAM+K,QAAQyB,SAC1B/L,SAAU,SAACC,GAAD,OAAO,EAAKuM,kBAAkBvM,QAGhD,eAACmG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACI,cAAC/E,EAAA,EAAD,CAAYrB,GAAG,2BAA2BqN,cAAY,EAAC9L,MAAO,CAACC,MAAM,SAArE,SACKd,EAASrC,WAAWiP,cAEzB,cAAC5E,GAAD,CACI6E,kBAAgB,2BAChBC,KAAM,KACNC,MAAOb,EACP3M,MAAO,EAAKb,MAAM+K,QAAQiB,OAC1BsC,kBAAmB,SAAC5N,EAAE6N,GAAH,OAAW,EAAKnB,mBAAmB1M,EAAE6N,EAAI,gBAGpE,eAAC1H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACI,cAAC/E,EAAA,EAAD,CAAYrB,GAAG,2BAA2BqN,cAAY,EAAC9L,MAAO,CAACC,MAAM,SAArE,SACKd,EAASrC,WAAW6M,QAEzB,cAACxC,GAAD,CACI6E,kBAAgB,2BAChBC,KAAM,KACNC,MA3ML,CACnB,CACIxN,MAAO,EACP8B,MAAM,QAEV,CACI9B,MAAM,GACN8B,MAAM,SAEN,CACA9B,MAAM,IACN8B,MAAM,QAiMc9B,MAAO,EAAKb,MAAM+K,QAAQe,MAC1BwC,kBAAmB,SAAC5N,EAAE6N,GAAH,OAAW,EAAKnB,mBAAmB1M,EAAE6N,EAAI,eAGpE,eAAC1H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACI,cAAC/E,EAAA,EAAD,CAAYrB,GAAG,2BAA2BqN,cAAY,EAAC9L,MAAO,CAACC,MAAM,SAArE,SACKd,EAASrC,WAAWuP,iBAEzB,cAAClF,GAAD,CACI6E,kBAAgB,2BAChBC,KAAM,KACNC,MAAOT,EACP/M,MAAO,EAAKb,MAAM+K,QAAQ2B,YAC1B4B,kBAAmB,SAAC5N,EAAE6N,GAAH,OAAW,EAAKnB,mBAAmB1M,EAAE6N,EAAI,qBAGpE,eAAC1H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACI,cAAC/E,EAAA,EAAD,CAAYrB,GAAG,2BAA2BqN,cAAY,EAAC9L,MAAO,CAACC,MAAM,SAArE,SACKd,EAASrC,WAAWqM,aAEzB,cAAChC,GAAD,CACI6E,kBAAgB,2BAChBC,KAAM,KACNC,MArNA,CACpB,CACIxN,MAAM,EACN8B,MAAM,OAEV,CACI9B,MAAM,GACN8B,MAAM,MAEV,CACI9B,MAAM,GACN8B,MAAM,KAEV,CACI9B,MAAM,GACN8B,MAAM,MAuMU9B,MAAO,EAAKb,MAAM+K,QAAQO,WAC1BgD,kBAAmB,SAAC5N,EAAE6N,GAAH,OAAW,EAAKnB,mBAAmB1M,EAAE6N,EAAI,oBAGpE,cAAC1H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG7E,MAAO,CAACiI,UAAU,UAApC,SACI,eAACqE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWxM,UAAU,SAASC,MAAO,CAACC,MAAM,SAA5C,SAAuDd,EAASrC,WAAW+L,SAC3E,eAAC2D,EAAA,EAAD,CAAYC,aAAW,SAASrI,KAAK,SAASsI,QAAM,EAAChO,MAAO,EAAKb,MAAM+K,QAAQC,OAASvK,SAAU,SAACC,GAAD,OAAO,EAAKyM,kBAAkBzM,IAAhI,UACI,cAAC+F,EAAA,EAAD,CAAkB5F,MAAM,IAAI6F,QAAS,cAACuC,GAAD,IAAetG,MAAOrB,EAASrC,WAAW6P,MAAO3M,MAAO,CAACC,MAAM,WACpG,cAACqE,EAAA,EAAD,CAAkB5F,MAAM,IAAI6F,QAAS,cAACuC,GAAD,IAAetG,MAAOrB,EAASrC,WAAW8P,IAAO5M,MAAO,CAACC,MAAM,mBAIhH,cAACyE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG7E,MAAO,CAACiI,UAAU,UAApC,SACI,eAACqE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWxM,UAAU,SAASC,MAAO,CAACC,MAAM,SAA5C,iBACA,eAACuM,EAAA,EAAD,CAAYC,aAAW,MAAMrI,KAAK,MAAMsI,QAAM,EAAChO,MAAO,EAAKb,MAAM+K,QAAQmB,IAAMzL,SAAU,SAACC,GAAD,OAAO,EAAKyM,kBAAkBzM,IAAvH,UACI,cAAC+F,EAAA,EAAD,CAAkB5F,OAAO,EAAO6F,QAAS,cAACuC,GAAD,IAAetG,MAAOrB,EAASrC,WAAW+P,IAAK7M,MAAO,CAACC,MAAM,WACtG,cAACqE,EAAA,EAAD,CAAkB5F,OAAO,EAAO6F,QAAS,cAACuC,GAAD,IAAetG,MAAOrB,EAASrC,WAAWgQ,GAAK9M,MAAO,CAACC,MAAM,mBAIlH,cAACyE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI7E,MAAO,CAACiI,UAAU,UAArC,SACI,eAACqE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWxM,UAAU,SAASC,MAAO,CAACC,MAAM,QAASgI,UAAU,UAA/D,SAA2E9I,EAASrC,WAAWiQ,YAC/F,eAACP,EAAA,EAAD,CAAYC,aAAW,OAAOrI,KAAK,OAAO4I,KAAG,EAACtO,MAAO,EAAKb,MAAM+K,QAAQa,KAAMnL,SAAU,SAACC,GAAD,OAAO,EAAKyM,kBAAkBzM,IAAtH,UACI,cAAC+F,EAAA,EAAD,CAAkB5F,MAAM,iBAAiB6F,QAAS,cAACuC,GAAD,IAAetG,MAAOrB,EAASrC,WAAWmQ,aAAcjN,MAAO,CAACC,MAAM,WACxH,cAACqE,EAAA,EAAD,CAAkB5F,MAAM,aAAa6F,QAAS,cAACuC,GAAD,IAAetG,MAAOrB,EAASrC,WAAWoQ,MAAOlN,MAAO,CAACC,MAAM,WAC7G,cAACqE,EAAA,EAAD,CAAkB5F,MAAM,aAAQ6F,QAAS,cAACuC,GAAD,IAAetG,MAAOrB,EAASrC,WAAWqQ,KAAOnN,MAAO,CAACC,MAAM,sBAKxH,cAACgB,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OACnBtD,QAAS,EAAKA,QALlB,SAQmB,OAAXmI,EAAiB5G,EAASrC,WAAWsQ,SAAUjO,EAASrC,WAAWuQ,uB,GApnBhF7L,aAkoBZC,gBAlsBI,SAAAC,GAAK,MACpB,CACE7B,MAAO,CACL8B,UAAW,kBACXE,QAAS,OACTC,cAAe,SACfC,WAAY,UAGduL,YAAa,CACXjN,OAAQ,qBACRkN,SAAU,MACVrI,SAAS,WACTG,KAAK,MACLhI,gBAAgB,eAElB6C,KAAM,CACJ8B,MAAO,OACPL,UAAW,OAEbT,OAAQ,CACNb,OAAQ,mBACRhD,gBAAiB,aAGnBgC,aAAc,CACZgB,OAAQ,OACRwB,QAAS,OACTG,MAAO,MACP3E,gBAAgB,QAChB4E,QAAQ,sBAEVtB,aAAc,CACVtD,gBAAgB,QAChB6E,aAAc,MACdqL,SAAS,MACT1L,QAAQ,QAGZ2L,MAAO,CACL,YAAa,CACXvN,MAAO,UAGX4H,QAAS,CACL4F,YAAY,SAGhB9N,YAAa,CACX,yBAA0B,CACxBtC,gBAAiB,cAGrBkC,eAAgB,CACd,qBAAsB,CACpB4C,SAAU,WA2oBa,CAACC,WAAU,GAA7BX,CAAqC6G,I,OC5tBrC,ICMf9F,IAAMC,SAASC,QAAU,yB,IA6EVgL,G,kDA1EX,WAAYxQ,GAAQ,IAAD,8BACf,cAAMA,IACDW,MAAQ,CACb8P,KAAM,OACNC,aAAc,GACdC,aAAc,IALC,E,8LAUX7K,EAAQC,aAAagB,QAAQ,SAC7B0J,EAAO,OACC,MAAT3K,E,mBAEC2K,EAAO1H,YAAWjD,GAAO2K,KACnBG,EAAS,CACXnL,QAAS,CACP,eAAgB,mBAChB+F,OAAQ,qBAGF,SAATiF,E,gCAEOnL,IAAMK,IAAI,oBAAsBoD,YAAWjD,GAAOvE,GAAIqP,GAC3DhL,MAAK,SAACC,GACHO,QAAQC,IAAI,WAAWR,EAASR,MAChC,IAAIqL,EAAe,GACnBA,EAAaG,KAAKhL,EAASR,KAAKyL,KAAKC,UAAUlL,EAASR,KAAKyL,KAAKE,UAClE,EAAK/P,SAAS,CACV0P,aAAc9K,EAASR,KAAKyL,KAAKH,aACjCD,aAAcA,OAGrBxK,OAAM,SAACC,GACJC,QAAQC,IAAI,QAAQF,M,OAIhCvE,KAAKX,SAAS,CACVwP,KAAMA,I,qIAKV,IACIQ,EACJ,OAFarP,KAAKjB,MAAM8P,MAIpB,IAAK,OACDQ,EACI,qBAAK/O,UAAU,aACnB,MACJ,IAAK,OACD,IAAMwO,EAAe9O,KAAKjB,MAAM+P,aAChCO,EACA,qBAAK/O,UAAU,WAAf,SACI,qBAAIY,MAAO,CAACC,MAAO,QAASgI,UAAW,UAAvC,2BAAiE2F,EAAa,GAAKA,EAAa,QAEpG,MACJ,IAAK,QACDO,EACI,qBAAK/O,UAAU,WAAf,SACI,oBAAIA,UAAU,UAAd,kCAMhB,OACI,qBAAKY,MAAO,CAACgC,MAAM,QAASkD,SAAS,YAArC,SAAmDiJ,Q,GAtE5C3M,a,mDCEnBgB,IAAMC,SAASC,QAAU,yBAEzB,IA8BM0L,G,kDACF,WAAYlR,GAAQ,IAAD,8BACf,cAAMA,IA4BVmR,UAAY,WAER,IAAMP,EAAS,CACXnL,QAAS,CACL,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,MAGzCzB,IAAMK,IAAI,iBAAmB,EAAK3F,MAAMsR,SAASV,GAChDhL,MAAM,SAAA2L,GACHnL,QAAQC,IAAI,WAAWkL,EAAElM,MAEzBU,aAAaC,QAAQ,QAAQuL,EAAE9L,QAAF,UAC7B,EAAKxE,UAAS,WACV,IAAIuQ,EAAQD,EAAElM,KAAKoM,SAEnB,OADAD,EAAME,KAAK,EAAKC,WAAW,SACpB,CAAEC,aAAcJ,EAAOK,QAAS,UAhDhC,EAqDnBF,WAAa,SAACG,GACV,OAAO,SAASC,EAAGC,GACf,OAAID,EAAED,GAAQE,EAAEF,GACL,EACAC,EAAED,GAAQE,EAAEF,IACX,EAEL,IA5DI,EAgEnBG,aAAe,SAACvQ,GACZ,IAAIwQ,EAAI,EAAKvR,MAAMkR,SACU,IAAzBnQ,EAAMJ,OAAOqJ,QACb,EAAK1J,UAAS,WACV,MAAO,CAAC4Q,QAASK,EAAE,MAIvB,EAAKjR,UAAS,WACV,MAAO,CAAC4Q,QAASK,EAAE,OAzEZ,EA8EnBC,WAAa,SAACtO,GACV,EAAK5C,SAAS,CACV4C,KAAKA,KAhFM,EAoFnBuO,cAAgB,WACZ,EAAKpS,MAAMqS,OAAO,EAAK1R,MAAMkR,UAnF7B,EAAKlR,MAAQ,CACTiR,aAAc,GACdC,QAAS,EACTjJ,QAAQ,GALG,E,+DASA0J,GACXA,EAAUhB,WAAa1P,KAAK5B,MAAMsR,UACpC1P,KAAKuP,c,0CAKP,IACIvI,GAAS,EACD,MAFA7C,aAAagB,QAAQ,WAI7B6B,GAAS,EACThH,KAAKX,SAAS,CACV2H,OAAQA,KAGZA,GACAhH,KAAKuP,c,+BA8DH,IAAD,OACDK,EAAQ5P,KAAKjB,MAAMiR,aAChB/P,EAAYD,KAAK5B,MAAjB6B,QACHgC,EAAO,GACX,OAAGjC,KAAKjB,MAAMiI,OAET,cAAC/I,EAAD,UAEQ,SAAAoC,GACI,OACG,qBAAKC,UAAWL,EAAQM,aAAxB,SACA,qBAAKD,UAAWL,EAAQc,MAAxB,SACI,uBAAMT,UAAWL,EAAQmB,KAAMC,YAAU,EAAzC,UACKuO,EAAMe,KAAI,SAAChB,EAAGiB,GACX,OAAO,8BACF3O,IAAO0N,EAAE1N,KACN,cAACuD,EAAA,EAAD,CAAkBlF,UAAWL,EAAQuF,iBACjCC,QAAS,cAACqD,GAAD,CAAgBtJ,SAAU,EAAK6Q,aAChBQ,KAAM,cAAC,KAAD,CAA0BC,SAAS,UACzCC,YAAa,cAAC,KAAD,CAAcD,SAAS,YAC5DpP,MAAOiO,EAAEE,WAGjB,gCACI,uBAAOvP,UAAU,qBAAjB,SAAuCqP,EAAE1N,OAAa,uBACtD,cAACuD,EAAA,EAAD,CAAkBlF,UAAWL,EAAQuF,iBACjCC,QAAS,cAACqD,GAAD,CAAgBtJ,SAAU,EAAK6Q,aAAc/K,KAAK,WACnCuL,KAAM,cAAC,KAAD,CAA0BC,SAAS,UACzCC,YAAa,cAAC,KAAD,CAAcD,SAAS,YAC5DpP,MAAOiO,EAAEE,WAEb,iCAAS5N,EAAK0N,EAAE1N,WAjBP0N,EAAEhQ,OAsBvB,cAACwC,EAAA,EAAD,CACQV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OACnBtD,QAAS,EAAK0R,cALtB,SAOSnQ,EAASrC,WAAWqE,mBAWrD,cAACpE,EAAD,UAEQ,SAAAoC,GACI,OACI,qBAAKC,UAAU,YAAf,SACA,6BAAKD,EAASrC,WAAW4J,0B,GApJzBlF,aA+JbC,gBA7LA,SAAAC,GAAK,MAAK,CACrB7B,MAAO,CACL8B,UAAWD,EAAME,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEd7B,KAAM,CACJ8B,MAAO,OACPL,UAAWD,EAAME,QAAQ,IAE3BvC,aAAc,CACVgB,OAAQ,OACR2B,MAAO,MACP0F,WAAY,MACZK,YAAa,MACb1K,gBAAgB,QAChB4E,QAAQ,sBAEZf,OAAQ,CACNb,OAAQqB,EAAME,QAAQ,EAAG,EAAG,GAC5BvE,gBAAiB,aAEnBiH,iBAAiB,CACb,6BAA6B,CACzBrE,MAAO,aAoKe,CAAEmC,WAAW,GAAhCX,CAAwC2M,ICrMvD5L,IAAMC,SAASC,QAAU,yB,IA2FVoN,G,kDAxFX,WAAa5S,GAAQ,IAAD,8BAChB,cAAMA,IAmBV2I,kBAAoB,WAChB,EAAK1H,SAAS,CACV4R,uBAAwB,EAAK7S,MAAM8H,SAASnH,MAAMkS,0BAtBtC,EA2DpB7O,OAAS,SAAC6N,GAEN,IAAIiB,EAAS,EAAKnS,MAAMoS,YACpBC,EAAa,EAAKrS,MAAM2Q,SAC5B0B,EAAWF,GAAQjB,QAAUA,EAC7BzL,QAAQC,IAAI,aAAa2M,EAAWF,IACvB,IAATA,EACA,EAAKG,cAAcD,GAGnB,EAAK/R,UAAU,WACX,MAAO,CAAC8R,YAAaD,EAAO,EAAGxB,SAAU0B,OApEjD,EAAKrS,MAAQ,CACTkS,wBAAwB,EACxBvB,SACA,CACI,CAAEpK,KAAM,YAAa2K,QAAS,GAC9B,CAAE3K,KAAM,iBAAiB2K,QAAS,GAClC,CAAE3K,KAAM,QAAQ2K,QAAS,GACzB,CAAE3K,KAAM,cAAc2K,QAAS,GAC/B,CAAE3K,KAAM,YAAa2K,QAAS,GAC9B,CAAE3K,KAAM,iBAAiB2K,QAAS,GAClC,CAAE3K,KAAM,QAAQ2K,QAAS,GACzB,CAAE3K,KAAM,cAAc2K,QAAS,IAEnCkB,YAAa,EACb9M,UAAU,GAhBE,E,mGA0BAZ,G,uFACV6N,EAAO,CACTL,uBAAyBjR,KAAKjB,MAAMkS,uBACpCM,KAAM,CACFC,UAAW/N,EAAK,GAAGwM,QACnBwB,WAAYhO,EAAK,GAAGwM,QACpByB,gBAAiBjO,EAAK,GAAGwM,QACzB0B,MAAOlO,EAAK,GAAGwM,QACf2B,UAAWnO,EAAK,GAAGwM,QACnB4B,WAAYpO,EAAK,GAAGwM,QACpB6B,gBAAiBrO,EAAK,GAAGwM,QACzB8B,MAAOtO,EAAK,GAAGwM,UAGjBjB,EAAS,CACXnL,QAAS,CACL,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,M,SAGnCzB,IAAMI,KAAK,iCAAkCwN,EAAMtC,GACpDhL,MAAK,SAACC,GACHE,aAAaC,QAAQ,QAAQH,EAASJ,QAAT,UAC7B,EAAKxE,SAAS,CACVgF,UAAU,OAGjBC,OAAM,SAACC,GAASC,QAAQC,IAAI,QAAQF,M,sIAqBzC,IAAiB,IADIvE,KAAKjB,MAAlBsF,SAEJ,OAAO,cAAC,IAAD,CAAUnE,GAAG,cACxB,IAAI8R,EAAKhS,KAAKjB,MAAMoS,YACpB,OACI,8BACI,cAAC,GAAD,CAAeV,OAAQzQ,KAAKoC,OAAQsN,SAAY1P,KAAKjB,MAAM2Q,SAASsC,GAAI1M,a,GAnFxD5C,a,gGCgC1BuP,IAPkBtP,YAAW,CAC/BjB,MACA,CACEP,MAAM,UAHYwB,CAMrB6C,KACqB7C,aAAW,SAACC,GAAD,MAAY,CAC3CsP,KAAM,CACF3T,gBAAiB,YACjB4C,MAAO,QACPwH,OAAQ,mBAEZ2I,KAAM,CACFR,SAAU,GACV3P,MAAM,QACN5C,gBAAgB,mBAChBoK,OAAQ,sBAVQhG,CAYlBwP,OAEEC,GAAiBzP,aAAW,SAACC,GAAD,MAAY,CAC5C0F,KAAM,CACJ,qBAAsB,CACpB/J,gBAAiBqE,EAAMyP,QAAQC,OAAOC,WAHrB5P,CAMnB6P,MAEEC,GAAc9P,aAAW,SAACC,GAAD,MAAY,CACvC0F,KAAM,CACF/J,gBAAgB,YAFJoE,CAIhB+P,MAENhP,IAAMC,SAASC,QAAU,yB,IAqCnB+O,G,kDACF,WAAYvU,GAAQ,IAAD,8BACf,cAAMA,IAqBVwU,aAAa,WAGT,IAAM5D,EAAS,CACXnL,QAAS,CACL,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,MAGzCzB,IAAMK,IAAI,4BAA4BiL,GACrChL,MAAM,SAAA2L,GAEHxL,aAAaC,QAAQ,QAAQuL,EAAE9L,QAAF,UAC7BW,QAAQC,IAAIkL,EAAElM,MACd,EAAKpE,UAAS,WAAK,MAAO,CAACwT,eAAelD,EAAElM,KAAKqP,gBAEpDxO,OAAM,SAAAC,GAAK,OAAEC,QAAQC,IAAIF,OAzCX,EA2CnBwO,SA3CmB,sBA2CV,kCAAA5C,EAAA,6DACCnB,EAAS,CACXnL,QAAS,CACL,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,MAKrC1B,EAAO,EAAK1E,MAAM0E,KAClBuP,EACJ,CACI,OAAUC,YAAU9O,aAAagB,QAAQ,UAAUxF,GACnD,KAAQ,CACJ,SAAY8D,EAAKyP,SACjB,YAAezP,EAAK0P,YACpB,cAAiB1P,EAAK2P,cACtB,mBAAsB3P,EAAK4P,mBAC3B,wBAA2B5P,EAAK6P,wBAChC,sBAAyB7P,EAAK8P,sBAC9B,UAAa9P,EAAK+P,YAGtBC,EAAMrO,KAAKsO,UAAUV,GACzBxO,QAAQC,IAAI,MAAMuO,GAClBxO,QAAQC,IAAI,MAAMgP,GA5Bb,SA6BC/P,IAAMI,KAAK,qCAAqCkP,EAAIhE,GACzDhL,MAAM,SAAA2L,GACHxL,aAAaC,QAAQ,QAAQuL,EAAE9L,QAAF,UAC7BW,QAAQC,IAAI,yBACZ,EAAKpF,UAAS,SAAAsU,GAEN,IAAI5U,EAAQ4U,EAEZ,OADA5U,EAAM6U,WAAW,yBACV,CAAC7U,eAKnBuF,OACG,SAACC,GAEG,EAAKlF,UAAS,SAAAsU,GAGV,IAAI5U,EAAQ4U,EAEZ,OADA5U,EAAM8U,SAAS,iBACR,CAAC9U,YAEZyF,QAAQC,IAAIF,MApDf,2CA3CU,EAwGnBuP,SAAS,WAOL,IAAM9E,EAAS,CACXnL,QAAS,CACL,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,MAGrC4O,EAAY5P,aAAagB,QAAQ,SACjCjB,EAAQ+O,YAAUc,GACtBvP,QAAQC,IAAI,kBACZD,QAAQC,IAAIP,GACZ,IAAI8P,EAAOC,OAAO/P,EAAMvE,IACxB+D,IAAMI,KAAK,oCAAoCkQ,EAAKhF,GACnDhL,MAAM,SAAA2L,GACHxL,aAAaC,QAAQ,QAAQuL,EAAE9L,QAAF,UAC7BW,QAAQC,IAAI,0BAA0BkL,EAAElM,KAAKA,MAC7C,EAAKpE,UAAS,WAAK,MAAO,CAACoE,KAAKkM,EAAElM,KAAKA,YAE1Ca,OAAM,SAAAC,GAAK,OAAEC,QAAQC,IAAIF,OAnIX,EAsInBwC,kBAAoB,WAChB,IACIC,GAAS,EACD,MAFA7C,aAAagB,QAAQ,WAGjC6B,GAAS,GACT,EAAK3H,SAAS,CACV2H,OAAQA,IAEhB,EAAK8M,YA9Ic,EAsKnBI,sBAAsB,SAACtU,EAAME,GACzB,EAAKT,SAAL,uCAAc,WAAON,GAAP,eAAAoR,EAAA,6DACNwD,EAAY5U,GACN0E,KAAK4P,mBAAmBzT,EAClC4E,QAAQC,IAAIkP,GAHF,SAIG,CAACA,aAJJ,mFAAd,kCAAA3T,KAAA,gBAMAwE,QAAQC,IAAI,SAAS,EAAK1F,MAAM0E,OA7KjB,EAgLnB0Q,wBAAwB,SAACvU,EAAME,GAC3B,EAAKT,SAAL,uCAAc,WAAON,GAAP,eAAAoR,EAAA,6DACNwD,EAAY5U,GACN0E,KAAK6P,wBAAwB1T,EACvC4E,QAAQC,IAAIkP,GAHF,SAIG,CAACA,aAJJ,mFAAd,kCAAA3T,KAAA,gBAMAwE,QAAQC,IAAI,SAAS,EAAK1F,MAAM0E,OAvLjB,EA0LnB2Q,wBAAwB,SAACxU,EAAME,GAC3B,EAAKT,SAAL,uCAAc,WAAON,GAAP,eAAAoR,EAAA,6DACNwD,EAAY5U,GACN0E,KAAK8P,sBAAsB3T,EACrC4E,QAAQC,IAAIkP,GAHF,SAIG,CAACA,aAJJ,mFAAd,kCAAA3T,KAAA,gBAMAwE,QAAQC,IAAI,SAAS,EAAK1F,MAAM0E,OAjMjB,EAqMnB5D,kBAAoB,SAACC,EAAMC,GAErB,EAAKV,UAAS,SAAAsU,GAER,IAAI5U,EAAQ4U,EAGZ,OAFA5U,EAAM6U,WAAW,GACjB7U,EAAM8U,SAAS,GACR,CAAC9U,aAzMhB,EAAKA,MAAQ,CACTiI,QAAQ,EACRoF,QAAQ,EACRzC,UAAU,EACVlG,KAAK,CACD4Q,wBAAyB,EACzBnB,SAAU,GACVE,cAAe,GACfC,mBAAoB,GACpBC,wBAAyB,GACzBC,sBAAuB,GACvBe,QAAQ,GACRC,UAAW,IAEf1B,eAAe,IAEnB,EAAK2B,aAAe,EAAKA,aAAaC,KAAlB,iBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,iBApBL,E,yDAiJN3U,GACTE,KAAKX,UAAS,SAACsV,GACX,IAAIC,EAAUD,EAAUlR,KAExB,OADAmR,EAAQ9U,EAAMJ,OAAOC,IAAIG,EAAMJ,OAAOE,MAC/B,CAAC6D,KAAMmR,Q,mCAGT9U,GAC+B,KAArCE,KAAKjB,MAAM0E,KAAK4P,oBAE0B,KAA1CrT,KAAKjB,MAAM0E,KAAK6P,yBAEwB,KAAxCtT,KAAKjB,MAAM0E,KAAK8P,uBAEnBvT,KAAK+S,a,+BAgDC,IAAD,aAGE8B,EAAY,UAAG7U,KAAKjB,aAAR,aAAG,EAAY0E,KAH7B,EAKmBzD,KAAKjB,MAArBqN,EALH,EAKGA,OAAQ3I,EALX,EAKWA,KAETxD,EAAWD,KAAK5B,MAAhB6B,QAEgB,UAAAD,KAAKjB,aAAL,SAAY6U,WACd,UAAA5T,KAAKjB,aAAL,SAAY8U,SAEjC,OAAe,IAAXzH,EACO,cAAC,IAAD,CAAUlM,GAAG,MACrBF,KAAKjB,MAAMiI,QAA4B,SAAlBhH,KAAKjB,MAAM8P,KAE/B,cAAC5Q,EAAD,UAEQ,SAAAoC,GACI,OACI,qBAAKC,UAAWL,EAAQM,aAAxB,SACI,+BACI,eAACqF,EAAA,EAAD,CAAM9C,QAAS,EAAG+C,WAAS,EAAC5C,WAAW,SAAS6J,QAAQ,SAAxD,UACI,cAAClH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC+O,GAAA,EAAD,CAASC,MAAO1U,EAASrC,WAAWgX,sBAApC,SACI,cAAC1T,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPG,MAAOrB,EAASrC,WAAWiX,SAC3BtV,GAAG,WACHC,MAAK,OAAEiV,QAAF,IAAEA,OAAF,EAAEA,EAAc3B,SACrB1R,UAAQ,EACRC,WAAS,EACTG,WAAS,EACTsT,SAAU,EAAKnW,MAAM4K,SACrBwL,WAAS,EACT7U,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAK+U,aAAa/U,UAMjD,cAACmG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SAEI,cAAC+O,GAAA,EAAD,CAASC,MAAM,wDAAf,SACI,cAACzT,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPG,MAAOrB,EAASrC,WAAWoX,cAC3BzV,GAAG,gBACHC,MAAK,OAAEiV,QAAF,IAAEA,OAAF,EAAEA,EAAczB,cACrB5R,UAAQ,EACRC,WAAS,EACTG,WAAS,EACTsT,SAAU,EAAKnW,MAAM4K,SACrBwL,WAAS,EACT7U,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAK+U,aAAa/U,UAKjD,cAACmG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,GAAhB,SACI,cAAC/E,EAAA,EAAD,CAAYC,UAAU,KAAK3C,QAAQ,KAAnC,SACK+B,EAASrC,WAAWqX,eAG7B,cAACzP,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACA,eAACyH,EAAA,EAAD,CAAa0H,SAAU,EAAKnW,MAAM4K,SAAlC,UACI,cAAC8D,EAAA,EAAD,CAAWxM,UAAU,SAASC,MAAO,CAACC,MAAM,SAA5C,SAAuDd,EAASrC,WAAWsX,QACvE,eAAC5H,EAAA,EAAD,CAAYC,aAAYtN,EAASrC,WAAWsX,MAAOhQ,KAAK,WAAY9F,SAAU,EAAKgV,aAAnF,UACI,cAAChP,EAAA,EAAD,CAAkB5F,MAAM,UAAUJ,SAAU,SAACI,GAAD,OAAS,EAAKsU,sBAAsB,UAAUtU,IAAQmJ,QAA4C,YAAvB,OAAZ8L,QAAY,IAAZA,OAAA,EAAAA,EAAcxB,oBAA2C5N,QAAS,cAACuC,GAAD,IAAgBtG,MAAOrB,EAASrC,WAAWuX,YAAarU,MAAO,CAACC,MAAM,WACnP,cAACqE,EAAA,EAAD,CAAkB5F,MAAM,WAAWJ,SAAU,SAACI,GAAD,OAAS,EAAKsU,sBAAsB,WAAWtU,IAAQmJ,QAA4C,aAAvB,OAAZ8L,QAAY,IAAZA,OAAA,EAAAA,EAAcxB,oBAA4C5N,QAAS,cAACuC,GAAD,IAAgBtG,MAAOrB,EAASrC,WAAWwX,YAAatU,MAAO,CAACC,MAAM,WACtP,cAACqE,EAAA,EAAD,CAAkB5F,MAAM,WAAWJ,SAAU,SAACI,GAAD,OAAS,EAAKsU,sBAAsB,WAAWtU,IAAQmJ,QAA6C,aAAvB,OAAZ8L,QAAY,IAAZA,OAAA,EAAAA,EAAcxB,oBAA4C5N,QAAS,cAACuC,GAAD,IAAgBtG,MAAOrB,EAASrC,WAAWyX,MAAOvU,MAAO,CAACC,MAAM,WACjP,cAACqE,EAAA,EAAD,CAAkB5F,MAAM,gBAAgBJ,SAAU,SAACI,GAAD,OAAS,EAAKsU,sBAAsB,gBAAgBtU,IAAQmJ,QAA6C,kBAAvB,OAAZ8L,QAAY,IAAZA,OAAA,EAAAA,EAAcxB,oBAAiD5N,QAAS,cAACuC,GAAD,IAAgBtG,MAAOrB,EAASrC,WAAW0X,WAAYxU,MAAO,CAACC,MAAM,mBAIjR,cAACyE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACA,eAACyH,EAAA,EAAD,CAAa0H,SAAU,EAAKnW,MAAM4K,SAAlC,UACI,cAAC8D,EAAA,EAAD,CAAWxM,UAAU,SAASC,MAAO,CAACC,MAAM,SAA5C,SAAuDd,EAASrC,WAAWmN,aACvE,eAACuC,EAAA,EAAD,CAAYC,aAAYtN,EAASrC,WAAWmN,WAAY7F,KAAK,aAAasI,QAAM,EAACpO,SAAU,EAAKgV,aAAhG,UACI,cAAChP,EAAA,EAAD,CAAkB5F,MAAM,UACxBJ,SAAU,SAACI,GAAD,OAAS,EAAKuU,wBAAwB,UAAUvU,IAC1DmJ,QAAiD,YAA5B,OAAZ8L,QAAY,IAAZA,OAAA,EAAAA,EAAcvB,yBACvB7N,QAAS,cAACuC,GAAD,IAAgBtG,MAAOrB,EAASrC,WAAWuX,YAAarU,MAAO,CAACC,MAAM,WAC/E,cAACqE,EAAA,EAAD,CACAhG,SAAU,SAACI,GAAD,OAAS,EAAKuU,wBAAwB,WAAWvU,IAC3DmJ,QAAiD,aAA5B,OAAZ8L,QAAY,IAAZA,OAAA,EAAAA,EAAcvB,yBACvB1T,MAAM,WAAW6F,QAAS,cAACuC,GAAD,IAAgBtG,MAAOrB,EAASrC,WAAWwX,YAAatU,MAAO,CAACC,MAAM,WAChG,cAACqE,EAAA,EAAD,CACAhG,SAAU,SAACI,GAAD,OAAS,EAAKuU,wBAAwB,WAAWvU,IAC3DmJ,QAAiD,aAA5B,OAAZ8L,QAAY,IAAZA,OAAA,EAAAA,EAAcvB,yBACvB1T,MAAM,WAAW6F,QAAS,cAACuC,GAAD,IAAgBtG,MAAOrB,EAASrC,WAAWyX,MAAOvU,MAAO,CAACC,MAAM,WAC1F,cAACqE,EAAA,EAAD,CACAhG,SAAU,SAACI,GAAD,OAAS,EAAKuU,wBAAwB,gBAAgBvU,IAChEmJ,QAAiD,kBAA5B,OAAZ8L,QAAY,IAAZA,OAAA,EAAAA,EAAcvB,yBACvB1T,MAAM,gBAAgB6F,QAAS,cAACuC,GAAD,IAAgBtG,MAAOrB,EAASrC,WAAW0X,WAAYxU,MAAO,CAACC,MAAM,mBAIhH,cAACyE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACA,eAACyH,EAAA,EAAD,CAAa0H,SAAU,EAAKnW,MAAM4K,SAAlC,UACI,cAAC8D,EAAA,EAAD,CAAWxM,UAAU,SAASC,MAAO,CAACC,MAAM,SAA5C,SAAuDd,EAASrC,WAAWuN,WACvE,eAACmC,EAAA,EAAD,CAAYC,aAAYtN,EAASrC,WAAWuN,SAAUjG,KAAK,aAAasI,QAAM,EAAEpO,SAAU,EAAKgV,aAA/F,UACI,cAAChP,EAAA,EAAD,CACAhG,SAAU,SAACI,GAAD,OAAS,EAAKwU,wBAAwB,UAAUxU,IAC1DmJ,QAA+C,YAA1B,OAAZ8L,QAAY,IAAZA,OAAA,EAAAA,EAActB,uBACvB3T,MAAM,UAAU6F,QAAS,cAACuC,GAAD,IAAgBtG,MAAOrB,EAASrC,WAAWuX,YAAarU,MAAO,CAACC,MAAM,WAC/F,cAACqE,EAAA,EAAD,CACAhG,SAAU,SAACI,GAAD,OAAS,EAAKwU,wBAAwB,cAAcxU,IAC9DmJ,QAA+C,gBAA1B,OAAZ8L,QAAY,IAAZA,OAAA,EAAAA,EAActB,uBACvB3T,MAAM,cAAc6F,QAAS,cAACuC,GAAD,IAAgBtG,MAAOrB,EAASrC,WAAW2X,aAAczU,MAAO,CAACC,MAAM,WACpG,cAACqE,EAAA,EAAD,CACAhG,SAAU,SAACI,GAAD,OAAS,EAAKwU,wBAAwB,aAAaxU,IAC7DmJ,QAA+C,eAA1B,OAAZ8L,QAAY,IAAZA,OAAA,EAAAA,EAActB,uBACvB3T,MAAM,aAAa6F,QAAS,cAACuC,GAAD,IAAgBtG,MAAOrB,EAASrC,WAAW4X,cAAe1U,MAAO,CAACC,MAAM,WACpG,cAACqE,EAAA,EAAD,CACAhG,SAAU,SAACI,GAAD,OAAS,EAAKwU,wBAAwB,QAAQxU,IACxDmJ,QAA+C,UAA1B,OAAZ8L,QAAY,IAAZA,OAAA,EAAAA,EAActB,uBACvB3T,MAAM,QAAS6F,QAAS,cAACuC,GAAD,IAAgBtG,MAAOrB,EAASrC,WAAW6X,KAAM3U,MAAO,CAACC,MAAM,mBAInG,cAACyE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC/E,EAAA,EAAD,CAAYC,UAAW,KAAK3C,QAAQ,KAAKgE,MAAM,UAA/C,SACKjC,EAASrC,WAAW8X,mBAG7B,cAAClQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC/E,EAAA,EAAD,CAAYsB,MAAM,QAAlB,SACI,cAAC,IAAD,CAAMpC,GAAI,CACNC,SAAU,iBACVpB,MAAO,CACHkS,uBAAwBxN,GAAQA,EAAK4Q,uBAAyB5Q,EAAK4Q,wBAA0B,IAHrG,SAMI,cAAClS,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACN+T,SAAU,EAAKnW,MAAM4K,SACrBrJ,UAAWL,EAAQmC,OALvB,SAMS/B,EAASrC,WAAW+X,wBAKzC,cAACnQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACiQ,GAAA,EAAD,CAAgB/U,UAAWwR,GAA3B,SACI,eAACwD,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UACI,eAAC1D,GAAA,EAAD,WACI,cAACP,GAAD,CAAiB3P,MAAM,SAAvB,SAAiCjC,EAASrC,WAAWmY,YACrD,cAAClE,GAAD,CAAiB3P,MAAM,SAAvB,SAAiCjC,EAASrC,WAAWoY,gBACrD,cAACnE,GAAD,CAAiB3P,MAAM,SAAvB,SAAiCjC,EAASrC,WAAWqY,WACrD,cAACpE,GAAD,CAAiB3P,MAAM,SAAvB,uBAGR,cAACgU,GAAA,EAAD,UACI,eAAClE,GAAD,WACI,cAACH,GAAD,CAAiB3P,MAAM,SAAvB,SAAiCmB,GAAQA,EAAK8Q,UAAa9Q,EAAK8Q,UAAUgC,WAAa9S,EAAK8Q,UAAUiC,WAAc,IACpH,cAACvE,GAAD,CAAiB3P,MAAM,SAAvB,SAAiCmB,GAAQA,EAAK8Q,UAAa9Q,EAAK8Q,UAAUkC,gBAAkBhT,EAAK8Q,UAAUmC,gBAAmB,IAC9H,cAACzE,GAAD,CAAiB3P,MAAM,SAAvB,SAAiCmB,GAAQA,EAAK8Q,UAAa9Q,EAAK8Q,UAAUoC,UAAYlT,EAAK8Q,UAAUqC,UAAa,IAClH,cAAC3E,GAAD,CAAiB3P,MAAM,SAAvB,SAAiCmB,GAAQA,EAAK8Q,UAAa9Q,EAAK8Q,UAAUsC,MAAQpT,EAAK8Q,UAAUuC,MAAS,gBAO9H,cAAClR,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC5D,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OACnB8S,SAAU,EAAKnW,MAAM4K,SACrB7K,QAAS,SAACW,GAAD,OAAO,EAAKiV,gBANzB,SAQKrU,EAASrC,WAAWuQ,mBA0BzD,cAACtQ,EAAD,UAEQ,SAAAoC,GACI,OACI,qBAAKC,UAAU,YAAf,SACI,6BAAKD,EAASrC,WAAW4J,0B,GApatBlF,aA8apBC,gBAjdA,SAAAC,GAAK,MAAK,CACrB7B,MAAO,CACL8B,UAAWD,EAAME,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAGd7B,KAAM,CACJ8B,MAAO,OACPL,UAAWD,EAAME,QAAQ,IAE3BV,OAAQ,CACNb,OAAQqB,EAAME,QAAQ,EAAG,EAAG,GAC5BvE,gBAAiB,aAGnBgC,aAAc,CACZ6F,SAAU,WACVlD,MAAO,MACPmD,OAAQ,MACRC,IAAI,MACJC,KAAM,MACNhI,gBAAgB,QAChB4E,QAAQ,sBAEVtB,aAAc,CACVtD,gBAAgB,QAChB6E,aAAc,UAqbY,CAACE,WAAU,GAA9BX,CAAqCgQ,IC1arCoE,G,kDArGX,WAAY3Y,GAAQ,IAAD,8BACf,cAAMA,IAUV2I,kBAAoB,WAChB,IACIC,GAAS,EACD,MAFA7C,aAAagB,QAAQ,WAG7B6B,GAAS,GACb,EAAK3H,SAAS,CACV2H,OAAQA,KAjBG,EAqBnBwN,aAAa,SAACxC,EAAGlS,GAEb,EAAKT,SAAS,CACV2X,KAAMhF,IAEVxN,QAAQC,IAAI,SAAS,EAAK1F,MAAMiY,OAxBhC,EAAKjY,MAAQ,CACTiI,QAAQ,EACRoF,QAAO,EACP4K,MAAM,GAGV,EAAKtC,aAAe,EAAKA,aAAaD,KAAlB,iBARL,E,yDA6BN3U,GAGTE,KAAKX,SAAS,CACV+M,QAAQ,M,+BAON,IAOE6K,EAPH,OAEL,OAAe,IADIjX,KAAKjB,MAAMqN,OAAtBA,OAEG,cAAC,IAAD,CAAUlM,GAAG,MAErBF,KAAKjB,MAAMiI,QAKNiQ,GAFkB,IAAnBjX,KAAKjB,MAAMiY,KAGV,gCACI,4BACI,wBAAO1W,UAAU,cAAjB,qBAAwCN,KAAKjB,MAAMiY,KAAnD,YAEJ,wBAAQ1W,UAAU,eAAexB,QAASkB,KAAK0U,aAA/C,+BAMJ,8BACI,uBAAOpU,UAAU,cAAjB,sCAKJ,cAACrC,EAAD,UAEQ,SAAAoC,GACI,OACI,sBAAKC,UAAU,YAAf,UACI,8BACI,uBAAOA,UAAU,cAAjB,SAAgCD,EAASrC,WAAWkZ,sBACpD,wBAAQpY,QAAS,kBAAI,EAAK0V,aAAa,IAAvC,eACA,wBAAQ1V,QAAS,kBAAI,EAAK0V,aAAa,IAAvC,kBAEJ,8BAAMyC,WAS9B,cAAChZ,EAAD,UAEQ,SAAAoC,GACI,OACI,qBAAKC,UAAU,YAAf,SACI,6BAAKD,EAASrC,WAAW4J,0B,GA5F7BlF,a,WCqDJC,YAAW,CAC/B2F,KAAM,CACJ6O,UAAW,OACXC,cAAe,OAEfjU,QAAS,WAET,UAAW,CACTgU,UAAW,QAEb,UAAW,CACTA,UAAW,oCAGfzV,MAAO,CACH2V,YAAY,WAfI1U,CAiBnBR,KAELuB,IAAMC,SAASC,QAAU,yB,IAEnB0T,G,kDACF,WAAYlZ,GAAQ,IAAD,8BACf,cAAMA,IAsDVmR,UAAY,WAER,IAAMP,EAAS,CACXnL,QAAS,CACL,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,MAIzCzB,IAAMK,IAAI,0BAA0BiL,GACnChL,MAAM,SAAA2L,GAEHxL,aAAaC,QAAQ,QAAQuL,EAAE9L,QAAF,UAC7B,EAAKxE,UAAS,WACV,IAAIkY,EAAQ5H,EAAElM,KAAK+T,WACfC,EAAS,GAGb,IAAI,IAAIC,KADRlT,QAAQC,IAAI8S,GACCA,EACTE,EAAOxI,KAAK,CAACyI,EAAGH,EAAMG,KAC1B,MAAO,CAAEC,UAAWF,SAG3BnT,OAAM,SAACC,GACJC,QAAQC,IAAI,QAAQF,OAlFT,EAwFnBqT,kBAAoB,SAAC9X,KAxFF,EAkGnB+X,yBAA2B,SAAC/X,GACxB,EAAKT,SAAS,CACVqK,UAAW5J,EAAMJ,OAAOE,QAE/B4E,QAAQC,IAAI3E,EAAMJ,OAAOE,QAtGP,EAyGnBkY,SAAW,WAEPtT,QAAQC,IAAI,aAzGZ,EAAK1F,MAAQ,CACT2K,WAAY,EACZqO,KAAM,EACNJ,UAAW,GACX3Q,QAAQ,EACR6H,KAAM,GACNmJ,UAAW,EACXC,wBAAwB,GATb,E,iLAoBfzT,QAAQC,IAAIzE,KAAK5B,OACY,OAAzB4B,KAAK5B,MAAM8Z,cACX1T,QAAQC,IAAIzE,KAAK5B,MAAM8Z,aACvBlY,KAAKX,SAAS,CACdqK,UAAW1J,KAAK5B,MAAM8Z,e,SAKpBlY,KAAKmY,W,OACPnY,KAAKjB,MAAMiI,QAEXhH,KAAKuP,Y,2PAMLrL,EAAQC,aAAagB,QAAQ,SAC7B0J,EAAO7O,KAAKjB,MAAM8P,KACV,OAAR3K,IACA2K,EAAO1H,YAAWjD,GAAO2K,MACzB7H,GAAS,EACD,MAAT9C,IAEC8C,GAAS,EACThH,KAAKX,SAAS,CACV2H,OAAQA,EACR6H,KAAMA,EACNmJ,UAAW7Q,YAAWjD,GAAOvE,M,qIA+E/B,IAAD,OAED4X,EAAQvX,KAAKjB,MAAM4Y,UAEhB1X,EAAYD,KAAK5B,MAAjB6B,QAOP,OAAGD,KAAKjB,MAAMiI,QAA4B,SAAlBhH,KAAKjB,MAAM8P,KAE/B,cAAC5Q,EAAD,UAEQ,SAAAoC,GACI,OACI,qBAAKC,UAAU,YAAf,SACI,eAACsF,EAAA,EAAD,CAAMC,WAAS,EAACiH,QAAQ,SAAS7J,WAAW,SAASH,QAAS,EAAG5B,MAAQ,CAACgC,MAAM,MAAML,UAAU,OAAO+F,WAAW,OAAlH,UACI,cAAChD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,GAAIF,WAAS,EAACiH,QAAQ,SAAS7J,WAAW,SAA1D,SACI,cAACd,EAAA,EAAD,CACImD,KAAK,iBACLhH,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmY,OACnBlD,SAAS,OACTpW,QAAS,EAAKV,MAAMia,SAAS,EAAKP,UANtC,SAQKzX,EAASrC,WAAWsa,aAG7B,cAAC1S,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,wBAAOzF,UAAU,cAAcX,GAAG,aAAa4Y,IAAK,EAAKC,aAAzD,UAEI,wBAAOlY,UAAU,eAAjB,UACI,qBAAIY,MAAO,CAAC3C,gBAAgB,YAAY4C,MAAM,SAA9C,UACI,6BAAKd,EAASrC,WAAWya,WACzB,6BAAKpY,EAASrC,WAAW0a,gBACzB,6BAAKrY,EAASrC,WAAW2a,oBACzB,6BAAKtY,EAASrC,WAAW4a,OACzB,6BAAKvY,EAASrC,WAAW6a,OACzB,uCACA,6BAAKxY,EAASrC,WAAW8a,QACzB,6BAAKzY,EAASrC,WAAW+a,cAE7B,6BACI,qBAAK7X,MAAO,CAAC3C,gBAAgB,YAAY4C,MAAM,SAAU6X,QAAQ,IAAI1Y,UAAWL,EAAQgZ,OAAxF,UACK5Y,EAASrC,WAAWkb,IADzB,UAIH3B,EAAM5G,KAAI,SAAChB,EAAEiB,GACV,MAAU,qBAAPjB,EAAE,IAAkC,uBAAPA,EAAE,GAG1B,qBAAIhQ,GAAI,SAASiR,EAAsBtQ,UAAWL,EAAQkZ,eAA1D,UACI,6BAAKxJ,EAAE,KACP,6BACA,cAACyJ,GAAA,EAAD,CACAzZ,GAAG,iBACH0Z,QAAS1J,EAAE,GACX2J,eAAgB,SAACC,GAAD,OAAYA,EAAOC,eACnCtY,MAAO,CAAE3C,gBAAgB,YAAY4C,MAAM,QAAS+B,MAAO,KAC3DuW,YAAa,SAACC,GAAD,OAAY,cAACpY,EAAA,EAAD,yBAAWJ,MAAO,CAAE3C,gBAAgB,YAAY4C,MAAM,UAAgBuY,GAAtE,IAA8EhY,MAAM,UAAUpD,QAAQ,mBAG/H,6BAAI,uBAAO4C,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,eAhB1B,OAAOyP,GAoB9B,WAIpB,wBAAOtQ,UAAU,eAAjB,UACI,6BACI,qBAAKY,MAAO,CAAC3C,gBAAgB,YAAY4C,MAAM,SAAU6X,QAAQ,IAAI1Y,UAAWL,EAAQgZ,OAAxF,UACK5Y,EAASrC,WAAWkb,IADzB,WAIH3B,EAAM5G,KAAI,SAAChB,EAAEiB,GACV,MAAU,kBAAPjB,EAAE,IAA+B,uBAAPA,EAAE,GAGvB,qBAAIhQ,GAAI,SAASiR,EAAsBtQ,UAAWL,EAAQkZ,eAA1D,UACI,6BAAKxJ,EAAE,KACP,6BACA,cAACyJ,GAAA,EAAD,CACAzZ,GAAG,iBACH0Z,QAAS1J,EAAE,GACX2J,eAAgB,SAACC,GAAD,OAAYA,EAAOC,eACnCtY,MAAO,CAAE3C,gBAAgB,YAAY4C,MAAM,QAAS+B,MAAO,KAC3DuW,YAAa,SAACC,GAAD,OAAY,cAACpY,EAAA,EAAD,yBAAWJ,MAAO,CAAE3C,gBAAgB,YAAY4C,MAAM,UAAgBuY,GAAtE,IAA8EhY,MAAM,UAAUpD,QAAQ,mBAG/H,6BAAI,uBAAO4C,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,eAhB1B,OAAOyP,GAoB9B,WAIpB,wBAAOtQ,UAAU,eAAjB,UACI,6BACI,qBAAKY,MAAO,CAAC3C,gBAAgB,YAAY4C,MAAM,SAAU6X,QAAQ,IAAI1Y,UAAWL,EAAQgZ,OAAxF,UACK5Y,EAASrC,WAAWkb,IADzB,YAIH3B,EAAM5G,KAAI,SAAChB,EAAEiB,GACV,MAAU,kBAAPjB,EAAE,IAA+B,qBAAPA,EAAE,GAGvB,qBAAIhQ,GAAI,SAASiR,EAAsBtQ,UAAWL,EAAQkZ,eAA1D,UACI,6BAAKxJ,EAAE,KACP,6BACA,cAACyJ,GAAA,EAAD,CACAzZ,GAAG,iBACH0Z,QAAS1J,EAAE,GACX2J,eAAgB,SAACC,GAAD,OAAYA,EAAOC,eACnCtY,MAAO,CAAE3C,gBAAgB,YAAY4C,MAAM,QAAS+B,MAAO,KAC3DuW,YAAa,SAACC,GAAD,OAAY,cAACpY,EAAA,EAAD,yBAAWJ,MAAO,CAAE3C,gBAAgB,YAAY4C,MAAM,UAAgBuY,GAAtE,IAA8EhY,MAAM,UAAUpD,QAAQ,mBAG/H,6BAAI,uBAAO4C,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,aACjD,6BAAI,uBAAOD,MAAO,CAAC3C,gBAAgB,QAAQ4C,MAAM,eAhB1B,OAAOyP,GAoB9B,wBAcpD,cAAC3S,EAAD,UAEQ,SAAAoC,GACI,OACI,qBAAKC,UAAU,YAAf,SACI,6BAAKD,EAASrC,WAAW4J,0B,GAlSzBlF,aA6SjBC,gBA5WA,SAAAC,GAAK,MAAK,CACrBwV,OAAO,CACH7W,OAAQqB,EAAME,QAAQ,EAAG,EAAG,GAC5BvE,gBAAiB,aAErB0a,OAAQ,CACJ7S,SAAS,WACTC,OAAO,QAEXsT,QAAS,CACLvT,SAAS,WACTwT,MAAM,KACNvT,OAAO,OACP4C,YAAY,MACZpG,UAAU,OACVtE,gBAAgB,mBAChBsb,YAAY,UAEhBC,OAAQ,CACJ3Y,MAAM,aAEV4Y,UAAW,CACP5Y,MAAM,aAEV+T,SAAU,CACN/T,MAAM,aAEV6Y,wBAAyB,CACrB7Y,MAAM,QAEV8Y,eAAgB,CACZ9Y,MAAM,YACN,sBAAuB,CACnB0B,UAAW,IAGnBsW,eAAiB,CACb5a,gBAAgB,mBAChB4C,MAAM,YAsUoB,CAACmC,WAAW,GAA/BX,CAAsC2U,I,kDChX/CzO,GAASlG,YAAW,CACtB6F,KAAM,CACFrH,MAAO,aAEXsH,UAAW,CACPtH,MAAO,UALAwB,CAOZ0F,IAEG6R,GAAa,SAAC9b,GAEhB,IAAM+b,EAAUC,qBAAWvc,GACpBwc,EAAuBjc,EAAvBic,OACF7C,GADyBpZ,EAAhBkc,aACKlc,EAAdoZ,aAE6B,IAA9B+C,MAAMC,QAAQhD,KACdA,EAAa,IAEjB,IAcMiD,EAdsB,WAExB,IADA,IAAIA,EAAc,GACT/C,EAAI,EAAGA,GAAK,GAAIA,GAAK,GAC1B+C,EAAYxL,KAAK,CACbrP,MAAO8X,EACPhW,MAAM,GAAD,OAAKgW,EAAE,IAAI,EAAEA,EAAE,MAG5B,OAAO+C,EAMSC,GAEpB,OACI,gCAEIlD,EAAW7G,KAAI,SAAC/Q,EAAM+a,GAClB,OACI,eAAC/U,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGgK,QAAQ,gBAAgB7J,WAAW,SAA/D,UACI,cAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC/E,EAAA,EAAD,CAAYC,UAAU,KAAtB,SACErB,EAAMgb,UAAUpB,kBAGtB,cAAC5T,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,eAAC/E,EAAA,EAAD,CAAYC,UAAU,KAAtB,UACMrB,EAAMuK,OADZ,WAIJ,cAACvE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,eAAC/E,EAAA,EAAD,CAAYC,UAAU,KAAtB,UACMrB,EAAMib,KADZ,IACmBjb,EAAMkb,UAG7B,cAAClV,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,GAAD,CACIgV,IAAK,EACLC,IAAK,GACL9N,kBAAgB,2BAChB+N,aAAc,EACd9N,KAAM,KACNC,MAAOqN,QAvB0DE,MA+BzF,cAAC/U,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGgK,QAAQ,SAAS7J,WAAW,SAAxD,SACI,cAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC5D,EAAA,EAAD,CACQV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACND,MAAO,CAACK,OAAQ,mBAAmBhD,gBAAiB,aACpDO,QAhDJ,WACZub,KA0CQ,SAOQF,EAAQnc,WAAWkd,eAe3ChB,GAAWiB,aAAe,CACxB3D,WAAW,IAGE0C,UCjGTkB,GAAmB,SAAChd,GAEtB,IAAM+b,EAAUC,qBAAWvc,GACpB2Z,EAA2BpZ,EAA3BoZ,WAA2BpZ,EAAhBkc,aASlB,OACI,gCAEI9C,EAAW7G,KAAI,SAAC/Q,EAAM+a,GAClB,OACI,eAAC/U,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGgK,QAAQ,gBAAgB7J,WAAW,SAA/D,UACI,cAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC/E,EAAA,EAAD,CAAYC,UAAU,KAAKC,MAAO,CAACma,WAAW,QAA9C,SACEzb,EAAMgb,UAAUpB,kBAItB,cAAC5T,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,eAACyH,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAWxM,UAAU,SAArB,cAAiCkZ,EAAQnc,WAAWsd,aACpD,eAAC5N,EAAA,EAAD,CAAYC,aAAW,SAASrI,KAAK,SAAS4I,KAAG,EAAE1O,SAAU,SAACC,KAA9D,UACI,cAAC+F,EAAA,EAAD,CAAkB5F,MAAM,SAAS6F,QAAS,cAACyC,EAAA,EAAD,IAAWxG,MAAOyY,EAAQnc,WAAWud,UAC/E,cAAC/V,EAAA,EAAD,CAAkB5F,MAAM,SAAS6F,QAAS,cAACyC,EAAA,EAAD,IAAWxG,MAAOyY,EAAQnc,WAAWwd,iBAC/E,cAAC1G,GAAA,EAAD,CAASC,MAAOoF,EAAQnc,WAAWyd,QAAnC,SACI,cAACjW,EAAA,EAAD,CAAkB5F,MAAM,YAAa6F,QAAS,cAACyC,EAAA,EAAD,IAAUxG,MAAOyY,EAAQnc,WAAW0d,gCAdzBf,MAuBzF,cAAC/U,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGgK,QAAQ,SAAS7J,WAAW,SAAxD,SACI,cAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAAC5D,EAAA,EAAD,CACQV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACND,MAAO,CAACK,OAAQ,mBAAmBhD,gBAAiB,aACpDO,QA1CJ,aAqCJ,SAOQqb,EAAQnc,WAAWkd,eAc3CE,GAAiBD,aAAe,CAC5B3D,WAAW,IAEA4D,UCzETO,GAAU,SAACvd,GAAY,MAEgBwd,oBAAS,GAFzB,oBAElBC,EAFkB,KAEJC,EAFI,KAIlBtE,EAA2BpZ,EAA3BoZ,WAAW8C,EAAgBlc,EAAhBkc,aAMlB,OACsB,IAAlBuB,EACM,cAAC,GAAD,CAAYrE,WAAcA,EAAY8C,aAAgBA,EAAcD,OAAQ,WALlFyB,GAAiB,MAMX,cAAC,GAAD,CAAkBtE,WAAcA,EAAY8C,aAAgBA,KAQ1EqB,GAAQR,aAAe,CACrB3D,WAAW,IAGEmE,U,4ECRfjY,IAAMC,SAASC,QAAU,yBAEzB,IAmEMmY,GAAkBpZ,YAAW,CAC/B2F,KAAM,CACJ6O,UAAW,OACXC,cAAe,OAEfjU,QAAS,WAET,UAAW,CACTgU,UAAW,QAEb,UAAW,CACTA,UAAW,oCAGfzV,MAAO,CACH2V,YAAY,WAfI1U,CAiBnBR,KAECmV,G,kDACF,WAAYlZ,GAAQ,IAAD,8BACf,cAAMA,IAuDV4d,WAAa,SAACvc,GACV,EAAKJ,SAAS,CACV4c,aAAcxc,EAAEC,OAAOE,MAAM,KA1DlB,EA8DnBsc,UAAY,WAER,IADA,IAAIC,EAAQ,GACJzE,EAAE,EAAEA,GAAG,EAAEA,IACbyE,EAAMlN,KAAK,gBAAWyI,GAG1B,OAAOyE,GApEQ,EAuEnBC,WAAa,SAACzB,GAAD,OAAW,WACpB,EAAKtb,SAAS,CACV4c,aAAatB,MAzEF,EA6EnB0B,WAAa,WACf,EAAKhd,SAAS,CACbid,WAAW,EACXC,eAAgB,MAhFI,EAoFtBzd,QAAU,SAAC0d,GAAS,IAAD,EACgB,EAAKzd,MAE7B0d,EAHQ,EACLC,KADK,EACAT,cACYU,UAAUC,QAAO,SAAAjN,GAAC,OAAIA,EAAEkN,QAAUL,KACtCI,QAAQ,SAAAjN,GAAC,OAAiB,IAAbA,EAAExF,QAA6B,OAAbwF,EAAExF,UAErD,EAAK9K,SAAS,CACVid,WAAU,EACVC,eAAeE,KA3FJ,EAgGnBK,SAAW,WACP,IAAIC,EAAUrY,SAASsY,kBAAkB,iBACzCD,EAAQE,SAAQ,SAAAC,GACZA,EAAQhc,MAAMic,WAAa,YAE/BC,KAAkB1Y,SAASC,eAAe,eACzCX,MAAK,SAAUqZ,GAEZN,EAAQE,SAAQ,SAAAC,GACZA,EAAQhc,MAAMic,WAAa,aAE/BG,KAASD,EAAS,gBA3GP,EA+GnBE,SAAW,WACP,IAAIR,EAAUrY,SAASsY,kBAAkB,iBACzCD,EAAQE,SAAQ,SAAAC,GACZA,EAAQhc,MAAMic,WAAa,YAW/BK,gCAAqB,EAAKhF,aATP,CACfiF,SAAU,OACVC,WAAW,CACPC,EAAG,IACHC,EAAG,IACHC,YAAa,IACbC,KAAM,QAIb9Z,MAAK,WACF+Y,EAAQE,SAAQ,SAAAC,GACZA,EAAQhc,MAAMic,WAAa,iBA9HnC,EAAKpe,MAAQ,CACT2d,KAAM,GACNT,cAAe,EACfjV,QAAQ,EACR6H,KAAM,GACNlP,GAAI,EACJ2c,WAAU,EACVC,eAAe,IAEnB,EAAK/D,aAAeuF,IAAMC,YAXX,E,qLAeX9Z,EAAQC,aAAagB,QAAQ,SAC1B+S,EAAelY,KAAK5B,MAApB8Z,YACK,OAARhU,E,uBAEAlE,KAAKX,SAAS,CACV2H,QAAQ,EACR6H,KAAM1H,YAAWjD,GAAO2K,KACxBlP,GAAE,OAAEuY,QAAF,IAAEA,IAAe/Q,YAAWjD,GAAOvE,K,SAEnCK,KAAKuP,Y,sQAMTP,EAAS,CACXnL,QAAS,CACL,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,M,SAInCzB,IAAMI,KAAK,2BAA4B,GAAIkL,GAChDhL,MAAM,SAACC,QACgCwF,IAAjCxF,EAASJ,QAAT,UACCM,aAAaC,QAAQ,QAAQH,EAASJ,QAAT,UAEjC,IAAI6Y,EAAOzY,EAASR,KAAKiZ,KACzB,EAAKrd,SAAS,CACVqd,KAAMA,EACNT,aAAcS,EAAK9Q,OAAO,OAGjCtH,OAAM,SAACC,GACJC,QAAQC,IAAI,QAAQF,M,gIAiFlB,IAAD,OACL,GAAIvE,KAAKjB,MAAMiI,QAAWhH,KAAKjB,MAAMkd,cAAgB,EACrD,CAOI,IANA,IAAMS,EAAO1c,KAAKjB,MAAM2d,KACpBuB,EAAevB,EAAK1c,KAAKjB,MAAMkd,cAAcU,UAE7CuB,EAAcD,EAAarS,OAC3BuS,EAAa,IAAI5D,MAAM2D,GACvBE,EAAa,IACR1G,EAAE,EAAGA,EAAEwG,EAAaxG,IACzByG,EAAWzG,GAAK,IAAI6C,MAAM,IAC9B,IAAI7C,GAAK,EACTuG,EAAahB,SAAQ,SAAAxd,GACjBiY,IACAyG,EAAWzG,GAAG,GAAKjY,EAAEod,MACrBsB,EAAWzG,GAAG,GAAKjY,EAAEmb,UAAU3Y,KAC/Bkc,EAAWzG,GAAG,GAAKjY,EAAEmb,UAAUpB,cACC,OAA5B/Z,EAAEmb,UAAUyD,cACZF,EAAWzG,GAAG,GAAKjY,EAAEmb,UAAUyD,cAE/BF,EAAWzG,GAAG,GAAK0G,EACR,OAAX3e,EAAE0K,OACFgU,EAAWzG,GAAG,GAAKjY,EAAE0K,OAErBgU,EAAWzG,GAAG,GAAK0G,EACR,OAAX3e,EAAEob,KACFsD,EAAWzG,GAAG,GAAKjY,EAAEob,KAErBsD,EAAWzG,GAAG,GAAKjY,EAAEmb,UAAUC,KACpB,OAAXpb,EAAEqb,KACFqD,EAAWzG,GAAG,GAAKjY,EAAEqb,KAErBqD,EAAWzG,GAAG,GAAKjY,EAAEmb,UAAUE,KACnCqD,EAAWzG,GAAG,GAAK0G,EACnBD,EAAWzG,GAAG,GAAK0G,EACF,OAAb3e,EAAE6e,SACFH,EAAWzG,GAAG,GAAKjY,EAAE6e,SAErBH,EAAWzG,GAAG,GAAK0G,KAG3B,IAAMjC,EAAQnc,KAAKkc,YACnBxE,EAAI,EAxCR,MAyCoD1X,KAAKjB,MAA9Ckd,EAzCX,EAyCWA,aAAaK,EAzCxB,EAyCwBA,UAAUC,EAzClC,EAyCkCA,eACvBtc,EAAYD,KAAK5B,MAAjB6B,QACP,OACI,cAAChC,EAAD,UAEQ,SAAAoC,GACI,OACI,sBAAKC,UAAU,YAAf,UACI,eAACie,GAAA,EAAD,CACI7d,KAAM4b,EACNjZ,SAAS,KACT5B,WAAW,EACX+c,gBAAiB,EAAKnC,WACtBoC,gBAAiB,EAAKpC,WAL1B,UAOI,cAACqC,GAAA,EAAD,UAAcre,EAASrC,WAAW2gB,YAClC,cAACC,GAAA,EAAD,UACI,cAAC,GAAD,CACItE,aAAgB,EAAK+B,WACrB7E,WAAc+E,SAG1B,eAAC3W,EAAA,EAAD,CAAMC,WAAS,EAACiH,QAAQ,SAAS7J,WAAW,SAASH,QAAS,EAAG5B,MAAQ,CAACgC,MAAM,MAAML,UAAU,OAAO+F,WAAW,OAAlH,UACI,cAAChD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC8Y,GAAA,EAAD,CAASC,WAAS,EAACC,WAAY9C,EAAchc,QAAS,CAACqI,KAAKrI,EAAQ+e,aAApE,SAEQ7C,EAAMxL,KAAI,SAACjP,EAAMiZ,GAAP,OACN,cAACsE,GAAA,EAAD,CACIhf,QAAS,CACLqI,KAAMrI,EAAQkN,KACd2M,OAAO7Z,EAAQ+Z,wBACfD,UAAU9Z,EAAQ+Z,yBAJ1B,SAMI,cAACkF,GAAA,EAAD,CAAYpgB,aAAwB2K,IAAfiT,EAAK/B,IAAuBA,EAAQ+B,EAAK9Q,OAAO,EAAKwQ,WAAWzB,GAAO,KACxFZ,eAA0BtQ,IAAfiT,EAAK/B,IAAuBA,EAAQ+B,EAAK9Q,OAAQ,EAC5DkO,YAAuBrQ,IAAfiT,EAAK/B,GACbzF,SAAUyF,GAAS+B,EAAK9Q,aAA0BnC,IAAhBiT,EAAK/B,GAH3C,SAIQ,cAACwE,GAAA,EAAD,CAAYlf,QAAS,CACbyB,MAAMzB,EAAQ+Z,wBACdC,eAAgBha,EAAQga,eACxBH,OAAQ7Z,EAAQ6Z,OAChB5E,SAAUjV,EAAQiV,UACnBkK,cAAe,CACdnf,QAAS,CACTqI,KAAMrI,EAAQkN,KACd4M,UAAW9Z,EAAQ8Z,UACnBD,OAAQ7Z,EAAQ6Z,OAChB5E,SAAUjV,EAAQiV,WAV1B,SAaKxT,OAvBNA,UAiC3B,cAACkE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,GAAhB,SACQ,wBAAOzF,UAAU,cAAcX,GAAG,aAAa4Y,IAAK,EAAKC,aAAzD,UAEA,wBAAOlY,UAAU,eAAjB,UACI,qBAAIY,MAAO,CAAC3C,gBAAgB,YAAY4C,MAAM,SAA9C,UACI,6BAAKd,EAASrC,WAAW0a,gBACzB,6BAAKrY,EAASrC,WAAW2a,oBACzB,6BAAKtY,EAASrC,WAAWqhB,UACzB,6BAAKhf,EAASrC,WAAW4a,OACzB,6BAAKvY,EAASrC,WAAW6a,OACzB,uCACA,6BAAKxY,EAASrC,WAAW+a,cAE7B,6BACI,qBAAK7X,MAAO,CAAC3C,gBAAgB,YAAY4C,MAAM,SAAU6X,QAAQ,IAAI1Y,UAAWL,EAAQgZ,OAAxF,UACK5Y,EAASrC,WAAWkb,IADzB,KAEI,cAAC,GAAD,CACI5T,KAAK,gBACLhH,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQ0Z,QACnB7a,QAAS,SAACW,GAAD,OAAO,EAAKX,QAAQ,IAC7BoC,MAAO,CAACic,WAAW,GAAD,OAAIlB,IAAiBS,EAAK9Q,OAAO,EAAE,SAAS,YANlE,SAQKvL,EAASrC,WAAWshB,eAKhCnB,EAAWxN,KAAI,SAAChB,EAAEiB,GACf,OAAW,IAAPjB,EAAE,IACD+H,IAEG,qBAAI/X,GAAI,SAASiR,EAAsBtQ,UAAWL,EAAQkZ,eAA1D,UACI,6BAAKxJ,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,OAPgB,OAAOiB,KAatCuN,EAAaA,EAAWoB,MAAM7H,GAC9BA,EAAI,EACG,YAKnB,wBAAOpX,UAAU,eAAjB,UACI,6BACA,qBAAKY,MAAO,CAAC3C,gBAAgB,YAAY4C,MAAM,SAAU6X,QAAQ,IAAI1Y,UAAWL,EAAQgZ,OAAxF,UACK5Y,EAASrC,WAAWkb,IADzB,MAEQ,cAAC,GAAD,CACI5T,KAAK,gBACLhH,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQ0Z,QACnB7a,QAAS,SAACW,GAAD,OAAO,EAAKX,QAAQ,IAC7BoC,MAAO,CAACic,WAAW,GAAD,OAAIlB,IAAiBS,EAAK9Q,OAAO,EAAE,SAAS,YANlE,SAQKvL,EAASrC,WAAWshB,eAIhCnB,EAAWxN,KAAI,SAAChB,EAAEiB,GACf,OAAU,IAAPjB,EAAE,IAED+H,IAEI,qBAAI/X,GAAI,SAASiR,EAAsBtQ,UAAWL,EAAQkZ,eAA1D,UACI,6BAAKxJ,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,OAPgB,OAAOiB,KAatCuN,EAAaA,EAAWoB,MAAM7H,GAC9BA,EAAI,EACG,YAKnB,wBAAOpX,UAAU,eAAjB,UACI,6BACA,qBAAKY,MAAO,CAAC3C,gBAAgB,YAAY4C,MAAM,SAAU6X,QAAQ,IAAI1Y,UAAWL,EAAQgZ,OAAxF,UACK5Y,EAASrC,WAAWkb,IADzB,OAEQ,cAAC,GAAD,CACI5T,KAAK,gBACLhH,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQ0Z,QACnB7a,QAAS,SAACW,GAAD,OAAO,EAAKX,QAAQ,IAC7BoC,MAAO,CAACic,WAAW,GAAD,OAAIlB,IAAiBS,EAAK9Q,OAAO,EAAE,SAAS,YANlE,SAQKvL,EAASrC,WAAWshB,eAIhCnB,EAAWxN,KAAI,SAAChB,EAAEiB,GACf,OAAU,IAAPjB,EAAE,GAGG,qBAAIhQ,GAAI,SAASiR,EAAsBtQ,UAAWL,EAAQkZ,eAA1D,UACI,6BAAKxJ,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,KACP,6BAAKA,EAAE,OAPgB,OAAOiB,GAW9B,gBAK5B,eAAChL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,GAAIF,WAAS,EAACiH,QAAQ,eAAtC,UACI,cAAC3K,EAAA,EAAD,CAAQ7D,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmY,OACnBtZ,QAAS,EAAKye,SAHtB,SAIKld,EAASrC,WAAWwhB,YAEzB,cAACrd,EAAA,EAAD,CAAQ7D,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmY,OACnBtZ,QAAS,EAAKge,SAHtB,SAIKzc,EAASrC,WAAWyhB,wBAYzD,OACI,cAACxhB,EAAD,UAEQ,SAAAoC,GACI,OACI,qBAAKC,UAAU,YAAf,SACI,6BAAKD,EAASrC,WAAW4J,0B,GA5Y7BlF,aAsZjBC,gBA5eA,SAAAC,GAAK,MAAK,CACrBwV,OAAO,CACH7W,OAAQqB,EAAME,QAAQ,EAAG,EAAG,GAC5BvE,gBAAiB,aAErB0a,OAAQ,CACJ7S,SAAS,WACTC,OAAO,QAEXsT,QAAS,CACLvT,SAAS,WACTwT,MAAM,KACNvT,OAAO,OACP4C,YAAY,MACZpG,UAAU,OACVtE,gBAAgB,mBAChBsb,YAAY,UAEhBmF,YAAY,CACRzgB,gBAAgB,QAChB4C,MAAM,QACN,eAAgB,CACZA,MAAO,aAEX,YAAa,CACTA,MAAO,aAEX,cAAe,CACXA,MAAO,SAGfgM,KAAM,CACFhM,MAAM,OACN,eAAgB,CACZA,MAAO,SAEX,YAAa,CACTA,MAAO,aAEX,cAAe,CACXA,MAAO,SAGf2Y,OAAQ,CACJ3Y,MAAM,aAEV4Y,UAAW,CACP5Y,MAAM,aAEV+T,SAAU,CACN/T,MAAM,aAEV6Y,wBAAyB,CACrB7Y,MAAM,QAEV8Y,eAAgB,CACZ9Y,MAAM,YACN,sBAAuB,CACnB0B,UAAW,IAGnBsW,eAAiB,CACb5a,gBAAgB,mBAChB4C,MAAM,YA6aoB,CAACmC,WAAW,GAA/BX,CAAsC2U,I,2FC3f/CoI,GAAWC,cAAW,SAAC/c,GAAD,MAAY,CACpCR,OAAQ,CACJb,OAAQqB,EAAME,QAAQ,EAAG,EAAG,GAC5BvE,gBAAiB,iBAiEVqhB,OA5Df,SAAoBxhB,GAAM,IAEfyhB,EAAuBzhB,EAAvByhB,MAAOvF,EAAgBlc,EAAhBkc,aAFQ,EAGasB,mBAASiE,GAHtB,oBAGfC,EAHe,KAGJC,EAHI,KAIhB5F,EAAUC,qBAAWvc,GAkCrBoC,EAAUyf,KAChB,OACI,gCACI,cAAC,KAAD,CACIxc,MAAM,OACNmD,OAAQ,IACR2Z,OAtCG,SAACC,GACZF,EAAcE,IAsCNC,IAAKJ,IAET,cAAC3d,EAAA,EAAD,CACUV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OACnBtD,QAAS,SAACW,GAAD,OA1CZ,WACX6a,EAAawF,GAEb,IAAM5b,EAAQC,aAAagB,QAAQ,SACnC,GAAa,OAAVjB,QAA4BuF,IAAVvF,EAArB,CAGA,IAEMoN,EAAO,CACTrK,OAHWE,YAAWjD,GACnBvE,GAGHkgB,MAAOC,GAQXpc,IAAMI,KAAK,oBAAoBwN,EANhB,CACXzN,QAAS,CACP,eAAgB,sBAKrBG,MAAK,SAAAC,GACFO,QAAQC,IAAIR,GACZgB,OAAOiB,SAASia,QAAO,MACxB7b,OAAM,SAAA8b,GACL5b,QAAQC,IAAI2b,OAkBcthB,IAL1B,SAOaqb,EAAQnc,WAAWkd,W,sBCDtCmF,G,kDAEF,WAAYjiB,GAAQ,IAAD,8BACf,cAAMA,IAgBVoB,SAAW,SAACC,GAER,EAAKJ,UAAS,SAACsU,GACb,IAAI5U,EAAQ4U,EAGZ,OADA5U,EAAM0E,KAAKhE,EAAEC,OAAOC,IAAMF,EAAEC,OAAOE,MAC5B,CAACb,aAvBK,EA4BnBuhB,kBAAoB,SAAC7gB,GACnB,IAAI8gB,EAAO9gB,EAAEC,OAAO8gB,MAAM,GACtBC,EAAS,IAAIC,WACjBD,EAAOE,UAAY,WACjB,EAAKthB,SAAS,CACZwgB,MAAOY,EAAOhJ,OACd6E,WAAU,KAGdmE,EAAOG,cAAcL,IArCJ,EAuCnBzM,SAAS,WACP,IAAM9E,EAAS,CACXnL,QAAS,CACL,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,MAGrC4O,EAAY5P,aAAagB,QAAQ,SACpB,OAAd4O,GAED,EAAK1U,SAAS,CACZ2H,QAAO,IAGX,IAAI9C,EAAQ+O,YAAUc,GAEtBrQ,IAAMK,IAAI,yBAAyBG,EAAMvE,GAAGqP,GAC3ChL,MAAM,SAAA2L,GAGHnL,QAAQC,IAAI,0BAA0BkL,EAAElM,MACxC,EAAKpE,UAAS,SAACsU,GAEb,IAAI5U,EAAQ4U,EAEZ,OADA5U,EAAM0E,KAAOkM,EAAElM,KACR,CAAC1E,eAGbuF,OAAM,SAAAC,GAAK,OAAEC,QAAQC,IAAIF,OAtET,EA2ErBwO,SA3EqB,sBA2EZ,gCAAA5C,EAAA,6DACDnB,EAAS,CACXnL,QAAS,CACL,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,MAKrC1B,EAAO,EAAK1E,MAAM0E,KAClBuP,EACJ,CACI,GAAMC,YAAU9O,aAAagB,QAAQ,UAAUxF,GAC/C,UAAY8D,EAAK0L,UACjB,SAAW1L,EAAK2L,SAChB,MAAQ3L,EAAK/E,OAEP0G,KAAKsO,UAAUV,GApBlB,SAsBDtP,IAAMmd,IAAI,0BAA0B7N,EAAIhE,GAC7ChL,MAAM,SAAA2L,GACHnL,QAAQC,IAAI,yBACZ,EAAKpF,UAAS,SAAAsU,GAEN,IAAI5U,EAAQ4U,EAEZ,OADA5U,EAAM6U,WAAW,yBACV,CAAC7U,eAGnBuF,OACG,SAACC,GAEG,EAAKlF,UAAS,SAAAsU,GAGV,IAAI5U,EAAQ4U,EAEZ,OADA5U,EAAM8U,SAAS,iBACR,CAAC9U,YAEZyF,QAAQC,IAAIF,MA1Cb,2CA3EY,EA0HnB8X,WAAa,WAAmB,IAAlByE,EAAiB,uDAAT,KACT,OAARA,EACD,EAAKzhB,SAAS,CACZid,WAAU,EACVuD,MAAMiB,IAIR,EAAKzhB,SAAS,CACZid,WAAU,KAnIG,EAwInByE,UAAU,WAER,EAAKhO,YAxIH,EAAKhU,MAAQ,CAETK,MAAM,GACNJ,SAAS,GACTC,iBAAkB,GAClBK,mBAAkB,EAClBC,aAAa,GACb2gB,IAAI,GACJL,MAAM,KACNvD,WAAY,EACZ3S,UAAU,EACV3C,QAAO,GAbI,E,gEAyEnBhH,KAAK8T,a,+BAmEM,IAAD,SAEC7T,EAAWD,KAAK5B,MAAhB6B,QAFD,EAG4BD,KAAKjB,MAAhC8gB,EAHD,EAGCA,MAAMvD,EAHP,EAGOA,UAAWtV,EAHlB,EAGkBA,OAClBga,EAAQ,UAAGhhB,KAAKjB,aAAR,aAAG,EAAY0E,KAE7B,OADAe,QAAQC,IAAIob,IACE,IAAX7Y,EAEC,cAAC,IAAD,CAAU9G,GAAG,WAIf,cAACjC,EAAD,UAEI,SAAAoC,GACE,OACE,sBAAKC,UAAWL,EAAQM,aAAxB,UACA,cAACge,GAAA,EAAD,CACE7d,KAAM4b,EACNjZ,SAAS,KACT5B,WAAW,EACX+c,gBAAiB,EAAKnC,WACtBoC,gBAAiB,EAAKpC,WALxB,SAOA,cAACuC,GAAA,EAAD,UACE,cAAC,GAAD,CACEtE,aAAc,EAAK+B,WACnBwD,MAASA,QAKnB,qBAAKvf,UAAWL,EAAQc,MAAxB,SAEE,uBAAMT,UAAWL,EAAQmB,KAAMC,YAAU,EAAzC,UACE,cAACuE,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGgK,QAAQ,SAAS7J,WAAW,SAAxD,SACI,cAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,sBAAKzF,UAAWL,EAAQ4F,UAAxB,UACE,cAACob,GAAA,EAAD,CAAQf,KAAkF,OAARc,QAAQ,IAARA,OAAA,EAAAA,EAAUF,QAAO,uBAAwBxgB,UAAWL,EAAQihB,QAC9I,sBAAK5gB,UAAWL,EAAQ0Z,QAAxB,UACE,uBACIwH,OAAO,UACP7gB,UAAWL,EAAQmhB,MACnBzhB,GAAG,wBACHsC,KAAK,OACLzC,SAAU,EAAK8gB,kBACfe,QAAM,EACNzhB,MAA4B,KAGhC,uBAAO0hB,QAAQ,wBAAf,SACE,cAACC,GAAA,EAAD,CAAKtgB,UAAU,OAAOX,UAAWL,EAAQmY,OAAzC,SACE,cAAC,KAAD,kBASd,cAACxS,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACzE,EAAA,EAAD,CACEhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,OACHC,OAAe,OAARohB,QAAQ,IAARA,OAAA,EAAAA,EAAU7R,YAAW,GAC5BzN,MAAOrB,EAASrC,WAAW2D,KAC3BC,WAAS,EACTsT,SAAU,EAAKnW,MAAM4K,SACrBrJ,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,QAGrC,cAACmG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACzE,EAAA,EAAD,CACEhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,UACHC,OAAe,OAARohB,QAAQ,IAARA,OAAA,EAAAA,EAAU5R,WAAU,GAC3B1N,MAAOrB,EAASrC,WAAW8D,QAC3BF,WAAS,EACTsT,SAAU,EAAKnW,MAAM4K,SACrBrJ,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,QAGrC,cAACmG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACzE,EAAA,EAAD,CACEhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,QACHC,OAAe,OAARohB,QAAQ,IAARA,OAAA,EAAAA,EAAUtiB,QAAO,GACxBgD,MAAM,QACNE,WAAS,EACTsT,SAAU,EAAKnW,MAAM4K,SACrBrJ,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,QAGpC,cAACmG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACG,cAACzE,EAAA,EAAD,CACEhD,QAAQ,SACRiD,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT9B,GAAG,QACHC,OAAe,OAARohB,QAAQ,IAARA,OAAA,EAAAA,EAAU1b,OAAM,GACvB5D,MAAOrB,EAASrC,WAAW+D,SAC3BH,WAAS,EACTsT,UAAQ,EACR5U,UAAWL,EAAQ4B,aACnBrC,SAAY,SAACC,GAAD,OAAO,EAAKD,SAASC,QAGrC,cAACmG,EAAA,EAAD,UACA,cAACzD,EAAA,EAAD,CACEV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACN+T,SAAU,EAAKnW,MAAM4K,SACrBrJ,UAAWL,EAAQmC,OACnBtD,QAAS,SAACW,GAAD,OAAO,EAAKshB,aANvB,SAQG1gB,EAASrC,WAAWuQ,wB,GAhRb7L,aA8RbC,gBAlVA,SAAAC,GAAK,MAAK,CACrB7B,MAAO,CACL8B,UAAWD,EAAME,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ1E,gBAAgB,SAGlB6C,KAAM,CACJ8B,MAAO,OACPL,UAAWD,EAAME,QAAQ,IAE3BV,OAAQ,CACNb,OAAQqB,EAAME,QAAQ,EAAG,EAAG,GAC5BvE,gBAAiB,aAGnBgC,aAAc,CACZ6F,SAAU,WACVlD,MAAO,MACPmD,OAAQ,MACRC,IAAI,MACJC,KAAM,MACNhI,gBAAgB,QAChB4E,QAAQ,sBAEVtB,aAAc,CACVtD,gBAAgB,QAChB6E,aAAc,OAElB8d,MAAO,CACLhe,MAAON,EAAME,QAAQ,IACrBuD,OAAQzD,EAAME,QAAQ,IACtByD,KAAK,MACL1D,UAAU,OACVuD,SAAS,YAEXP,UAAW,CACT9C,QAAQ,OACRqD,SAAS,WACTwG,aAAa,OACbhE,WAAW,OAEb+Q,QAAQ,CACNvT,SAAS,WACTG,KAAK,MACLib,QAAQ,UAmSmB,CAACle,WAAU,GAA7BX,CAAoC0d,I,iCCjV7CoB,GAAY9B,cAAW,SAAC/c,GAAD,MAAY,CACrC0F,KAAM,CACFoZ,SAAU,EACVnjB,gBAAgB,QAChBsE,UAAU,QAEd8e,QAAS,CAELxgB,MAAM,SAEVygB,UAAW,CACP1e,MAAM,OACNmD,OAAO,QAEXgJ,QAAS,CACLxM,UAAU,OACVtE,gBAAgB,aAIxB,SAASsjB,GAASzjB,GAAQ,IACd0jB,EAAqC1jB,EAArC0jB,SAAUliB,EAA2BxB,EAA3BwB,MAAO+a,EAAoBvc,EAApBuc,MAAUoH,EADd,aACwB3jB,EADxB,8BAGrB,OACI,6CACAyQ,KAAK,WACLwS,OAAQzhB,IAAU+a,EAClBhb,GAAE,8BAAyBgb,GAC3BzN,kBAAA,yBAAmCyN,IAC/BoH,GALJ,aAOCniB,IAAU+a,GACP,cAACqH,GAAA,EAAD,CAAKC,EAAG,EAAR,SACI,cAACjhB,EAAA,EAAD,CAAYE,MAAO,CAACC,MAAM,QAAQ5C,gBAAgB,SAAlD,SAA6DujB,SAa7E,IA8CeI,GA9CS,SAAC9jB,GAErB,IAAM+b,EAAUC,qBAAWvc,GACrBoC,EAAUwhB,KACV7e,EAAQuf,eAJiB,EAKLvG,mBAAS,GALJ,oBAKxBhc,EALwB,KAKjBwiB,EALiB,KAc/B,IAPmBzH,EAcnB,OACI,gCACK,cAACjI,GAAA,EAAD,CAAOpS,UAAWL,EAAQqI,KAA1B,SACG,cAAC+Z,GAAA,EAAD,CACIziB,MAAOA,EACPJ,SAZK,SAACM,EAAOwiB,GAC3BF,EAASE,IAYKC,eAAe,YACfC,UAAU,YACVC,UAAQ,EALZ,SAQI,cAACC,GAAA,EAAD,aAAK7R,KAAM,cAAC,KAAD,CAAmBvQ,UAAWL,EAAQ2hB,YAAelgB,MAAOyY,EAAQnc,WAAWwL,aAAclJ,UAAWL,EAAQ0hB,UAzBxHhH,EAyB+I,EAxBvJ,CACLhb,GAAG,kBAAD,OAAoBgb,GACtB,gBAAgB,uBAAhB,OAAwCA,WA0BlC,qBAAKra,UAAWL,EAAQoP,QAAxB,SACI,cAACwS,GAAD,CAAUjiB,MAAOA,EAAO+a,MAAO,EAAGgI,IAAK/f,EAAMggB,UAAW1hB,MAAO,CAAC3C,gBAAgB,SAAhF,SACI,cAAC,GAAD,Y,kFClGlBmhB,GAAWC,cAAW,SAAC/c,GAAD,MAAY,CACpCigB,sBAAsB,CAClBja,WAAY,MACZrK,gBAAiB,mBAErBukB,aAAe,CACXC,cAAe,SACfna,WAAY,OACZrK,gBAAiB,kBACjBykB,OAAO,eAkCAC,GA9BW,WAAQ,IAAD,EAEc7I,qBAAWvc,GAAlCqlB,GAFS,EAEvBnlB,aAFuB,EAETmlB,oBAGhBC,EAAuB,SAAA1jB,GACzB,IAAM2jB,EAAW3jB,EAAEC,OAAO2jB,IAAIC,MAAM,KACpCJ,EAAmBE,EAAS,KAI1BnjB,EAAUyf,KAChB,OACE,qBAAIpf,UAAWL,EAAQ4iB,sBAAvB,UACI,cAAC,KAAD,CACIU,QAAQ,KACRjjB,UAAWL,EAAQ6iB,aACnBjU,KAAK,SACL/P,QAASqkB,IAEb,cAAC,KAAD,CACII,QAAQ,KACR1U,KAAK,SACLvO,UAAWL,EAAQ6iB,aACnBhkB,QAASqkB,QCyCNK,G,kDAvEX,WAAYplB,GAAQ,IAAD,8BACf,cAAMA,IAGVqlB,OAAS,WACLtf,aAAauf,WAAW,SACxBze,OAAOiB,SAASC,QAAQ,MANT,EASnBwd,aAAe,WAEX,OAAiB,OADHxf,aAAagB,QAAQ,UAVpB,E,qDAcR,IAAD,OACN,OACI,cAAClH,EAAD,UAEQ,SAAAoC,GAEI,OADAmE,QAAQC,IAAIpE,GAER,sBAAKC,UAAU,gBAAf,UACA,mBAAGkC,KAAK,IAAIlC,UAAU,OAAtB,SACI,qBAAK+iB,IAAI,wBAAgBnD,IAAI,8EAA8E7Z,OAAO,WAEtH,qBAAK/F,UAAU,mBAAf,SAES,EAAKqjB,eAuBF,qBAAIrjB,UAAU,eAAd,UACI,oBAAIA,UAAU,wBAAd,SACI,sBAAKA,UAAU,6BAA6BxB,QAAS,EAAK2kB,OAA1D,UACI,cAAC,KAAD,CAAenjB,UAAU,QACzB,mBAAGA,UAAU,aAAb,SAA2BD,EAASrC,WAAW4lB,eAGvD,cAAC,GAAD,OA5BJ,qBAAItjB,UAAU,eAAd,UACI,oBAAIA,UAAU,wBAAd,SACI,mBAAGkC,KAAK,SAAR,SACI,sBAAKlC,UAAU,eAAf,UACI,cAAC,KAAD,CAAYA,UAAU,QACtB,mBAAGA,UAAU,aAAb,SAA2BD,EAASrC,WAAW2H,gBAI3D,oBAAIrF,UAAU,wBAAd,SACI,mBAAGkC,KAAK,gBAAR,SACI,sBAAKlC,UAAU,eAAf,UACI,cAAC,KAAD,CAAWA,UAAU,QACrB,mBAAGA,UAAU,aAAb,SAA2BD,EAASrC,WAAWsQ,kBAI3D,cAAC,GAAD,mB,GAlDvB5L,aCKf+e,GAAY9B,cAAW,SAAA/c,GAAK,MAAK,CACnCrC,aAAc,CACV6F,SAAU,WACVlD,MAAO,MACPmD,OAAQ,MACRwd,OAAO,KACPvd,IAAK,GACLwd,UAAW,kBACXvlB,gBAAgB,mBAChB4E,QAAQ,sBAEVf,OAAQ,CACNb,OAAQ,mBACRhD,gBAAiB,YACjB,UAAW,CACP4C,MAAO,QAGbmH,KAAK,GAGL4Y,MAAO,CACLhe,MAAON,EAAME,QAAQ,GACrBuD,OAAQzD,EAAME,QAAQ,GACtByD,KAAK,MACL1D,UAAU,YAyMHkhB,GArMA,WAAM,MAGWnI,mBAAS,wBAHpB,oBAGVoI,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WACN,IAAM3U,EAAS,uCAAG,4BAAAY,EAAA,sEACOzM,IAAMK,IAAI,2CACCoD,YAAWhD,aAAagB,QAAQ,UAAUxF,IAF5D,OACR8X,EADQ,OAGdwM,EAAUxM,EAAOhU,MAHH,2CAAH,qDAKZU,aAAagB,QAAQ,UACpBoK,OAGR,IAAM4K,EAAUC,qBAAWvc,GACrBoC,EAAUwhB,KAEZvd,EAAQC,aAAagB,QAAQ,SACjC,GAAa,OAAVjB,EACC,OACI,qBAAK5D,UAAWL,EAAQqI,OAGhC,IAAM6b,EAAShd,YAAWjD,GACnB2K,EAAwBsV,EAAxBtV,KAAMvJ,EAAkB6e,EAAlB7e,KAAO8e,EAAWD,EAAXC,QAEpB,OACI,qBAAK9jB,UAAWL,EAAQM,aAAxB,SAEiB,SAATsO,EACA,wBACS,SAATA,EACI,eAACjJ,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGgK,QAAQ,SAAS7J,WAAW,SAAS3C,UAAWL,EAAQqI,KAApF,UACI,cAAC1C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACkb,GAAA,EAAD,CAAQf,IAAK8D,EAAQ1jB,UAAWL,EAAQihB,UAG5C,cAACtb,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,mBAAI7E,MAAO,CAACC,MAAM,QAAQgC,QAAQ,MAAMN,UAAU,MAAMyD,IAAI,OAA5D,UACc,KAARhB,QAAuBmE,IAATnE,EAAmB6U,EAAQnc,WAAW2D,KAAK2D,GAAQ,KAAgB,KAAV8e,QAA4B3a,IAAZ2a,EAAsBjK,EAAQnc,WAAW8D,QAAQsiB,OAGlJ,cAACxe,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAM7F,GAAG,2BAAT,SACI,cAACiC,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OAJvB,SAMK+X,EAAQnc,WAAWqmB,mBAIhC,cAACze,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAM7F,GAAG,iBAAT,SACI,cAACiC,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACRgC,UAAWL,EAAQmC,OACnBjB,MAAM,YAJV,SAMKgZ,EAAQnc,WAAWsmB,oBAIhC,cAAC1e,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAM7F,GAAG,YAAT,SACI,cAACiC,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OAJvB,SAOK+X,EAAQnc,WAAWumB,eAIhC,cAAC3e,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAM7F,GAAG,2BAAT,SACI,cAACiC,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OAJvB,SAMK+X,EAAQnc,WAAWwmB,eAIhC,cAAC5e,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAM7F,GAAG,2BAAT,SACI,cAACiC,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OAJvB,SAMK+X,EAAQnc,WAAWymB,YAKhC,cAAC7e,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAM7F,GAAG,kBAAT,SACI,cAACiC,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OAJvB,SAMK+X,EAAQnc,WAAW+J,uBAMpC,eAACnC,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGgK,QAAQ,SAAS7J,WAAW,SAAS3C,UAAWL,EAAQqI,KAApF,UACA,cAAC1C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACkb,GAAA,EAAD,CAAQf,IAAK8D,EAAQ1jB,UAAWL,EAAQihB,UAG5C,cAACtb,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,mBAAI7E,MAAO,CAACC,MAAM,QAAQgC,QAAQ,MAAMN,UAAU,OAAlD,UACc,KAARyC,QAAuBmE,IAATnE,EAAmB6U,EAAQnc,WAAW2D,KAAK2D,GAAQ,KAAgB,KAAV8e,QAA4B3a,IAAZ2a,EAAsBjK,EAAQnc,WAAW8D,QAAQsiB,OAGlJ,cAACxe,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAM7F,GAAG,UAAT,SACI,cAACiC,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OAJvB,SAMK+X,EAAQnc,WAAW0mB,eAIhC,cAAC9e,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAM7F,GAAG,iBAAT,SACI,cAACiC,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACRgC,UAAWL,EAAQmC,OACnBjB,MAAM,YAJV,SAMKgZ,EAAQnc,WAAWsmB,oBAIhC,cAAC1e,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAM7F,GAAG,mBAAT,SACI,cAACiC,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OAJvB,SAOK+X,EAAQnc,WAAWumB,eAIhC,cAAC3e,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAM7F,GAAG,iBAAT,SACI,cAACiC,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OAJvB,SAMK+X,EAAQnc,WAAW2mB,wBAKhC,cAAC/e,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAM7F,GAAG,kBAAT,SACI,cAACiC,EAAA,EAAD,CACIV,WAAS,EACTnD,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OAJvB,SAMK+X,EAAQnc,WAAW+J,0B,wMCnM1C6c,GAASjF,cAAY,SAAC/c,GAAD,MAC3B,CACEiiB,QAAS,CACP/T,SAAUlO,EAAMkiB,WAAWC,QAAQ,IACnCC,UAAW,SACXC,WAAY,EACZrc,WAAW,OAEbxG,OAAQ,CACNb,OAAQ,mBACRhD,gBAAiB,aAEnBgC,aAAc,CACZ6F,SAAS,QACTlD,MAAO,OACPmD,OAAQ,OACRE,KAAM,MACND,IAAI,MACJsG,aAAc,MACdrO,gBAAgB,QAChB4E,QAAQ,sBAEVtB,aAAc,CACVtD,gBAAgB,QAChB6E,aAAc,MACdqL,SAAS,MACT1L,QAAQ,QAGZmiB,aAAc,CACV3mB,gBAAiB,oBAErB4mB,MAAO,CACLjiB,MAAON,EAAME,QAAQ,KACrBuD,OAAQzD,EAAME,QAAQ,MAExBsiB,wBAAyB,CACrBviB,UAAU,MACVM,QAAQ,OAEZkiB,oBAAqB,CACjBxiB,UAAU,MACVM,QAAQ,qBAEZmiB,oBAAqB,CACjB1Y,aAAa,OAEjB2Y,uBAAwB,CACpBhkB,OAAO,YAKPikB,GAAmB7iB,YAAW,CAChC2F,KAAK,CACDmG,SAAS,QACT5L,UAAU,QAHOF,CAKtB3B,KAEGykB,GAAgB,CAAC,OAAO,gBACxBC,GAAc,CAAC,sBAAsB,uBAkahCC,GAhaC,WAEZ,IAAMxL,EAAUC,qBAAWvc,GAFR,EAGiBkgB,IAAMnC,UAAS,GAHhC,oBAGZgK,EAHY,KAGAC,EAHA,KAIbC,EAAkB/H,IAAMgI,OAAO,MAJlB,EAKmChI,IAAMnC,UAAU,GALnD,oBAKZoK,EALY,KAKSC,EALT,OAMalI,IAAMnC,UAAS,GAN5B,oBAMZsK,EANY,KAMFC,EANE,KAObC,EAAgBrI,IAAMgI,OAAO,MAPhB,EAQ+BhI,IAAMnC,UAAU,GAR/C,oBAQZyK,EARY,KAQOC,EARP,OASkBvI,IAAMnC,SAAS,IATjC,oBASZ2K,EATY,KASAC,EATA,OAUYzI,IAAMnC,UAAS,GAV3B,oBAUZ6K,EAVY,KAUHC,EAVG,OAWQ9K,mBAAS,IAXjB,iCAYgBA,mBAAS,KAZzB,oBAYZ+K,EAZY,KAYGC,EAZH,KAcfC,EAAQ,CACR,CACIlnB,GAAI,GACJwP,UAAW,OACXC,SAAU,aACV0X,UAAW,GACb,CACEnnB,GAAI,GACJwP,UAAW,QACXC,SAAU,cACV0X,UAAW,GACb,CACEnnB,GAAI,GACJwP,UAAW,OACXC,SAAU,UACV0X,UAAW,GACb,CACEnnB,GAAI,GACJwP,UAAW,QACXC,SAAU,QACV0X,UAAW,GACb,CACEnnB,GAAI,GACJwP,UAAW,WACXC,SAAU,QACV0X,UAAW,IAvCA,EA2CS/I,IAAMnC,SAASiL,EAAMtH,MAAM,EAAE,IA3CtC,oBA2CZwH,EA3CY,KA2CFC,EA3CE,OA4CMjJ,IAAMnC,SAAS,GA5CrB,oBA4CZqL,EA5CY,cA6CMlJ,IAAMnC,SAAS,IA7CrB,sBA6CZsL,GA7CY,MA6CLC,GA7CK,SA8CcpJ,IAAMnC,SAASwL,KAAKC,KAAKR,EAAMjb,OAAOqb,IA9CpD,sBA8CZK,GA9CY,MA8CFC,GA9CE,MAgDnBrD,qBAAU,YACS,uCAAG,8BAAA/T,EAAA,6DACRnB,EAAS,CACXnL,QAAS,CACL,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,MAP3B,SAWJzB,IAAMK,IAAI,+CACAoD,YAAWhD,aAAagB,QAAQ,UAAUxF,GAC1CqP,GAbN,OAURyI,EAVQ,OAcdtT,aAAaC,QAAQ,QAAQqT,EAAO5T,QAAP,UAC7BW,QAAQC,IAAI,WAAWgT,EAAOhU,KAAK+jB,QACnCZ,EAAUC,GAhBI,2CAAH,qDAsBftX,KACD,IAEH,IAuDM1P,GAAoB,SAACC,GACnBgmB,EAAgB2B,SAAW3B,EAAgB2B,QAAQC,SAAS5nB,EAAMJ,SAItEmmB,GAAc,IAmCZ8B,GAAkB,SAAC7nB,GACjBsmB,EAAcqB,SAAWrB,EAAcqB,QAAQC,SAAS5nB,EAAMJ,SAIlEymB,GAAY,IAgDNlmB,GAAU2kB,KAChB,OACI,sBAAKtkB,UAAWL,GAAQM,aAAxB,UACQ,eAACqF,EAAA,EAAD,CAAMC,WAAS,EAAE/C,QAAS,EAAIgK,QAAQ,eAAe7J,WAAW,SAAhE,UACI,cAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACQ,cAAC,KAAD,CACQnG,MAAO2mB,EACP/mB,SAAU,SAAC8iB,GAAD,OAAckE,EAAelE,IACvCsF,gBAAiB,iBAGjC,eAAChiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG7E,MAAO,CAAE2mB,OAAO,KAAlC,UACI,eAACC,GAAA,EAAD,CAAaxpB,QAAQ,YAAY6C,MAAM,YAAYoX,IAAKuN,EAAiBnY,aAAW,eAApF,UACA,cAACxL,EAAA,EAAD,CAAQhB,MAAM,YAAYrC,QA3IxB,WACtB0F,QAAQujB,KAAR,sBAA4BtC,GAAcO,MA0IgC1lB,UAAWL,GAAQmC,OAAzE,UAA2G,IAAxB4jB,EAA0B7L,EAAQnc,WAAWgqB,OAAQvC,GAAcO,KACtJ,cAAC7jB,EAAA,EAAD,CACIhB,MAAM,YACN8mB,KAAK,QACLC,gBAAetC,EAAa,yBAAsBnc,EAClD0e,gBAAevC,EAAa,YAASnc,EACrCkE,aAAYwM,EAAQnc,WAAWgqB,OAC/BI,gBAAc,OACdtpB,QAvHD,WACvB0F,QAAQC,IAAImhB,GACZC,GAAc,SAACwC,GAAD,OAAqBA,MAsHX/nB,UAAWL,GAAQmC,OARvB,SAUI,cAAC,KAAD,SAGJ,cAACkmB,GAAA,EAAD,CAAQ5nB,KAAMklB,EAAY2C,SAAUzC,EAAgB2B,QAAS5Y,UAAMpF,EAAW+e,YAAU,EAACC,eAAa,EAACvnB,MAAO,CAACC,MAAM,aAArH,SACS,gBAAGunB,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACL,cAACC,GAAA,EAAD,2BACIF,GADJ,IAEAxnB,MAAO,CACH2nB,gBAA+B,WAAdF,EAAyB,aAAe,iBAH7D,SAMA,cAACjW,GAAA,EAAD,UACI,cAACoW,GAAA,EAAD,CAAmBC,YAAalpB,GAAhC,SACA,cAACmpB,GAAA,EAAD,CAAUrpB,GAAG,oBAAoBuB,MAAO,CAAC3C,gBAAgB,YAAYkQ,SAAS,SAA9E,SACKgX,GAAc9U,KAAI,SAAC4I,EAAQoB,GAAT,OACnB,cAACsO,GAAA,EAAD,CAEI/nB,MAAO,CAAC3C,gBAAgB,YAAY4C,MAAM,SAC1C+nB,SAAUvO,IAAUqL,EACpBlnB,QAAS,SAACgB,GAAD,OArKnB,SAACA,EAAO6a,GAClCsL,EAAuBtL,GACvBnW,QAAQC,IAAIghB,GAAc9K,IAC1BkL,GAAc,GAEd,IAAIsD,EAAe,GACnB,OAAOxO,GACH,KAAK,EACDnW,QAAQC,IAAI,YACZ0kB,EAAgBtC,EAAMjK,QAAO,SAACjN,GAAK,OAAuB,IAAhBA,EAAEmX,aAC5C,MACJ,KAAK,EACDtiB,QAAQC,IAAI,UACZ0kB,EAAgBtC,EAAMjK,QAAO,SAACjN,GAAK,OAAuB,IAAhBA,EAAEmX,aAKpDtiB,QAAQC,IAAI0kB,GACZvC,EAAUuC,GACVnC,EAAQmC,EAAc5J,MAAM,EAAE,IAC9BgI,GAAaH,KAAKC,KAAK8B,EAAcvd,OAAOqb,IAgJYmC,CAAsBtpB,EAAO6a,IAJrD,SAMKpB,GALIA,qBAezB,eAAC3T,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG7E,MAAO,CAAE2mB,OAAO,KAAlC,UACI,eAACC,GAAA,EAAD,CAAaxpB,QAAQ,YAAY6C,MAAM,YAAYoX,IAAK6N,EAAezY,aAAW,eAAlF,UACA,cAACxL,EAAA,EAAD,CAAQhB,MAAM,YAAYrC,QA9I1B,WACpB0F,QAAQujB,KAAR,sBAA4BrC,GAAYW,MA6IgC/lB,UAAWL,GAAQmC,OAAvE,UAAuG,IAAtBikB,EAAwBlM,EAAQnc,WAAWqrB,KAAM3D,GAAYW,KAC9I,cAAClkB,EAAA,EAAD,CACIhB,MAAM,YACN8mB,KAAK,QACLC,gBAAehC,EAAW,yBAAsBzc,EAChD0e,gBAAejC,EAAW,YAASzc,EACnCkE,aAAYwM,EAAQnc,WAAWqrB,KAC/BjB,gBAAc,OACdtpB,QA1HH,WACrBqnB,GAAY,SAACmD,GAAD,OAAmBA,MA0HPhpB,UAAWL,GAAQmC,OARvB,SAUI,cAAC,KAAD,SAGJ,cAACkmB,GAAA,EAAD,CAAQ5nB,KAAMwlB,EAAUqC,SAAUnC,EAAcqB,QAAS5Y,UAAMpF,EAAW+e,YAAU,EAACC,eAAa,EAACvnB,MAAO,CAAC3C,gBAAgB,aAA3H,SACS,gBAAGmqB,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,UAApB,OACL,cAACC,GAAA,EAAD,2BACIF,GADJ,IAEAxnB,MAAO,CACH2nB,gBAA+B,WAAdF,EAAyB,aAAe,iBAH7D,SAMA,cAACjW,GAAA,EAAD,UACI,cAACoW,GAAA,EAAD,CAAmBC,YAAapB,GAAhC,SACA,cAACqB,GAAA,EAAD,CAAUrpB,GAAG,oBAAoBuB,MAAO,CAAC3C,gBAAgB,YAAYkQ,SAAS,SAA9E,SACKiX,GAAY/U,KAAI,SAAC4I,EAAQoB,GAAT,OACjB,cAACsO,GAAA,EAAD,CAEI/nB,MAAO,CAAC3C,gBAAgB,YAAY4C,MAAM,SAC1C+nB,SAAUvO,IAAU0L,EACpBvnB,QAAS,SAACgB,GAAD,OAxKrB,SAACA,EAAO6a,GAChC2L,EAAqB3L,GACrBnW,QAAQC,IAAIghB,GAAc9K,IAC1BwL,GAAY,GAEZ,IAxEyBjW,EAwErBqZ,EAAa,GACjB,OAAO5O,GACH,KAAK,EACDnW,QAAQC,IAAI,OACZ8kB,EAAc5C,EAAc7W,MA5EXI,EA4EoC,WA3EtD,SAASC,EAAGC,GACf,OAAID,EAAED,GAAQE,EAAEF,GACL,EACAC,EAAED,GAAQE,EAAEF,IACX,EAEL,KAsEH,MACJ,KAAK,EACD1L,QAAQC,IAAI,OACZ8kB,EAAc5C,EAAc7W,KArEX,SAACI,GAC1B,OAAO,SAASC,EAAGC,GACf,OAAID,EAAED,GAAQE,EAAEF,GACL,EACAC,EAAED,GAAQE,EAAEF,IACX,EAEL,GA8D8BsZ,CAAqB,aAK9DhlB,QAAQC,IAAI8kB,GACZ3C,EAAU2C,GACVvC,EAAQuC,EAAYhK,MAAM,EAAE,IAC5BgI,GAAaH,KAAKC,KAAKkC,EAAY3d,OAAOqb,IAmJcwC,CAAoB3pB,EAAO6a,IAJnD,SAMKpB,GALIA,qBAezB,cAAC3T,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG7E,MAAO,CAAE2mB,OAAO,KAAlC,SACI,cAAC1lB,EAAA,EAAD,CAAQ7B,UAAWL,GAAQmC,OAAQjB,MAAM,YAAY7C,QAAQ,YAAYmD,WAAS,EAAC3C,QAAS,kBAhJhHmnB,GAAwB,GACxBK,GAAsB,GACtBM,EAAUC,GACVG,EAAQH,EAAMtH,MAAM,EAAE,SACtBgI,GAAaH,KAAKC,KAAKR,EAAMjb,OAAOqb,KA4IhB,SACK9M,EAAQnc,WAAW0rB,qBAIhC,cAAC9jB,EAAA,EAAD,CAAMC,WAAS,EAACiH,QAAU,SAA1B,SACI,cAAC9D,GAAD,CAAkB2gB,MAAOrC,GAAWsC,iBAAe,EAACC,gBAAc,EAACC,YAAa,EAAGxgB,KAAM4d,GACrF1nB,SAAU,SAACC,EAAE6J,GAAH,OAvHd,SAAC7J,EAAE6J,GAEnB,IAAIygB,EAAepD,EAAcpH,OAAOjW,EAAK,GAAG2d,EAAS3d,EAAK2d,GAE9DD,EAAQ+C,GACR5C,GAAU7d,GACV9E,QAAQC,IAAIsiB,GAiH4BiD,CAAcvqB,EAAE6J,IACpC2gB,WAAY,SAACnkB,GAAD,OACR,cAACuD,GAAD,eAA0BvD,SAItC,cAACF,EAAA,EAAD,CAAOC,WAAS,EAAC/C,QAAU,EAAGgK,QAAQ,eAAe7J,WAAW,SAAS/B,MAAQ,CAACuN,SAAU,QAAQ5L,UAAU,QAA9G,SAGQkkB,EAAUpW,KAAI,SAAC/Q,EAAM+a,GACjB,OACI,cAAC/U,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,eAACmkB,GAAA,EAAD,CAAWzD,SAAUA,IAAa,QAAQ0D,OAAOxP,GAAQnb,UA5JjE4qB,EA4J8F,QAAQD,OAAOxP,GA5JnG,SAAC7a,EAAOuqB,GAC1C3D,IAAY2D,GAAaD,KA2JqH9rB,QAAQ,WAAtH,UACI,cAACgsB,GAAA,EAAD,CACAC,WAAY,cAAC,KAAD,IACZrC,gBAAc,mBACdvoB,GAAG,kBACHM,QAAS,CAACqI,KAAKrI,GAAQqlB,oBAAoBjW,QAAQpP,GAAQslB,wBAJ3D,SAMI,eAACvD,GAAA,EAAD,CAAKjf,QAAQ,OAAOC,cAAc,MAAMif,EAAG,EAAGuI,EAAG,EAAjD,UACI,cAACvJ,GAAA,EAAD,CAAQf,IAAqB,OAAhBtgB,EAAMkhB,YAAiCrX,IAAf7J,EAAMkhB,MAAmB,uBAAuBlhB,EAAMkhB,MAAQxgB,UAAWL,GAAQklB,QACtH,cAACK,GAAD,CAAkBllB,UAAWL,GAAQ4kB,QAAU9hB,QAAQ,SAAvD,SAAiEnD,EAAMuP,UAAUgb,OAAO,KAAKA,OAAOvqB,EAAMwP,iBAIlH,cAACqb,GAAA,EAAD,CAAkBxqB,QAAS,CAACqI,KAAKrI,GAAQolB,qBAAzC,SACI,eAACzf,EAAA,EAAD,CAAMC,WAAS,EAAC6kB,GAAI,GAAI5nB,QAAS,EAAIgK,QAAQ,aAAa7J,WAAW,SAArE,UACI,cAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SAEQ,cAAC,IAAD,CACI7F,GAAI,CACAC,SAAU,eACVpB,MAAO,CACH2K,UAAW9J,EAAMD,KAJ7B,SAQQ,sBAAKuB,MAAO,CAACC,MAAM,QAAQ0B,UAAU,MAAMM,QAAQ,kBAAkBJ,QAAQ,eAA7E,UACI,mBAAG7B,MAAO,CAAC2B,UAAU,OAArB,SAA8BsX,EAAQnc,WAAW2sB,UACjD,cAAC,KAAD,CAAYzpB,MAAO,CAAC2B,UAAU,MAAM+F,WAAW,MAAM1F,MAAM,OAAOmD,OAAO,iBAK7F,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SAEQ,cAAC,IAAD,CAAO7F,GAAI,CACHC,SAAU,sBACVpB,MAAO,CACH2K,UAAW9J,EAAMD,KAH7B,SAKY,sBAAKuB,MAAO,CAACC,MAAM,QAAQ0B,UAAU,MAAMM,QAAQ,kBAAkBJ,QAAQ,eAA7E,UACA,mBAAG7B,MAAO,CAAC2B,UAAU,OAArB,SAA8BsX,EAAQnc,WAAW4sB,OACjD,cAAC,KAAD,CAAU1pB,MAAO,CAAC2B,UAAU,MAAM+F,WAAW,MAAM1F,MAAM,OAAOmD,OAAO,iBAI3F,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACQ,cAAC,IAAD,CAAO7F,GAAI,CACHC,SAAU,sBACVpB,MAAO,CACH2K,UAAW9J,EAAMD,KAH7B,SAKY,sBAAKuB,MAAO,CAACC,MAAM,QAAQ0B,UAAU,MAAMM,QAAQ,kBAAkBJ,QAAQ,eAA7E,UACA,mBAAG7B,MAAO,CAAC2B,UAAU,OAArB,SAA8BsX,EAAQnc,WAAWwmB,WACjD,cAAC,KAAD,CAAoBtjB,MAAO,CAAC2B,UAAU,MAAM+F,WAAW,MAAM1F,MAAM,OAAOmD,OAAO,iBAIrG,cAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACG,eAAC/E,EAAA,EAAD,CAAYC,UAAU,KAAK8B,QAAQ,SAAnC,UACK,cAAC,KAAD,CAAU7B,MAAO,CAAC2B,UAAU,MAAMoG,YAAY,MAAM/F,MAAM,OAAOmD,OAAO,UACvE8T,EAAQnc,WAAW6sB,eAFzB,MAlN7BC,EAoNuFlrB,EAAMknB,eAnNjGrd,IAAXqhB,GAAwBnf,MAAMmf,GACtB,IAEE,IAAVA,EACQ,IAEO,IAAVA,EACG,KAEO,IAAVA,EACG,MAEO,IAAVA,EACG,KAEO,IAAVA,EACG,SADN,iBAuI+CnQ,GAvJnC,IAACmQ,EAJMV,W,OCrRhC1mB,IAAMC,SAASC,QAAU,yB,IAiGVmnB,G,kDA9FX,WAAY3sB,GAAQ,IAAD,8BACf,cAAMA,IAmDV2I,kBAAkB,WAEd,EAAKikB,aAtDU,EA0DnBC,OAAO,WAEH,OACI,cAAChtB,EAAD,UAEQ,SAAAoC,GACI,OACI,8BACsB,MAAjB,EAAKtB,MAAM0E,KAAapD,EAASrC,WAAWktB,cAC7C,gCACI,iCACK,EAAKnsB,MAAM0E,KAAK+jB,OAAO7W,KAAI,SAAC/Q,EAAMD,GAG/B,OADA6E,QAAQC,IAAI7E,GACL,mCAEEA,EAAMuP,UACN,IACAvP,EAAMwP,WAJKzP,QAW5B,cAAC,GAAD,aAjF5B,EAAKZ,MAAQ,CACT0E,KAAK,MAHM,E,4LAaTuL,EAAS,CACXnL,QAAS,CACP,eAAgB,mBACf+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,MAGlC1B,EAAOU,aAAagB,QAAQ,SAEhC1B,EAAO0D,YAAW1D,GAClBe,QAAQC,IAAI,QAAQhB,EAAK9D,IACrBA,EAAKsU,OAAOxQ,EAAK9D,IAEjBwrB,EAAS/lB,KAAKC,MAAM1F,GACxB6E,QAAQC,IAAI0mB,G,SAENznB,IACHK,IAAI,yBAAyBpE,EAAIqP,GACjChL,MAAK,SAACC,GACHE,aAAaC,QAAQ,QAAQH,EAASJ,QAAT,UAC7B,EAAKxE,UAAS,WACV,MAAO,CAACoE,KAAKQ,EAASR,SAE1Be,QAAQC,IAAIR,MASbK,OAAM,SAAAC,GAAQC,QAAQC,IAAIF,M,sGAhDZ7B,a,4FCmBd0oB,OAnBf,WACI,OACI,sBAAK9qB,UAAU,SAAf,UACI,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,mBAAGA,UAAU,2BAAb,uBACA,qBAAIA,UAAU,OAAd,UACI,oBAAIA,UAAU,gBAAd,SAA8B,mBAAGkC,KAAK,sCAAR,SAA8C,cAAC,KAAD,QAC5E,oBAAIlC,UAAU,gBAAd,SAA8B,mBAAGkC,KAAK,yCAAR,SAAiD,cAAC,KAAD,QAC/E,oBAAIlC,UAAU,gBAAd,SAA8B,mBAAGkC,KAAK,2CAAR,SAAmD,cAAC,KAAD,QACjF,qBAAIlC,UAAU,gBAAd,UAA8B,oBAAGkC,KAAK,iFAAR,UAAyF,cAAC,QAAD,CAAMqO,KAAMwa,KAAahlB,OAAO,SAAzH,OAA9B,mB,UCClBob,GAAY9B,cAAW,SAAC/c,GAAD,MAAY,CACrC0F,KAAM,CACFoZ,SAAU,EACVnjB,gBAAgB,QAChBsE,UAAU,QAEd8e,QAAS,CAELxgB,MAAM,SAEVygB,UAAW,CACP1e,MAAM,OACNmD,OAAO,QAEXgJ,QAAS,CACLxM,UAAU,OACVtE,gBAAgB,aAIxB,SAASsjB,GAASzjB,GAAQ,IACd0jB,EAAqC1jB,EAArC0jB,SAAUliB,EAA2BxB,EAA3BwB,MAAO+a,EAAoBvc,EAApBuc,MAAUoH,EADd,aACwB3jB,EADxB,8BAGrB,OACI,6CACAyQ,KAAK,WACLwS,OAAQzhB,IAAU+a,EAClBhb,GAAE,8BAAyBgb,GAC3BzN,kBAAA,yBAAmCyN,IAC/BoH,GALJ,aAOCniB,IAAU+a,GACP,cAACqH,GAAA,EAAD,CAAKC,EAAG,EAAR,SACI,cAACjhB,EAAA,EAAD,CAAYE,MAAO,CAACC,MAAM,QAAQ5C,gBAAgB,SAAlD,SAA6DujB,SAa7E,IAwDeyC,GAxDE,SAACnmB,GAEd,IAAM+b,EAAUC,qBAAWvc,GACrBoC,EAAUwhB,KACV7e,EAAQuf,eAJU,EAKEvG,mBAAS,GALX,oBAKjBhc,EALiB,KAKVwiB,EALU,KAWxB,SAASkJ,EAAU3Q,GACf,MAAO,CACLhb,GAAG,kBAAD,OAAoBgb,GACtB,gBAAgB,uBAAhB,OAAwCA,IAP9CuJ,qBAAU,WACF1f,QAAQC,IAAIrG,MAiBpB,OACI,gCACK,cAACsU,GAAA,EAAD,CAAOpS,UAAWL,EAAQqI,KAA1B,SACG,eAAC+Z,GAAA,EAAD,CACIziB,MAAOA,EACPJ,SAZK,SAACM,EAAOwiB,GAC3BF,EAASE,IAYKC,eAAe,YACfC,UAAU,YACVC,UAAQ,EALZ,UAQI,cAACC,GAAA,EAAD,aAAK7R,KAAM,cAAC,KAAD,CAAmBvQ,UAAWL,EAAQ2hB,YAAelgB,MAAOyY,EAAQnc,WAAWutB,UAAWjrB,UAAWL,EAAQ0hB,SAAa2J,EAAU,KAC/I,cAAC5I,GAAA,EAAD,aAAK7R,KAAM,cAAC,KAAD,CAAOvQ,UAAWL,EAAQ2hB,YAAelgB,MAAOyY,EAAQnc,WAAWwL,aAAclJ,UAAWL,EAAQ0hB,SAAc2J,EAAU,KACvI,cAAC5I,GAAA,EAAD,aAAK7R,KAAQ,cAAC,KAAD,CAAYvQ,UAAWL,EAAQ2hB,YAAelgB,MAAOyY,EAAQnc,WAAWwtB,aAAclrB,UAAWL,EAAQ0hB,SAAc2J,EAAU,UAGlJ,sBAAKhrB,UAAWL,EAAQoP,QAAxB,UACI,cAAC,GAAD,CAAUzP,MAAOA,EAAO+a,MAAO,EAAGgI,IAAK/f,EAAMggB,UAAW1hB,MAAO,CAAC3C,gBAAgB,SAAhF,SACI,cAAC,GAAD,MAEJ,cAAC,GAAD,CAAUqB,MAAOA,EAAO+a,MAAO,EAAGgI,IAAK/f,EAAMggB,UAA7C,SACI,cAAC,GAAD,CAAc7W,iBAAkB3N,EAAM2N,iBAAiB0I,K,eAE3D,cAAC,GAAD,CAAU7U,MAAOA,EAAO+a,MAAO,EAAGgI,IAAK/f,EAAMggB,UAA7C,SACI,cAAC,GAAD,a,qEC9FT6I,GAhBS,SAACrtB,GAErB,IAAM+b,EAAUC,qBAAWvc,GAFK,EAGP+d,mBAAS,IAHF,oBAGzBhc,EAHyB,KAGnBwiB,EAHmB,KAK9B,OACE,cAAC,KAAD,aACEsJ,YAAavR,EAAQnc,WAAW,YAChC2tB,iBAAiB,EACjBC,OAAO,MACPhsB,MAAOA,EACPisB,cAAe,SAAAC,GAAI,OAAI1J,EAAS0J,EAAKC,kBACjC3tB,KCJR4tB,GAAgB,SAAAC,GAClB,IAAK,IAAIrb,KAAOqb,EACZ,GAAe,KAAXA,EAAIrb,IAAwB,IAAXqb,EAAIrb,GACrB,OAAO,EAEf,OAAO,GAGL6Q,GAAY9B,cAAW,SAAC/c,GAAD,MAAY,CACrCspB,UAAW,CACPtf,aAAc,OACduf,WAAY,QACZppB,QAAS,OACTC,cAAe,UAEnBZ,OAAQ,CACJS,UAAW,OACXtE,gBAAgB,iBAOxB,SAAS6tB,GAAchuB,GAEnB,IAAM+b,EAAUC,qBAAWvc,GAFD,EAGC+d,mBAAS,IAHV,oBAGnByQ,EAHmB,KAGZC,EAHY,KAIlB1R,EAA6Bxc,EAA7Bwc,UAAYN,EAAiBlc,EAAjBkc,aACdiS,EAAQ,CAAC,CAAC3sB,MAAM,QAAQ8B,MAAMyY,EAAQnc,WAAWsX,OAAO,CAAC1V,MAAM,aAAa8B,MAAMyY,EAAQnc,WAAWmN,YAAY,CAACvL,MAAM,WAAW8B,MAAMyY,EAAQnc,WAAWuN,UACjJ,CAAC3L,MAAM,eAAe8B,MAAMyY,EAAQnc,WAAWwuB,cAAc,CAAC5sB,MAAM,SAAS8B,MAAMyY,EAAQnc,WAAWyuB,QAAQ,CAAC7sB,MAAM,OAAO8B,MAAMyY,EAAQnc,WAAW0uB,OAChKC,EAAiB,CAACxS,EAAQnc,WAAW4uB,eAAezS,EAAQnc,WAAW6uB,WAAW1S,EAAQnc,WAAW8uB,KAAK3S,EAAQnc,WAAW+uB,OAAO5S,EAAQnc,WAAWgvB,YACvJC,EAAW,CAAC9S,EAAQnc,WAAWuX,YAAY4E,EAAQnc,WAAWwX,YAAY2E,EAAQnc,WAAWyX,MAAM0E,EAAQnc,WAAW0X,YACtHwX,EAAS,CAAC/S,EAAQnc,WAAWuX,YAAY4E,EAAQnc,WAAW2X,aAAawE,EAAQnc,WAAW4X,cAAcuE,EAAQnc,WAAW6X,MAC7HsX,EAAgB,CAClBC,GAAGxS,EAAUjb,GACb6Z,cAAeoB,EAAUpB,cACzBvX,KAAK2Y,EAAU3Y,KACforB,KAAMzS,EAAUyS,KAChBC,YAAa1S,EAAU0S,YACvBjP,cAAezD,EAAUyD,cACzBxD,KAAMD,EAAUC,KAChBC,KAAKF,EAAUE,KACf7D,YAAY2D,EAAU3D,YACtBoV,OAAO,GACPkB,QAAQ,GAEZ/oB,QAAQC,IAAImW,GAEZsJ,qBAAU,WACN,IAAMlV,EAAS,CACXnL,QAAS,CACT,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,MAGhB,IAAlBknB,EAAOzgB,QACVlI,IAAMK,IAAI,+BAA+BiL,GACpChL,MAAK,SAAAC,GACFE,aAAaC,QAAQ,QAAQH,EAASJ,QAAT,UADf,IAERJ,EAAQQ,EAASR,KAAjBA,KACN6oB,EAAU7oB,SAKtB,IAAM+pB,EAAmBC,OAAaC,MAAM,CACxClU,cAAeiU,OAAajsB,SAAS2Y,EAAQnc,WAAW2vB,UACxD1rB,KAAMwrB,OAAajsB,SAAS2Y,EAAQnc,WAAW2vB,UAC/CN,KAAMI,OACNH,YAAaG,OACbpP,cAAeoP,OAAajsB,SAAS2Y,EAAQnc,WAAW2vB,UACxD9S,KAAM4S,OAAaG,SAASzT,EAAQnc,WAAW6vB,cAC/C/S,KAAM2S,OACNxW,YAAawW,OACbpB,OAAQoB,OACHK,GACGL,QAERF,QAAQE,SAGNM,EAAY,uCAAG,WAAOC,GAAP,iBAAA7d,EAAA,6DACXnB,EAAS,CACXnL,QAAS,CACT,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,MAGjCsS,GAAS,EAVI,SAWX/T,IAAMI,KAAK,sBAAuBkqB,EAAQhf,GAC/ChL,MAAK,SAACC,GACHE,aAAaC,QAAQ,QAAQH,EAASJ,QAAT,UAC7B8C,MAAMwT,EAAQnc,WAAWiwB,gBACzBxW,GAAS,KAEZnT,OAAM,WACHqC,MAAMwT,EAAQnc,WAAWkwB,MAAQ,IAAM/T,EAAQnc,WAAWmwB,mBAC1D1W,GAAS,KAnBI,gCAsBVA,GAtBU,2CAAH,sDAyBZ2W,EAAe,uCAAG,WAAOJ,GAAP,iBAAA7d,EAAA,6DACdnB,EAAS,CACXnL,QAAS,CACT,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,MAGjCsS,GAAS,EAVO,SAWd/T,IAAMmd,IAAI,kBAAmBmN,EAAQhf,GAC1ChL,MAAK,SAACC,GACHE,aAAaC,QAAQ,QAAQH,EAASJ,QAAT,UAC7B8C,MAAMwT,EAAQnc,WAAWqwB,iBACzB5W,GAAS,KAEZnT,OAAM,WACHqC,MAAMwT,EAAQnc,WAAWkwB,MAAQ,IAAM/T,EAAQnc,WAAWswB,oBAC1D7W,GAAS,KAnBO,gCAsBbA,GAtBa,2CAAH,sDAyBf/C,EAAY,uCAAG,WAAOsZ,GAAP,eAAA7d,EAAA,yDACboe,GAAU,EACd/pB,QAAQC,IAAImW,IACToR,GAAcpR,GAHA,gCAIGmT,EAAaC,GAJhB,OAIbO,EAJa,+CAMGH,EAAgBJ,GANnB,QAMbO,EANa,eAQbA,GACAjU,IATa,4CAAH,sDAYZkU,EAAqB,SAAC/a,GACxB,OAAOA,EACFtN,QAAQ,YAAO,KACfA,QAAQ,UAAO,KACfA,QAAQ,YAAO,KACfA,QAAQ,YAAO,MAGlBlG,EAAUwhB,KAEhB,OACI,cAAC,KAAD,CACI0L,cAAeA,EACfK,iBAAkB,kBAAOA,GACzB/mB,SAAUiO,EACV+Z,oBAAkB,EAJtB,SAMK,SAAAC,GAAM,OACH,eAAC,KAAD,CAAMpuB,UAAWL,EAAQisB,UAAzB,UACI,cAAC,KAAD,CACIjqB,KAAK,OACLtC,GAAG,gBACH2F,KAAK,gBACL5D,MAAOyY,EAAQnc,WAAW0a,gBAE9B,cAAC,KAAD,CACIzX,UAAWK,KACXqtB,QAAM,EACNhvB,GAAG,OACH2F,KAAK,OACL/D,OAAO,SACPG,MAAOyY,EAAQnc,WAAW4wB,KAN9B,SASQrC,EAAM5b,KAAI,SAAC1O,EAAK0Y,GACZ,OACI,cAACsO,GAAA,EAAD,CAEIrpB,MAAO4uB,EAAmBvsB,EAAKrC,OAFnC,SAGSqC,EAAKP,OAHd,cACgBiZ,SASV,iBAArB+T,EAAOV,OAAO/rB,MACX,cAAC,KAAD,CACIhB,UAAWK,KACXqtB,QAAM,EACNrpB,KAAK,SACL3F,GAAG,SACHkvB,YAAa,CACTC,UAAU,GANlB,SAUQzC,EAAO1b,KAAI,SAAAoe,GACP,OACI,cAAC9F,GAAA,EAAD,CAEIrpB,MAAOmvB,EAAKpvB,GAFhB,SAIKovB,EAAKC,YAJV,gBACkBD,EAAKpvB,WA0BnB,UAAtB+uB,EAAOV,OAAO/rB,MAAyC,eAAvBysB,EAAOV,OAAO/rB,MAAgD,aAAvBysB,EAAOV,OAAO/rB,OAC3D,eAAC,KAAD,CACAhB,UAAWK,KACXqtB,QAAM,EACNhvB,GAAG,OACH2F,KAAK,OACL/D,OAAO,SACPG,MAAOyY,EAAQnc,WAAW4wB,KAN1B,UAQA,cAAC3F,GAAA,EAAD,CAAUrpB,MAAM,QAAhB,SAAyBua,EAAQnc,WAAWoQ,QAC5C,cAAC6a,GAAA,EAAD,CAAUrpB,MAAM,WAAhB,SAA4Bua,EAAQnc,WAAWixB,YAC/C,cAAChG,GAAA,EAAD,CAAUrpB,MAAM,UAAhB,SAA2Bua,EAAQnc,WAAWuvB,cAEjD,UAAtBmB,EAAOV,OAAO/rB,MAA0C,eAAvBysB,EAAOV,OAAO/rB,OAAgD,aAAtBysB,EAAOV,OAAOX,MAClF,cAAC,KAAD,CACApsB,UAAWK,KACXqtB,QAAM,EACNhvB,GAAG,cACH2F,KAAK,cACL/D,OAAO,SACPG,MAAOyY,EAAQnc,WAAWqX,WAN1B,SASI4X,EAAWtc,KAAI,SAAC1O,EAAK0Y,GACjB,OACI,cAACsO,GAAA,EAAD,CAEIrpB,MAAO4uB,EAAmBvsB,GAF9B,SAGSA,GAHT,gBACkB0Y,SASP,aAAvB+T,EAAOV,OAAO/rB,MAA8C,YAAtBysB,EAAOV,OAAOX,MACpD,cAAC,KAAD,CACApsB,UAAWK,KACXqtB,QAAM,EACNhvB,GAAG,cACH2F,KAAK,cACL/D,OAAO,SACPG,MAAOyY,EAAQnc,WAAWqX,WAN1B,SASI6X,EAASvc,KAAI,SAAC1O,EAAK0Y,GACf,OACI,cAACsO,GAAA,EAAD,CAEIrpB,MAAO4uB,EAAmBvsB,GAF9B,SAGSA,GAHT,gBACkB0Y,UAST,aAAtB+T,EAAOV,OAAO/rB,MAA4C,UAAtBysB,EAAOV,OAAO/rB,MAA0C,eAAvBysB,EAAOV,OAAO/rB,OAAiD,aAAvBysB,EAAOV,OAAOX,MAS9H,cAAC,GAAD,CACI3B,YAAavR,EAAQnc,WAAW,YAChC4B,MAAO8uB,EAAOV,OAAOT,QACrB1B,cAAe,SAAAve,GAAG,OAAIohB,EAAOQ,cAAc,UAAU5hB,EAAI6hB,eAIjE,cAAC,KAAD,CACIluB,UAAWK,KACXqtB,QAAM,EACNhvB,GAAG,gBACH2F,KAAK,gBACL/D,OAAO,SACPG,MAAOyY,EAAQnc,WAAW2a,kBAN9B,SAQQgU,EAAehc,KAAI,SAAC1O,EAAK0Y,GACrB,OACI,cAACsO,GAAA,EAAD,CAEIrpB,MAAOqC,EAFX,SAGSA,GAHT,kBACoB0Y,SASpC,cAAC,KAAD,CACI1Y,KAAK,SACLtC,GAAG,OACH2F,KAAK,OACL5D,MAAOyY,EAAQnc,WAAW4a,KAC1BrX,OAAO,WAEX,cAAC,KAAD,CACI5B,GAAG,OACH2F,KAAK,OACL5D,MAAOyY,EAAQnc,WAAW6a,KAC1BtX,OAAO,WAEX,cAAC,KAAD,CACI5B,GAAG,cACH2F,KAAK,cACL5D,MAAOyY,EAAQnc,WAAWoxB,YAC1B7tB,OAAO,SACP4T,WAAS,EACTka,KAAM,IAEV,cAACltB,EAAA,EAAD,CACI7B,UAAWL,EAAQmC,OACnBH,KAAK,SACL3D,QAAQ,YACR6C,MAAM,YACN+T,UAAWwZ,EAAOY,QALtB,SAOKnV,EAAQnc,WAAWkd,aAyB5CkR,GAAcjR,aAAe,CACzBP,UAAW,CACPpB,cAAe,GACfvX,KAAK,GACLorB,KAAK,GACLC,YAAa,GACbjP,cAAe,GACfxD,KAAM,EACNC,KAAK,GACL7D,YAAY,GACZoV,OAAO,GACPkB,QAAQ,IAIDnB,U,0GCnYf1oB,IAAMC,SAASC,QAAU,yBAEzB,IAUM2rB,GAAuB5sB,YAAW,CACtC2F,KAAM,CACJ,UAAW,CACPnH,MAAO,YACPqgB,QAAS,GACX,UAAW,CACTA,QAAS,KAGb,WAAY,CACVrgB,MAAO,YACP,WAAY,CACVqgB,QAAS,EACTrgB,MAAO,eAIb2Y,OAAQ,GACRjJ,KAAM,IAlBqBlO,CAmB1B6sB,MAEGvd,GAAkBtP,aAAW,SAACC,GAAD,MAAY,CAC3CsP,KAAM,CACJ3T,gBAAiB,kBACjB4C,MAAOyB,EAAMyP,QAAQod,OAAOC,OAE9Bpe,KAAM,CACJR,SAAU,OANQnO,CAQpBwP,MAEEC,GAAiBzP,aAAW,SAACC,GAAD,MAAY,CAC1C0F,KAAM,CACJ,qBAAsB,CACpB/J,gBAAiBqE,EAAMyP,QAAQC,OAAOC,WAHvB5P,CAMnB6P,MAEEmd,GAAwBhtB,YAAW,CACrC2F,KAAM,CACFnH,MAAO,SAEXyuB,WAAY,CACRzuB,MAAO,SAEX0uB,QAAS,CACL,sCAAsC,CAClC1uB,MAAO,UATWwB,CAY3BmtB,MAEGC,GAAiBptB,YAAW,CAC9B2F,KAAK,CACD,UAAU,CACNnH,MAAO,YACP6hB,OAAQ,aAJGrgB,CAOpBqtB,MAEGC,GAAmBttB,YAAW,CAChC2F,KAAK,CACD,UAAU,CACNnH,MAAO,YACP6hB,OAAQ,aAJKrgB,CAOtButB,MAEGC,GAAoB,SAAC/xB,GAAU,IACzBqF,EAAwCrF,EAAxCqF,KAAM2sB,EAAkChyB,EAAlCgyB,MAAOC,EAA2BjyB,EAA3BiyB,QAASC,EAAkBlyB,EAAlBkyB,cACxBC,EAAkBxS,IAAM3D,WAAWvc,GAKzC,OACE,cAACqY,GAAA,EAAD,UACE,eAAC1D,GAAA,EAAD,WACG/O,EAAKkN,KAAI,SAAC6f,GACL,OAAIA,EAASC,KAkBD,KAhBJ,cAAC,GAAD,CAEInuB,MAAOkuB,EAASE,UAAY,OAAS,SACrCC,cAAeN,IAAYG,EAASI,OAAQR,EAC5CltB,MAAOstB,EAASttB,MAJpB,SAMI,cAACqsB,GAAD,CACIzV,OAAQuW,IAAYG,EAASI,MAC7BhO,UAAWyN,IAAYG,EAASI,MAAQR,EAAQ,MAChDtxB,SAnBD+xB,EAmB4BL,EAASI,MAnBxB,SAAC9wB,GACvCwwB,EAAcxwB,EAAO+wB,KAeC,SAKKL,EAAS9uB,SAVT8uB,EAASI,OAXZ,IAACC,KA4BnB,cAAC,GAAD,UAAkBN,EAAgBvyB,WAAWuQ,OAC7C,cAAC,GAAD,UAAkBgiB,EAAgBvyB,WAAW8yB,eAcnDC,GAAuB,SAAC5gB,EAAGC,EAAGigB,GAChC,OAAIjgB,EAAEigB,GAAWlgB,EAAEkgB,IACT,EAENjgB,EAAEigB,GAAWlgB,EAAEkgB,GACV,EAEF,GAGLW,GAAa,SAACC,EAAOC,GACvB,IAAMC,EAAiBF,EAAMtgB,KAAI,SAACygB,EAAIzW,GAAL,MAAe,CAACyW,EAAIzW,MAMrD,OALAwW,EAAerhB,MAAK,SAACK,EAAGC,GACtB,IAAMggB,EAAQc,EAAW/gB,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVggB,EAAoBA,EACjBjgB,EAAE,GAAKC,EAAE,MAEX+gB,EAAexgB,KAAI,SAACygB,GAAD,OAAQA,EAAG,OAGnCC,GAAgB,SAACjB,EAAOC,GAC1B,MAAiB,SAAVD,EACH,SAACjgB,EAAGC,GAAJ,OAAU2gB,GAAqB5gB,EAAGC,EAAGigB,IACrC,SAAClgB,EAAGC,GAAJ,OAAW2gB,GAAqB5gB,EAAGC,EAAGigB,KAGxCrhB,GAAS,CACXnL,QAAS,CACL,eAAgB,mBAChB+F,OAAQ,mBACR4F,iBAAiB,EACjBC,cAAc,UAAD,OAAYtL,aAAagB,QAAQ,UAC9C,gCAAiC,MAInCmsB,G,kDACF,WAAYlzB,GAAQ,IAAD,8BACf,cAAMA,IAiCVmzB,kBAAoB,SAACzxB,EAAO+wB,GACxB,IAAMW,EAAQ,EAAKzyB,MAAMsxB,UAAYQ,GAAiC,QAArB,EAAK9xB,MAAMqxB,MAC5D,EAAK/wB,SAAS,CACV+wB,MAAOoB,EAAQ,OAAS,MACxBnB,QAASQ,KAtCE,EA0CnBY,iBAAmB,SAAC3xB,EAAO4xB,GACvB,EAAKryB,SAAS,CACViK,KAAMooB,KA5CK,EAgDnBC,wBAA0B,SAAC7xB,GACvB,EAAKT,SAAS,CACViK,KAAM,EACNsoB,aAAc9xB,EAAMJ,OAAOE,SAnDhB,EA+DnB2P,UA/DmB,sBA+DP,sBAAAY,EAAA,sEACFzM,IAAMK,IAAI,wBAAwBiL,IACvChL,MAAK,SAAA6tB,GAAS,IACJra,EAAcqa,EAAKpuB,KAAnB+T,WACPrT,aAAaC,QAAQ,QAAQytB,EAAKhuB,QAAL,UAC7B,EAAKxE,UAAS,SAAC0F,GAAU,IACdtB,EAAQsB,EAARtB,KAEP,OADAA,EAAK4rB,KAAO7X,EACL,CAAC/T,cAEba,OAAM,SAAA8b,GACL5b,QAAQC,IAAI2b,MAXR,2CA/DO,EA8EnB0R,UAAY,SAAChyB,EAAOiyB,GAChBvtB,QAAQC,IAAI,aAAastB,GACzB,EAAK3zB,MAAM4zB,mBAAmBD,IAhFf,EAmFnBE,YAAc,SAACnyB,EAAOH,GAClB,EAAKN,SAAS,CACV6yB,aAAa,EACbC,WAAYxyB,KAtFD,EA0FnByyB,kBAAoB,WAChB,EAAK/yB,SAAS,CACV6yB,aAAa,KA5FF,EAgGnBG,mBAhGmB,sBAgGE,sBAAAliB,EAAA,6DACH,EACd3L,QAAQC,IAAI,gBAAgB,EAAK1F,MAAMozB,YAFtB,SAGD,EAAKG,kBAHJ,eAKb,EAAKF,oBALQ,2CAhGF,EAwGnBE,gBAxGmB,sBAwGD,4BAAAniB,EAAA,6DACVsH,GAAS,EADC,SAER/T,IAAM6uB,OAAO,0BAA4B,EAAKxzB,MAAMozB,WAAYnjB,IACrEhL,MAAK,SAACC,GACHE,aAAaC,QAAQ,QAAQH,EAASJ,QAAT,UAC7B8C,MAAM,iBACN8Q,GAAS,KAEZnT,OAAM,WACHqC,MAAM,6BACN8Q,GAAS,KAVC,gCAaPA,GAbO,2CAtGd,EAAK1Y,MAAQ,CACT0E,KAAO,CACH+uB,QAAQ,CACJ,CAAC5B,MAAM,KAAKH,MAAK,GACjB,CAACG,MAAM,gBAAgB6B,WAAW,uBAAmBvvB,MAAM,KAC3D,CAAC0tB,MAAM,OAAO6B,WAAW,MAAMvvB,MAAM,KACrC,CAAC0tB,MAAM,OAAO6B,WAAW,SAASvvB,MAAM,KACxC,CAAC0tB,MAAM,cAAc6B,WAAW,oBAAevvB,MAAM,KACrD,CAAC0tB,MAAM,gBAAgB6B,WAAW,mBAAmBvvB,MAAM,KAC3D,CAAC0tB,MAAM,OAAO6B,WAAW,QAAQhC,MAAK,EAAKvtB,MAAM,KACjD,CAAC0tB,MAAM,OAAO6B,WAAW,iBAAchC,MAAK,EAAKvtB,MAAM,UAG3DwvB,SAAS,CACL,CAAC9B,MAAM,KAAMH,MAAK,GAClB,CAACG,MAAM,gBAAiBF,WAAW,EAAMhvB,MAAM,uBAAmBwB,MAAO,OACzE,CAAC0tB,MAAM,OAAQF,WAAW,EAAOhvB,MAAM,MAAOwB,MAAO,OACrD,CAAC0tB,MAAM,OAAQF,WAAW,EAAOhvB,MAAM,SAAUwB,MAAM,OACvD,CAAC0tB,MAAM,cAAeF,WAAW,EAAOhvB,MAAM,oBAAgBwB,MAAM,OACpE,CAAC0tB,MAAM,gBAAkBF,WAAW,EAAMhvB,MAAM,mBAAoBwB,MAAM,QAE9EmsB,KAAK,IAET/lB,KAAM,EACNsoB,YAAa,EACbxB,MAAO,MACPC,QAAS,GACT8B,WAAY,GACZD,aAAa,GA9BF,E,6KA0DJ,OAFE/tB,aAAagB,QAAQ,S,gCAGzBnF,KAAKuP,Y,qIA6DP,IAAD,SAC4CvP,KAAKjB,MAAhD0E,EADD,EACCA,KAAM6F,EADP,EACOA,KAAMsoB,EADb,EACaA,YAAaxB,EAD1B,EAC0BA,MAAOC,EADjC,EACiCA,QAChCpwB,EAAYD,KAAK5B,MAAjB6B,QAEP,OACA,cAAChC,EAAD,UAEI,SAAAoC,GACI,OACI,sBAAKC,UAAU,WAAf,UACI,cAAC0V,GAAA,EAAD,CAAgB/U,UAAWyR,KAA3B,SACI,eAACuD,GAAA,EAAD,CAAO3V,UAAWL,EAAQ0yB,MAAOhlB,aAAW,mBAA5C,UACI,cAAC,GAAD,CACIlK,KAAMA,EAAKivB,SACXzyB,QAASA,EACTmwB,MAAOA,EACPC,QAASA,EACTC,cAAe,EAAKiB,kBACpBqB,SAAUnvB,EAAK4rB,KAAKzjB,SAExB,cAAC0K,GAAA,EAAD,UACC0a,GAAWvtB,EAAK4rB,KAAMgC,GAAcjB,EAAOC,IAAU9Q,MAAMjW,EAAOsoB,EAAatoB,EAAOsoB,EAAcA,GAAajhB,KAAI,SAACzC,GAAD,OAClH,eAAC,GAAD,WACI,cAAC,GAAD,CAAiBjN,UAAU,KAAK4xB,MAAM,MAAtC,SACK3kB,EAAIsL,gBAET,cAAC,GAAD,CAAiBlX,MAAM,QAAvB,SAAgC4L,EAAIjM,OACpC,cAAC,GAAD,CAAiBK,MAAM,QAAvB,SAAgC4L,EAAImf,OACpC,cAAC,GAAD,CAAiB/qB,MAAM,QAAvB,SAAgC4L,EAAIof,cACpC,cAAC,GAAD,CAAiBhrB,MAAM,QAAvB,SAAgC4L,EAAImQ,gBACpC,cAAC,GAAD,CAAiB/b,MAAM,SAAvB,SAAgC,cAACytB,GAAD,CAAgBjxB,QAAU,SAACgB,GAAD,OAAW,EAAKgyB,UAAUhyB,EAAMoO,QAC1F,cAAC,GAAD,CAAiB5L,MAAM,SAAvB,SAAgC,cAAC2tB,GAAD,CAAkBnxB,QAAU,SAACgB,GAAD,OAAW,EAAKmyB,YAAYnyB,EAAMoO,EAAIvO,WATjFuO,EAAIvO,SAa7B,cAACmzB,GAAA,EAAD,CAAa5xB,MAAO,CAAC3C,gBAAiB,mBAAtC,SACI,cAACiU,GAAA,EAAD,UACI,cAACL,GAAA,EAAD,CAAW6G,QAAS,EAAG9X,MAAO,CAACiC,QAAS,KAAxC,SACI,cAACwsB,GAAD,CACIrvB,UAAWL,EAAQtB,KACnBo0B,mBAAoB,CAAC,EAAG,GAAI,IAC5B9xB,UAAU,MACV0oB,MAAOlmB,EAAK4rB,KAAKzjB,OACjBgmB,YAAaA,EACbtoB,KAAMA,EACN0pB,aAAc,EAAKvB,iBACnBwB,oBAAqB,EAAKtB,qCAOlD,eAACpT,GAAA,EAAD,CACI2U,WAAY,CACRhyB,MAAO,CACP3C,gBAAiB,kBACjBqK,WAAY,MACZzH,MAAO,UAGXT,KAAM,EAAK3B,MAAMmzB,YACjB1T,gBAAiB,EAAK4T,kBACtB3T,gBAAiB,EAAK2T,kBAV1B,UAYI,cAAC1T,GAAA,EAAD,UAAcre,EAASrC,WAAWm1B,kBAClC,cAACvU,GAAA,EAAD,UACI,cAACwU,GAAA,EAAD,CACIlyB,MAAO,CAACC,MAAO,SACfkyB,UAAW,EAFf,SAIKhzB,EAASrC,WAAWs1B,6BAG7B,eAACC,GAAA,EAAD,WACI,cAACpxB,EAAA,EAAD,CAAQ7D,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OACnBtD,QAAS,EAAKuzB,mBAHtB,SAIKhyB,EAASrC,WAAW+P,MAEzB,cAAC5L,EAAA,EAAD,CAAQ7D,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OACnBtD,QAAS,EAAKszB,kBAHtB,SAIK/xB,EAASrC,WAAWgQ,qB,GA9M5BtL,aA2NdC,gBA9XA,SAAAC,GAAK,MAAK,CACrB+vB,MAAO,CACHlkB,SAAU,KAEdrM,OAAQ,CACJb,OAAQqB,EAAME,QAAQ,EAAG,EAAG,GAC5BvE,gBAAiB,gBAwXS,CAAE+E,WAAW,GAAhCX,CAAwC2uB,IC1XjDkC,GAAY7wB,YAAW,CACzB8wB,UAAU,CACNl1B,gBAAgB,cAFNoE,CAIf4e,MAEGmS,G,kDAEF,WAAYt1B,GAAQ,IAAD,8BACf,cAAMA,IAOVie,WAAa,WACf,EAAKhd,SAAS,CACbid,WAAW,EACXqX,eAAgB,MAXI,EAetBrX,UAAY,WAA0B,IAAzBsX,IAAwB,yDACjCA,EACF,EAAKv0B,SAAS,CACbid,WAAW,EACXqX,eAAgB,KAGjB,EAAKt0B,SAAS,CACbid,WAAW,KAvBQ,EA4BnBuX,qBAAuB,SAAAC,GACzB,EAAKz0B,SAAS,CACbs0B,eAAgBG,IAGjB,EAAKxX,WAAU,IA/BT,EAAKvd,MAAQ,CACTud,WAAU,EACVqX,eAAe,IAJJ,E,qDAoCT,IAAD,OACE1zB,EAAYD,KAAK5B,MAAjB6B,QACb,OACC,cAAChC,EAAD,UAEE,SAAAoC,GACC,OACC,qCACC,eAACke,GAAA,EAAD,CACC7d,KAAM,EAAK3B,MAAMud,UACjBjZ,SAAS,KACT5B,WAAW,EACX+c,gBAAiB,EAAKnC,WACtBoC,gBAAiB,EAAKpC,WALvB,UAOC,cAACqC,GAAA,EAAD,WA7EauN,EA6Ee,EAAKltB,MAAM40B,eA7ES,IAA5BI,OAAOC,KAAK/H,GAAKrgB,OA6EoBvL,EAASrC,WAAWi2B,aAAe5zB,EAASrC,WAAWuQ,QAChH,cAACqQ,GAAA,EAAD,UACC,cAAC,GAAD,CACCtE,aAAc,EAAK+B,WACnBzB,UAAW,EAAK7b,MAAM40B,sBAKzB,eAACO,GAAA,EAAD,CAAW7wB,SAAS,KAApB,UACC,cAACrC,EAAA,EAAD,CAAY1C,QAAQ,KAAK2C,UAAU,KAAKX,UAAWL,EAAQgZ,OAA3D,SAAoE5Y,EAASrC,WAAWm2B,aAExF,cAAC,GAAD,CAAgBnC,mBAAoB,EAAK6B,uBAEzC,cAACL,GAAD,CACC10B,QAAS,EAAKwd,UACdhc,UAAWL,EAAQm0B,IACnBjzB,MAAM,YACNwM,aAAW,MAJZ,SAMC,cAAC0mB,GAAA,EAAD,YAjGY,IAAApI,S,GAwBMvpB,aAsFbC,gBA5GA,SAAAC,GAAK,MAAK,CACrBwxB,IAAK,CACDhuB,SAAU,QACVE,IAAK,OACLsT,MAAO,OAEXX,OAAS,CACL9V,QAAS,SACTmxB,aAAc,iBACdld,cAAe,YACfjW,MAAM,QACZyH,WAAY,UAiGmB,CAACtF,WAAU,GAA7BX,CAAoC+wB,I,2EC1G7C9O,GAASjF,cAAY,SAAC/c,GAAD,MAAY,CACnCqW,OAAS,CACL9V,QAAS,SACTmxB,aAAc,iBACdld,cAAe,YACfjW,MAAM,QACNyL,aAAc,GACdhE,WAAY,OACZK,YAAa,OACb/F,MAAO,OAEX2N,KAAM,CACF1P,MAAO,YACP4hB,cAAe,UAEnBwR,KAAM,CACFrxB,MAAO,MACP3E,gBAAiB,QACjBgD,OAAQ,OACRsB,UAAW,GACXO,aAAc,IAElBoxB,aAAa,CACTj2B,gBAAiB,WAErBk2B,WAAY,CACR1R,cAAe,SACfna,WAAY,IAEhB8rB,SAAU,CACN9rB,WAAY,EACZ7F,QAAS,SACTggB,cAAe,UAEnB3gB,OAAQ,CACJb,OAAQqB,EAAME,QAAQ,EAAG,EAAG,GAC5BvE,gBAAiB,iBAqKV+lB,GAjKO,WAAM,IAAD,EAEmB1I,mBAAS,CAC/C,CACIjc,GAAI,EACJ0P,QAAQ,kUAIRslB,UAAU,GAEd,CACIh1B,GAAI,EACJ0P,QAAS,uDACTslB,UAAU,GAEd,CACIh1B,GAAI,EACJ0P,QAAQ,iUAIRslB,UAAU,GAEd,CACIh1B,GAAI,EACJ0P,QAAS,mCACTslB,UAAU,GAEd,CACIh1B,GAAI,EACJ0P,QAAS,4EACTslB,UAAU,GAEd,CACIh1B,GAAI,EACJ0P,QAAS,4EACTslB,UAAU,GAEd,CACIh1B,GAAI,EACJ0P,QAAS,oCACTslB,UAAU,KA1CK,oBAEhBC,EAFgB,KA6CjBza,GA7CiB,KA6CPC,qBAAWvc,IA7CJ,EA8Ca+d,mBAASgZ,EAAcrV,MAAM,EAAE,IA9C5C,oBA8ChBsV,EA9CgB,KA8CE7N,EA9CF,OAgDIpL,mBAAS,GAhDb,oBAgDhBsL,EAhDgB,KAgDTC,EAhDS,KAiDjBG,EAAYF,KAAKC,KAAKuN,EAAchpB,OAFzB,GA/CM,EAkDCgQ,oBAAS,GAlDV,oBAkDhBlb,EAlDgB,KAkDVo0B,EAlDU,OAmDiClZ,mBAAS,IAnD1C,oBAmDhBmZ,EAnDgB,KAmDMC,EAnDN,KAoDjB/0B,EAAU2kB,KASVqQ,EAAkB,SAACn1B,EAAMo1B,GAC3BF,EAAwBE,GACxBJ,GAAQ,IAGNK,EAAc,SAACr1B,EAAOo1B,GACJ,kBAAjBA,IACCN,EAAcA,EAAcQ,WAAU,SAAAzlB,GAAC,OAAIA,EAAEhQ,KAAOu1B,EAAav1B,OAAKg1B,UAAW,GACrFG,GAAQ,IAGNO,EAAwBtX,IAAMgI,OAAO,MAU3C,OATAhI,IAAMmG,WAAU,WACZ,GAAIxjB,EAAM,CAAC,IACM40B,EAAuBD,EAAhC5N,QACmB,OAAvB6N,GACAA,EAAmBC,WAGxB,CAAC70B,IAGA,sBAAKQ,MAAO,CAAC2B,UAAW,KAAM+F,WAAY,MAAMK,YAAa,MAA7D,UACI,cAACjI,EAAA,EAAD,CAAY1C,QAAQ,KAAK2C,UAAU,KAAKX,UAAWL,EAAQgZ,OAA3D,SAAoEkB,EAAQnc,WAAWsmB,gBACvF,cAAC1e,EAAA,EAAD,CAAMC,WAAS,EAACiH,QAAU,SAA1B,SACI,cAAC9D,GAAD,CAAkB2gB,MAAOrC,EAAWsC,iBAAe,EAACC,gBAAc,EAACC,YAAa,EAAGxgB,KAAM4d,EACrF1nB,SAAU,SAACC,EAAE6J,GAAH,OAjCN,SAAC7J,EAAE6J,GACnB,IAAIksB,EAAuBZ,EAAcrV,MAR5B,GAQmCjW,EAAK,GARxC,EAQoDA,GACjE0d,EAAQwO,GACRrO,EAAU7d,GACV9E,QAAQC,IAAIowB,GA6BoB7K,CAAcvqB,EAAE6J,IACpC2gB,WAAY,SAACnkB,GAAD,OACR,cAACuD,GAAD,eAA0BvD,SAGrC+uB,EAAkBlkB,KAAI,SAAC/Q,EAAM+a,GAC1B,OACI/a,EAAM+0B,SACN,cAACc,GAAA,EAAD,CAAMn1B,UAAWL,EAAQs0B,KAAzB,SACI,cAACmB,GAAA,EAAD,CAAgB52B,QAAS,SAACgB,GAAD,OAAWm1B,EAAgBn1B,EAAMF,IAA1D,SACI,cAAC+1B,GAAA,EAAD,UACI,sBAAKr1B,UAAWL,EAAQw0B,WAAxB,UACI,cAAC,KAAD,CAAuBn0B,UAAWL,EAAQ4Q,KAAMC,SAAS,UACzD,mBAAGxQ,UAAWL,EAAQy0B,SAAtB,SACK90B,EAAMyP,QAAQzD,OAAO,GAClBhM,EAAMyP,QAAQkQ,MAAM,EAAE,IAAI,MAC1B3f,EAAMyP,kBARMsL,GAepC,cAAC8a,GAAA,EAAD,CAAMn1B,UAAWL,EAAQs0B,KAAzB,SACI,cAACmB,GAAA,EAAD,CAAgB52B,QAAS,SAACgB,GAAD,OAAWm1B,EAAgBn1B,EAAMF,IAA1D,SACI,cAAC+1B,GAAA,EAAD,CAAar1B,UAAWL,EAAQu0B,aAAhC,SACI,sBAAKl0B,UAAWL,EAAQw0B,WAAxB,UACI,cAAC,KAAD,CAAyBn0B,UAAWL,EAAQ4Q,KAAMC,SAAS,UAC3D,mBAAGxQ,UAAWL,EAAQy0B,SAAtB,SACK90B,EAAMyP,QAAQzD,OAAO,GAClBhM,EAAMyP,QAAQkQ,MAAM,EAAE,IAAI,MAC1B3f,EAAMyP,sBAQtC,eAACkP,GAAA,EAAD,CACI2U,WAAY,CACRhyB,MAAO,CACL3C,gBAAiB,kBACjBqK,WAAY,MACZzH,MAAO,UAGbT,KAAMA,EACNE,QAASu0B,EACTS,OAAO,QAVX,UAYI,cAAClX,GAAA,EAAD,CAAa/e,GAAG,sBAAhB,mBACA,cAACif,GAAA,EAAD,UACI,cAACwU,GAAA,EAAD,CACIlyB,MAAO,CAACC,MAAO,SACfoX,IAAK8c,EACLhC,UAAW,EAHf,SAKK0B,EAAqB1lB,YAG9B,cAACkkB,GAAA,EAAD,UACI,cAACpxB,EAAA,EAAD,CAAQ7D,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmC,OACnBtD,QAAS,SAACgB,GAAD,OAAWq1B,EAAYr1B,EAAOi1B,IAH/C,yBC/KLc,GAtBU,SAAC,GAAgB,IAAf/T,EAAc,EAAdA,SAEjBgU,EAAkB7wB,OAAOd,aAAagB,QAAQ,aAFf,EAGEyW,mBAASka,GAAmB,MAH9B,oBAG9B/3B,EAH8B,KAGjBg4B,EAHiB,KAK/BC,EAAW,CACbj4B,eACAC,WAAWP,EAAaM,GACxBmlB,mBAAoB,SAAAgG,GAChB,IAAM+M,EAAcr4B,EAAgBsrB,GAAYA,EAAW,KAC3D6M,EAAgBE,GAChBhxB,OAAOd,aAAaC,QAAQ,YAAa6xB,KAIjD,OACI,cAACp4B,EAAgBq4B,SAAjB,CAA0Bt2B,MAAOo2B,EAAjC,SACKlU,K,uCCRPL,GAAY9B,cAAW,SAAC/c,GAAD,MAAY,CACrCwV,OAAO,CACH7W,OAAQ,gBACRhD,gBAAiB,aAErB2tB,UAAW,CACPtf,aAAc,OACduf,WAAY,QACZppB,QAAS,OACTC,cAAe,cAoJRmzB,GA9IQ,SAAC/3B,GAEGA,EAAhBkc,aAFwB,IAIzB6S,EAAgB,CAClBxrB,KAAK,GACLy0B,MAAM,GACNxH,KAAK,GACLyH,WAAU,IAAIC,MAAOC,sBAEnBC,EAAS,CACX,CACI52B,MAAM,iBACN8B,MAAM,kBAEV,CACI9B,MAAM,aACN8B,MAAM,cAEV,CACI9B,MAAM,OACN8B,MAAM,SAGR+0B,EAAO,CACT,CACI72B,MAAM,aACN8B,MAAM,cAEV,CACI9B,MAAM,eACN8B,MAAM,iBAGR8rB,EAAmBC,OAAaC,MAAM,CACxC/rB,KAAK8rB,OACL2I,MAAM3I,OAAajsB,SAAS,sBAC5BotB,KAAKnB,OAAajsB,SAAS,2BAC3B60B,UAAU5I,OACT1S,IAAI,IAAIub,MACRtb,IAAI,IAAIsb,KAAK,wBACb90B,SAAS,cAQRvB,EAAUwhB,KAChB,OACI,cAAC,KAAD,CACI0L,cAAiBA,EACjB1mB,SATa,aAUb+mB,iBAAmBA,EACnBvC,OAAU,cACNyL,WADM,EAENC,aAFM,EAGN3I,OAHM,EAINkB,cAJM,IAKNI,EALM,EAKNA,QALM,EAMN9a,aANM,EAONoiB,WAPM,OASN,eAAC,KAAD,CAAMt2B,UAAWL,EAAQisB,UAAzB,UACI,cAAC,KAAD,CACIjqB,KAAK,OACLtC,GAAG,OACH2F,KAAK,OACL5D,MAAM,gBACV,cAAC,KAAD,CACIT,UAAWK,KACXqtB,QAAM,EACNhvB,GAAG,QACH2F,KAAK,QACL/D,OAAO,SACPG,MAAM,QANV,SASQ80B,EAAO7lB,KAAI,SAAC1O,EAAK0Y,GACb,OACI,cAACsO,GAAA,EAAD,CAEIrpB,MAAOqC,EAAKrC,MAFhB,SAGSqC,EAAKP,OAHd,cACgBiZ,SAShC,cAAC,KAAD,CACI1Z,UAAWK,KACXqtB,QAAM,EACNhvB,GAAG,OACH2F,KAAK,OACL/D,OAAO,SACPG,MAAM,OANV,SASQ+0B,EAAM9lB,KAAI,SAAC1O,EAAK0Y,GACZ,OACI,cAACsO,GAAA,EAAD,CAEIrpB,MAAOqC,EAAKrC,MAFhB,SAGSqC,EAAKP,OAHd,cACgBiZ,SAS5B,cAAC,KAAD,CAAyBkc,MAAOC,KAAcC,OAAQC,MAAtD,SACI,cAAC,KAAD,CACA/1B,UAAWg2B,KACXt3B,GAAG,OACH2F,KAAK,OACL/D,OAAO,SACPqqB,OAAO,aACPlqB,MAAM,WAGd,cAACS,EAAA,EAAD,CACI7B,UAAWL,EAAQmY,OACnBnW,KAAK,SACL3D,QAAQ,YACR6C,MAAM,YACN+T,UAAWoa,EALf,kCCvId7N,GAAY9B,cAAW,SAAC/c,GAAD,MAAY,CACrCwV,OAAO,CACH7W,OAAQ,gBACRhD,gBAAiB,iBAwGV24B,GApGmB,SAAC94B,GAAW,IAAD,EAENwd,oBAAS,GAFH,oBAElCub,EAFkC,KAEvBC,EAFuB,OAGVxb,oBAAS,GAHC,oBAGlCyb,EAHkC,KAGzBC,EAHyB,KAQnCC,EAAmB,WACrBH,GAAc,IATuB,EAmBZxb,mBAAS,GAnBG,oBAmBpCvD,EAnBoC,KAmB1Bmf,EAnB0B,KAoBzCnf,EAAW,SAACof,GACRA,KAGJ,IACMx3B,EAAUwhB,KAGhB,OACI,gCACI,eAAClD,GAAA,EAAD,CACI7d,KAAMy2B,EACN9zB,SAAS,KACT5B,WAAW,EACX+c,gBAAiB+Y,EACjB9Y,gBAAiB8Y,EALrB,UAOI,cAAC7Y,GAAA,EAAD,0BACA,cAACE,GAAA,EAAD,UACI,cAAC,GAAD,CACItE,aAAgBid,SAI5B,eAAC3xB,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGgK,QAAQ,gBAAgB7J,WAAW,SAA/D,UACA,cAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,eAACic,GAAA,EAAD,CAAKjf,QAAQ,OAAO20B,eAAe,SAAnC,UACI,cAACv1B,EAAA,EAAD,CAAQ7D,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmY,OACnBtZ,QAAS,WArC7Bw4B,GAAY,IAkCA,yBAOA,cAACn1B,EAAA,EAAD,CAAQ7D,QAAQ,YACR6C,MAAM,YACNb,UAAWL,EAAQmY,OACnBtZ,QAAS,WAnD7Bs4B,GAAc,IAgDF,+BAQiB,IAAbC,EACA,cAACl1B,EAAA,EAAD,CAAQ7D,QAAQ,YACZ6C,MAAM,YACNb,UAAWL,EAAQmY,OACnBtZ,QAAS,kBAAM04B,GAAW,SAAAzyB,GAAI,OAAEA,EAAK,MAHzC,8BAQA,cAAC5C,EAAA,EAAD,CAAQ7D,QAAQ,YACZ4W,SAAS,OACT/T,MAAM,YACNb,UAAWL,EAAQmY,OACnBtZ,QAAS,kBAAM04B,GAAW,SAAAzyB,GAAI,OAAEA,EAAK,MAJzC,oCAYK,IAAbsyB,EACA,cAACzxB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC4xB,GAAD,CAAuBzf,YA7D5B,OAgEC,cAACtS,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,GAAD,CAAmBmS,YAjExB,GAiE6CG,SAAUA,aCvGhEuM,GAASjF,cAAY,SAAC/c,GAAD,MAAY,CACnC7B,MAAO,CACH8B,UAAW,kBACXE,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhB20B,QAAS,CACL10B,MAAO,OACPL,UAAW,OAEfT,OAAQ,CACJb,OAAQ,mBACRhD,gBAAiB,aAErBs5B,aAAc,CACVt2B,OAAQ,OACRwB,QAAS,OACTG,MAAO,MACP3E,gBAAgB,QAChB4E,QAAQ,sBAEZtB,aAAc,CACVtD,gBAAgB,QAChB6E,aAAc,MACdqL,SAAS,MACT1L,QAAQ,QAEZ8C,UAAW,CACP9C,QAAQ,OACRqD,SAAS,WACTwG,aAAa,OACbhE,WAAW,OAEfsY,MAAO,CACHhe,MAAON,EAAME,QAAQ,IACrBuD,OAAQzD,EAAME,QAAQ,IACtByD,KAAK,MACL1D,UAAU,OACVuD,SAAS,YAEb0xB,OAAQ,CACJ,gCAAiC,CAC7B32B,MAAO,aAEX,kCAAmC,CAC/B+B,MAAO,GACPmD,OAAQ,GACRxD,WAAY,EACZ+F,YAAa,KAGrBmvB,iBAAkB,CACd,4CAA6C,CACzC52B,MAAO,cAKboL,GAAc,CAChB,CACG3M,MAAO,EACP8B,MAAM,SAET,CACI9B,MAAM,GACN8B,MAAM,eAET,CACG9B,MAAM,IACN8B,MAAM,WAGRs2B,GAAa,CACf,CACGp4B,MAAO,EACP8B,MAAM,QAET,CACI9B,MAAM,GACN8B,MAAM,SAET,CACG9B,MAAM,IACN8B,MAAM,QAGRu2B,GAAkB,CACpB,CACIr4B,MAAM,EACN8B,MAAM,OAEV,CACI9B,MAAM,GACN8B,MAAM,MAEV,CACI9B,MAAM,GACN8B,MAAM,KAEV,CACI9B,MAAM,GACN8B,MAAM,MAGRiL,GAAmB,CACrB,CACI/M,MAAM,EACN8B,MAAM,SAEV,CACI9B,MAAM,GACN8B,MAAM,gBAEV,CACI9B,MAAM,IACN8B,MAAM,WAgSCw2B,GA5RK,WAChB,IAAM/d,EAAUC,qBAAWvc,GACrBqI,EAAWiyB,cAFI,EAGYvc,mBAAS,IAHrB,oBAGdwc,EAHc,KAGJC,EAHI,OAIkBzc,mBAAS,IAJ3B,oBAId9M,EAJc,KAIDwpB,EAJC,KAKfr4B,EAAU2kB,KA6ChB,OA3CAV,qBAAU,WACN,IAAMvkB,EAAKuG,EAASnH,MAAM2K,UACpBsF,EAAS,CACXnL,QAAS,CACL,eAAgB,mBAChB+F,OAAQ,qBAGV2uB,EAAc,uCAAG,sBAAApoB,EAAA,sEACbzM,IAAMK,IAAI,yBAAyBpE,EAAGqP,GAC3ChL,MAAM,SAAAC,GACHo0B,EAAap0B,EAASR,SAEzBa,OAAM,SAAAC,GAAK,OAAEC,QAAQC,IAAIF,MALP,2CAAH,qDAOdi0B,EAAiB,uCAAG,sBAAAroB,EAAA,sDACtBzM,IAAMK,IAAI,4BAA4BpE,EAAIqP,GACzChL,MAAK,SAAAC,GACF,IAAM6K,EAAe,CACjB/E,OAAQ9F,EAASR,KAAKA,KAAKuG,OAAOC,OAClCC,OAAQjG,EAASR,KAAKA,KAAK0G,OAC3BC,OAAQnG,EAASR,KAAKA,KAAK4C,OAC3BgE,WAAYpG,EAASR,KAAKA,KAAK6G,WAAWL,OAC1CM,WAAYtG,EAASR,KAAKA,KAAK+G,WAC/BC,IAAKxG,EAASR,KAAKA,KAAKiH,IACxBC,KAAM1G,EAASR,KAAKA,KAAKmH,KAAKX,OAC9BY,MAAO5G,EAASR,KAAKA,KAAKqH,MAC1BC,OAAQ9G,EAASR,KAAKA,KAAKuH,OAAOf,OAClCgB,IAAKhH,EAASR,KAAKA,KAAKyH,IACxBC,WAAYlH,EAASR,KAAKA,KAAK2H,WAC/BC,MAAOpH,EAASR,KAAKA,KAAK6H,MAC1BC,SAAUtH,EAASR,KAAKA,KAAK+H,SAC7BC,YAAaxH,EAASR,KAAKA,KAAKiI,YAAYzB,QAEhDzF,QAAQC,IAAIqK,GACZwpB,EAAgBxpB,MAEnBxK,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAtBN,2CAAH,qDAwBvBg0B,IACAC,MACD,IAGC,qBAAKl4B,UAAWL,EAAQ43B,aAAxB,SACI,sBAAKv3B,UAAWL,EAAQc,MAAxB,UACI,sBAAKT,UAAWL,EAAQ23B,QAAxB,UACI,cAAChyB,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGgK,QAAQ,SAAS7J,WAAW,SAAxD,SACI,cAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,qBAAKzF,UAAWL,EAAQ4F,UAAxB,SACI,cAACob,GAAA,EAAD,CAAQf,KAAc,OAATkY,QAAS,IAATA,OAAA,EAAAA,EAAWtX,QAAO,uBAAwBxgB,UAAWL,EAAQihB,cAItF,cAACtb,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACzE,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,OAAgB,OAATw4B,QAAS,IAATA,OAAA,EAAAA,EAAWjpB,YAAW,GAC7BzN,MAAOyY,EAAQnc,WAAW2D,KAC1BrB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,OAG/B,cAAC/D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACzE,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,OAAgB,OAATw4B,QAAS,IAATA,OAAA,EAAAA,EAAWhpB,WAAU,GAC5B1N,MAAOyY,EAAQnc,WAAW8D,QAC1BxB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,OAG/B,cAAC/D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACzE,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,OAAgB,OAATw4B,QAAS,IAATA,OAAA,EAAAA,EAAW15B,QAAO,GACzBgD,MAAM,QACNpB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,OAG/B,cAAC/D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACzE,EAAA,EAAD,CACAhD,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,OAAgB,OAATw4B,QAAS,IAATA,OAAA,EAAAA,EAAW9yB,OAAM,GACxB5D,MAAOyY,EAAQnc,WAAW+D,SAC1BzB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,UAI/B,qBAAKrJ,UAAWL,EAAQ23B,QAAxB,SACI,eAAChyB,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAIgK,QAAQ,gBAAgB7J,WAAW,SAAhE,UACI,cAAC2C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,MAAOkP,EAAarE,KAAK,GACzB/I,MAAO,OACPpB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,OAG/B,cAAC/D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,MAAOkP,EAAavE,YAAY,GAChC7I,MAAO,2BACPpB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,OAG/B,cAAC/D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,MAAOkP,EAAa5E,QAAQ,GAC5BxI,MAAO,OACPpB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,OAG/B,cAAC/D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,MAAOkP,EAAa1E,QAAQ,GAC5B1I,MAAO,aACPpB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,OAG/B,cAAC/D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,MAAOkP,EAAazD,OAAO,GAC3B3J,MAAO,gBACPpB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,OAG/B,cAAC/D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,MAAOkP,EAAa3D,YAAY,GAChCzJ,MAAO,kBACPpB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,OAG/B,cAAC/D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIW,KAAK,SACL3D,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,MAAOkP,EAAavD,UAAU,GAC9B7J,MAAO,wBACPpB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,OAG/B,eAAC/D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACI,cAAC/E,EAAA,EAAD,CAAYrB,GAAG,2BAA2BqN,cAAY,EAAC9L,MAAO,CAACC,MAAM,SAArE,2BAGA,cAACkH,GAAD,CACI/H,UAAWL,EAAQ63B,OACnB5qB,kBAAgB,2BAChBC,KAAM,KACNC,MAAOb,GACP3M,MAAOsH,SAAS4H,EAAa/D,QAC7BmK,UAAQ,OAGhB,eAACtP,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACI,cAAC/E,EAAA,EAAD,CAAYrB,GAAG,2BAA2BqN,cAAY,EAAC9L,MAAO,CAACC,MAAM,SAArE,iBAGA,cAACkH,GAAD,CACI/H,UAAWL,EAAQ63B,OACnB5qB,kBAAgB,2BAChBC,KAAM,KACNC,MAAO4qB,GACPp4B,MAAOsH,SAAS4H,EAAajE,OAC7BqK,UAAQ,OAGhB,eAACtP,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACI,cAAC/E,EAAA,EAAD,CAAYrB,GAAG,2BAA2BqN,cAAY,EAAC9L,MAAO,CAACC,MAAM,SAArE,8CAGA,cAACkH,GAAD,CACI/H,UAAWL,EAAQ63B,OACnB5qB,kBAAgB,2BAChBC,KAAM,KACNC,MAAOT,GACP/M,MAAOsH,SAAS4H,EAAarD,aAC7ByJ,UAAQ,OAGhB,eAACtP,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACI,cAAC/E,EAAA,EAAD,CAAYrB,GAAG,2BAA2BqN,cAAY,EAAC9L,MAAO,CAACC,MAAM,SAArE,4BAGA,cAACkH,GAAD,CACI/H,UAAWL,EAAQ63B,OACnB5qB,kBAAgB,2BAChBC,KAAM,KACNC,MAAO6qB,GACPr4B,MAAOsH,SAAS4H,EAAazE,YAC7B6K,UAAQ,OAGhB,cAACtP,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,MAAOkP,EAAa/E,OAA6B,MAAtB+E,EAAa/E,OAAa,sBAAY,UAAU,GAC3ErI,MAAO,iBACPpB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,OAG/B,cAAC/D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,cAACzE,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,MAAyB,MAAlBkP,EAAa7D,IAAU6D,EAAa7D,IAAI,MAAM,MAAM,GAC3DvJ,MAAO,MACPpB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,OAG/B,cAAC/D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACzE,EAAA,EAAD,CACIhD,QAAQ,SACRiD,OAAO,SACPE,WAAS,EACT7B,OAAmB,OAAZkP,QAAY,IAAZA,OAAA,EAAAA,EAAcnE,OAAM,GAC3BjJ,MAAO,kBACPpB,UAAWL,EAAQ4B,aACnB42B,WAAY,CAAC9uB,UAAU,kBCpXvDjG,IAAMC,SAASC,QAAU,sCACzBF,IAAMC,SAASE,QAAQC,KAAK,+BAAiC,sCAC7DJ,IAAMC,SAASE,QAAQE,IAAI,+BAAiC,sC,IAuP7C20B,G,kDArPb,WAAYt6B,GAAQ,IAAD,8BACjB,cAAMA,IAQR2I,kBAAoB,WAClB,IAAI7C,EAAQC,aAAagB,QAAQ,SACjCX,QAAQC,IAAI,QAAQP,GACpB,IAAI2K,EAAO,OACE,MAAT3K,QAA2BuF,IAAVvF,IAGnB2K,EAAO1H,YAAWjD,GAAO2K,MAE3B,EAAKxP,SAAS,CACZwP,KAAMA,KAnBS,EA4HnB8pB,gBAAkB,SAACl5B,GACjB,IAAMm5B,EAAY,EAAK75B,MAAM85B,UAC7B,EAAKx5B,SAAS,CACZwP,KAAM,EAAK9P,MAAM8P,KACjBgqB,WAAYD,KA9Hd,EAAK75B,MAAQ,CACX8P,KAAM,OACNgqB,WAAW,EACXC,WAAU,GALK,E,oGAuBGC,EAAiBjvB,G,yEACjCwH,EAAO,CACT0nB,KAAM,CACJr3B,KAAMo3B,EAAgB35B,MACtB4C,SAAU+2B,EAAgB/5B,UAE5Bi6B,KAAK,eACAnvB,IAkBDkF,EAAS,CACbnL,QAAS,CACP,eAAgB,mBAChB+F,OAAQ,qBAIZlG,IACGI,KAAK,oBAAqBwN,EAAMtC,GAChChL,MAAK,SAACC,GAAD,OAAcO,QAAQC,IAAIR,MAC/BK,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,M,wLAGP0C,EAAQ6C,G,yEAC7BwH,EAAO,CACT/J,OAAQN,EACRukB,aAAc1hB,GAElBtF,QAAQC,IAAI,iBAAY6M,GAChBtC,EAAS,CACbnL,QAAS,CACP,eAAgB,mBAChB+F,OAAQ,qBAIZlG,IAAMmd,IAAI,4BAA6BvP,EAAMtC,GAC5ChL,MAAK,SAAAC,GAAQ,OAAEO,QAAQC,IAAIR,MAC3BK,OAAM,SAAAC,GAAK,OAAEC,QAAQC,IAAIF,M,oLAKLd,G,kFACjB6N,EAAO,CACT/J,OAAQ9D,EAAK8D,OACbC,YAAa/D,EAAK+D,YAClBC,YAAahE,EAAKgE,aAEduH,EAAS,CACbnL,QAAS,CACP,eAAgB,mBAChB+F,OAAQ,qBAGR6N,GAAS,E,SACP/T,IAAMmd,IAAI,2BAA4BvP,EAAMtC,GAC/ChL,MAAK,WACJyT,GAAS,KAEVnT,OAAM,WACLmT,GAAS,K,gCAENA,G,mLAGe/Y,G,gFAChBsQ,EAAS,CACbnL,QAAS,CACP,eAAgB,mBAChB+F,OAAQ,qBAGR6N,GAAS,E,SACP/T,IAAMI,KAAN,mCAAuCpF,GAASsQ,GACrDhL,MAAK,SAACC,GACLO,QAAQC,IAAIR,EAASR,MACrBgU,GAAS,KAEVnT,OAAM,WACLmT,GAAS,K,gCAEJA,G,iIAWC,IAAD,OACD5I,EAAO7O,KAAKjB,MAAM8P,KAExB,OACE,cAAC,IAAD,UACA,cAAC,GAAD,UACI,sBAAKvO,UAAU,gBAAf,UACE,cAAC,GAAD,IACE,cAAC,GAAD,CAAQuO,KAAMA,IAEd,cAAC,IAAD,CAAOqqB,OAAK,EAACC,KAAK,IAAIlO,OAAQ,WAC5B,YAAUxhB,IAAPoF,GAA2B,OAAPA,GAAuB,SAARA,EAC7B,cAAC,GAAD,IACQ,SAAPA,EACD,cAAC,IAAD,CAAU3O,GAAG,6BACL,UAAP2O,EACC,cAAC,IAAD,CAAU3O,GAAI,YACT,oBAElB,cAAC,IAAD,CAAOg5B,OAAK,EAACC,KAAK,gBAAgBlO,OAAQ,kBAAM,cAAC,EAAD,OAChD,cAAC,IAAD,CACEiO,OAAK,EACLC,KAAK,SACLlO,OAAQ,kBAAM,cAAC,EAAD,OAEhB,cAAC,IAAD,CACEiO,OAAK,EACLC,KAAK,WACLlO,OAAQ,SAAC7sB,GAAD,OACN,cAAC,GAAD,aAAckO,YAAa,EAAK8sB,eAAe3kB,KAAK,IAAWrW,OAGnE,cAAC,IAAD,CACE86B,OAAK,EACLC,KAAK,kBACLlO,OAAQ,kBAAM,cAAC,EAAD,CAAgBnsB,QAAS,EAAKu6B,iBAAiB5kB,KAAK,QAEpE,cAAC,IAAD,CACEykB,OAAK,EACLC,KAAK,iBACLlO,OAAQ,kBAAM,cAAC,EAAD,CAAensB,QAAS,UAGxC,cAAC,IAAD,CACAo6B,OAAK,EAACC,KAAK,kBACXlO,OAAQ,kBAAM,cAAC,EAAD,CAAkBnsB,QAAS,EAAKw6B,kBAAkB7kB,KAAK,QAErE,cAAC,IAAD,CAEEykB,OAAK,EACLC,KAAK,UACLlO,OAAQ,kBAAI,cAAC,GAAD,OAGd,cAAC,IAAD,CACEiO,OAAK,EACLC,KAAK,iBACLlO,OAAQ,SAAC7sB,GAAD,OAAW,cAAC,GAAD,eAAuBA,OAE5C,cAAC,IAAD,CACE86B,OAAK,EACLC,KAAK,wBACLlO,OAAQ,kBAAM,cAAC,GAAD,OAEhB,cAAC,IAAD,CAAOiO,OAAK,EAACC,KAAK,iBAAiBlO,OAAQ,kBAAM,cAAC,GAAD,OACjD,cAAC,IAAD,CACEiO,OAAK,EACLC,KAAK,sBACLlO,OAAQ,SAAC7sB,GAAD,OAAW,cAAC,GAAD,eAA+BA,OAEpD,cAAC,IAAD,CACE86B,OAAK,EACLC,KAAK,2BACLlO,OAAQ,kBAAM,cAAC0M,GAAD,OAEhB,cAAC,IAAD,CACEuB,OAAK,EACLC,KAAK,iBACLlO,OAAQ,kBAAM,cAAC,GAAD,OAEhB,cAAC,IAAD,CACEiO,OAAK,EACLC,KAAK,YACLlO,OAAQ,kBAAM,cAAC,GAAD,CAAUlf,iBAAkB,EAAKwtB,qBAAqB9kB,KAAK,QAE3E,cAAC,IAAD,CACEykB,OAAK,EACLC,KAAK,kBACLlO,OAAQ,kBAAM,cAAC,GAAD,OAEhB,cAAC,IAAD,CACEiO,OAAK,EACLC,KAAK,iBACLlO,OAAQ,kBAAM,cAAC,GAAD,OAEf,cAAC,IAAD,CACCiO,OAAK,EACLC,KAAK,mBACLlO,OAAQ,kBAAM,cAAC,GAAD,CAAiBlf,iBAAkB,EAAKwtB,qBAAqB9kB,KAAK,QAElF,cAAC,IAAD,CACEykB,OAAK,EACLC,KAAK,eACLlO,OAAQ,SAAC7sB,GAAD,OAAW,cAAC,GAAD,eAAiBA,OAGxC,cAAC,GAAD,e,GA9OMsE,aCrBH82B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqB11B,MAAK,YAAkD,IAA/C21B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAS/O,OAAO,cAAC,GAAD,IAAQvmB,SAASC,eAAe,SAKhD60B,O","file":"static/js/main.aefeb539.chunk.js","sourcesContent":["import GB from './EN.json'\r\nimport PL from './PL.json'\r\n\r\nexport const languageList = {GB,PL}\r\n\r\nexport const languageOptions = {\r\n    GB: 'English',\r\n    PL: 'Polski',\r\n  };","import {createContext} from 'react'\r\nimport {languageList} from './LanguageOptions'\r\n\r\nexport let LanguageContext = createContext({\r\n    userLanguage : 'PL',\r\n    dictionary: languageList.PL\r\n})\r\n\r\nexport const ContextConsumer = LanguageContext.Consumer\r\n// export default LanguageContext","import React, {Component} from 'react';\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport { Redirect } from 'react-router-dom';\r\nimport '../Styles/Forms.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(1, 0, 2),\r\n      backgroundColor: 'firebrick'\r\n      \r\n    },\r\n    formPosition: {\r\n      margin: 'auto',\r\n      width: '30%',\r\n      backgroundColor:'black',\r\n      padding:'0px 20px 20px 20px'\r\n    }, \r\n    formElements: {\r\n        backgroundColor:'white',\r\n        borderRadius: '5px',\r\n    },\r\n    styledAlert: {\r\n      '&.MuiAlert-filledError': {\r\n        backgroundColor: 'firebrick'\r\n      }\r\n    },\r\n    styledSnackbar: {\r\n      '&.MuiSnackbar-root': {\r\n        maxWidth: '30%'\r\n      }\r\n    }\r\n  });\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" backgroundColor='firebrick' {...props}/>;\r\n}\r\n\r\nclass Registration extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login:\"\",\r\n            password:\"\",\r\n            repeatedPassword: \"\",\r\n            areDetailsVisible:false,\r\n            errorMessage:''\r\n        };\r\n    }\r\n\r\n    validateEmail = (email) => {\r\n      const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      return regex.test(String(email).toLowerCase());\r\n    } \r\n    \r\n    onClick = () =>{\r\n        if (this.state.password !== this.state.repeatedPassword)\r\n        {\r\n            this.setState({\r\n                errorMessage:'Hasła muszą być identyczne'\r\n            })\r\n            return;\r\n        }\r\n        let typedPassword = this.state.password;\r\n        const passwordRegex = /(?=.*[A-Z])(?=.*[^A-Za-z0-9]).{6,30}/;\r\n        if (!passwordRegex.test(typedPassword))\r\n        {\r\n            this.setState({\r\n                errorMessage:'Twoje hasło powinno zawierać jedną wielką literę, jeden znak specjalny i powinno mieć 6-30 znaków'\r\n            })\r\n            return;\r\n        }\r\n        let typedLogin = this.state.login;\r\n        const loginRegex = /^(?=.{3,30}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$/;\r\n        if (!loginRegex.test(typedLogin))\r\n        {\r\n            this.setState({\r\n                errorMessage:'Twoja nazwa użytkownika powinna mieć 6-30 znaków. Nazwa nie może rozpoczynać się od znaku specjalnego.'\r\n            })\r\n            return;\r\n        }\r\n\r\n       this.setState({\r\n           areDetailsVisible:true\r\n        })\r\n    }\r\n\r\n    onChange = (e) =>{\r\n\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    handleFilterClose = (event,reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n          }\r\n        this.setState({\r\n            errorMessage:''\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {areDetailsVisible, errorMessage } = this.state;\r\n        const {classes } = this.props\r\n       \r\n        if(areDetailsVisible===true)\r\n        {\r\n            return <Redirect to={{\r\n                pathname: '/profile',\r\n                registrationData: { login: this.state.login , password: this.state.password }\r\n            }}/>\r\n        }\r\n        \r\n        return(\r\n          <ContextConsumer>\r\n            {\r\n              language => {\r\n                return (\r\n                  <div className={classes.formPosition}>\r\n                    <Snackbar className={classes.styledSnackbar} open={errorMessage!==''}\r\n                              autoHideDuration={6000} onClose={this.handleFilterClose}>\r\n                        <Alert className={classes.styledAlert} onClose={this.handleFilterClose} severity=\"error\">\r\n                            {errorMessage}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                  <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h3\" style={{color: 'white'}}>\r\n                        Rejestracja\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant='filled'\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label={language.dictionary.Name}\r\n                        autoFocus\r\n                        className={classes.formElements}\r\n                        onChange = {(e) => this.onChange(e)}\r\n                      />\r\n                      <TextField\r\n                        variant='filled'\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"surname\"\r\n                        label={language.dictionary.Surname}\r\n                        autoFocus\r\n                        className={classes.formElements}\r\n                        onChange = {(e) => this.onChange(e)}\r\n                      />\r\n                      <TextField\r\n                        variant='filled'\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        autoFocus\r\n                        className={classes.formElements}\r\n                        onChange = {(e) => this.onChange(e)}\r\n                      />\r\n                        <TextField\r\n                        variant='filled'\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"login\"\r\n                        label={language.dictionary.UserName}\r\n                        autoFocus\r\n                        className={classes.formElements}\r\n                        onChange = {(e) => this.onChange(e)}\r\n                      />\r\n                      <TextField\r\n                        variant='filled'\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label={language.dictionary.Password}\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        className={classes.formElements}\r\n                        onChange = {(e) => this.onChange(e)}\r\n                      />\r\n                        <TextField\r\n                        variant='filled'\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label={language.dictionary.RepeatPassword}\r\n                        type=\"password\"\r\n                        id=\"repeatedPassword\"\r\n                        className={classes.formElements}\r\n                        onChange = {(e) => this.onChange(e)}\r\n                      />\r\n            \r\n                      <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.submit}\r\n                        onClick={(e) => this.onClick()}\r\n                      >\r\n                        {language.dictionary.GoNext}\r\n                      </Button>\r\n                      <Typography component='h5' align='center'>\r\n                        <Link href=\"/login\" variant=\"body2\" style={{color:'lightgray'}}>\r\n                          {language.dictionary.HaveAccount}\r\n                        </Link>\r\n                      </Typography>      \r\n                    </form>                      \r\n                  </div>\r\n                </div>\r\n                )\r\n              }\r\n            }\r\n          </ContextConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Registration);","import React, {Component} from 'react';\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport axios from \"axios\";\r\nimport '../Styles/Forms.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst styles = theme => ( \r\n    {\r\n      paper: {\r\n        marginTop: '8px 0px 0px 0px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        \r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: '1px'\r\n      },\r\n      submit: {\r\n        margin: '1px 0px 2px 0px',\r\n        backgroundColor: 'firebrick'\r\n        \r\n      },\r\n      formPosition: {\r\n        position: 'relative',\r\n        width: '30%',\r\n        height: '40%',\r\n        top:'30%',\r\n        left: '35%',\r\n        backgroundColor:'black',\r\n        padding:'0px 20px 20px 20px'\r\n      }, \r\n      formElements: {\r\n          backgroundColor:'white',\r\n          borderRadius: '5px',\r\n      }\r\n    }\r\n  )\r\n  \r\nclass Login extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            login:\"\",\r\n            password:\"\",\r\n            RememberMe:false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      const logininfo = window.sessionStorage.getItem('rememberme')\r\n\r\n      if(logininfo !== null ) {\r\n        const {login, password} = JSON.parse(logininfo)\r\n\r\n        this.setState({\r\n          login,\r\n          password,\r\n          RememberMe:false\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    onLogin = (data) => {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      axios.defaults.baseURL = \"http://localhost:5000/\";\r\n      axios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"http://localhost:5000/\";\r\n      axios.defaults.headers.get[\"Access-Control-Allow-Origin\"] = \"http://localhost:5000/\";\r\n      axios.post(\"/api/Auth/login\", data, config)\r\n        .then((response) => {\r\n          var token = response.data.token;\r\n          if (token != null) {\r\n            localStorage.setItem('token', token);\r\n            this.setState({\r\n              redirect: true\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n            this.setState({\r\n              redirect:false\r\n            })\r\n            let alertLbl = document.getElementById(\"alert_label\");\r\n            alertLbl.textContent=\"Błędny login lub hasło\";\r\n        });\r\n        }\r\n  \r\n    \r\n    onClick = () => {\r\n        var data={\r\n            Name: this.state.login,\r\n            Password: this.state.password\r\n        } \r\n        this.onLogin(data);\r\n    }\r\n\r\n    onChange = (e) =>{\r\n      let alertLbl = document.getElementById(\"alert_label\");\r\n      if(alertLbl.textContent !== \"\")\r\n          alertLbl.textContent = \"\";\r\n      this.setState({\r\n          [e.target.id] : e.target.value\r\n      })\r\n    }\r\n    RememberMe = () => {\r\n      this.setState((prev) => ({\r\n        RememberMe:!prev.RememberMe\r\n      }))\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        const {redirect} = this.state\r\n\r\n        if (redirect === true)\r\n        {\r\n          window.location.replace(\"/\");\r\n          return;\r\n        }\r\n\r\n        return(\r\n          <ContextConsumer>\r\n            {\r\n              language => {\r\n                return (\r\n                  <div className={classes.formPosition}>\r\n                  <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h3\" style={{color: 'white'}}>\r\n                    {language.dictionary.Login}\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                      <TextField\r\n                        variant='filled'\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        id=\"login\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        className={classes.formElements}\r\n                        onChange={(e) => this.onChange(e)}\r\n                      />\r\n                      <TextField\r\n                        variant='filled'\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label={language.dictionary.Password}\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        className={classes.formElements}\r\n                        onChange={(e) => this.onChange(e) }\r\n                      />\r\n                      <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" onClick={() => this.RememberMe()} style={{color: 'white',margin: '0px 0px -5px 0px'}}  />}\r\n                        label={<Typography  style={{marginTop:'6px'}} >{language.dictionary.RememberMe}</Typography>}\r\n                        style={{color:'white' }}\r\n                      />\r\n                      <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.submit}\r\n                        onClick={() => this.onClick()}\r\n                      >\r\n                        {language.dictionary.SignIn}\r\n                      </Button>\r\n                      <Grid container>\r\n                        <Grid item xs>\r\n                          <Link href=\"/forgotpassword\" variant=\"body2\" style={{color:'lightgray'}}>\r\n                          {language.dictionary.ForgotYourPassword}\r\n                          </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <Link href=\"/registration\" variant=\"body2\" style={{color:'lightgray'}}>\r\n                          {language.dictionary.DontHaveAnAccount}\r\n                          </Link>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </form>\r\n                    <label id=\"alert_label\" className=\"Forms-alert-label\"></label>\r\n                  </div>\r\n                </div>\r\n                )\r\n              }\r\n            }\r\n          </ContextConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Login);","import React, {Component} from 'react';\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport '../Styles/Forms.css';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: 'black'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(1,0,2),\r\n        backgrounColor: 'firebrick'\r\n    },\r\n    formPosition: {\r\n        position: 'relative',\r\n        width: '30%',\r\n        height: '40%',\r\n        top: '30%',\r\n        left: '35%',\r\n        backgroundColor: 'black',\r\n        padding: '0px 20px 20px 20px'\r\n    },\r\n    formElements: {\r\n        backgroundColor: 'white',\r\n        borderRadius: '5px'\r\n    }\r\n\r\n});\r\n\r\nclass PasswordRecovery extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            email: \"\"\r\n        }\r\n    }\r\n\r\n    /*componentDidMount = () => {\r\n\r\n    }*/\r\n\r\n    onSubmit = () => {\r\n        const {email} = this.state; //\r\n        console.log(email);\r\n        let alertLbl = document.getElementById(\"alert_label\");\r\n        // eslint-disable-next-line no-useless-escape\r\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!emailRegex.test(String(email).toLowerCase()))\r\n            alertLbl.textContent = \"Adres e-mail musi składać się ze znaku małpy poprzedzonego ciągiem liter i znaków, po którym występuje nazwa domeny zawierająca w środku kropkę.\"\r\n        else {\r\n            this.sendMail(email);\r\n        }\r\n\r\n    }\r\n\r\n     async sendMail(email) {\r\n        const result = await this.props.onClick(email);\r\n        if (result === true) {\r\n            alert(\"Wysłano wiadomość potrzebną do odzyskania hasła.\")\r\n            this.setState({\r\n                redirect: true\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    onChange = (e) => {\r\n        let alertLbl = document.getElementById(\"alert_label\");\r\n        if (alertLbl.textContent!==\"\")\r\n            alertLbl.textContent=\"\";\r\n        this.setState({\r\n            email : e.target.value\r\n        });\r\n\r\n    }\r\n    \r\n\r\n    render(){\r\n        const {redirect} = this.state;\r\n        const {classes} = this.props;\r\n    \r\n\r\n    if (redirect === true) //lub do strony z inf. o wysł. maila\r\n        return <Redirect to=\"/login\"/>\r\n    else\r\n        return(\r\n            <ContextConsumer>\r\n                {\r\n                    language => {\r\n                        return (\r\n                            <div className={classes.formPosition}>\r\n                                <div className={classes.paper}>\r\n                                    <Typography component=\"h1\" variant=\"h3\" style={{color: 'white'}}>\r\n                                        {language.dictionary.PasswordRecovery}\r\n                                    </Typography>\r\n                                    <form className={classes.form}>\r\n                                        <TextField\r\n                                        variant='filled'\r\n                                        margin='normal'\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"email\"\r\n                                        label=\"Email\"\r\n                                        autoFocus\r\n                                        className={classes.formElements}\r\n                                        onChange={(e)=>this.onChange(e)}\r\n                                        />\r\n                                        <Button\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.submit}\r\n                                        onClick={()=>this.onSubmit()}>\r\n                                            {language.dictionary.Send}\r\n                                        </Button>\r\n                                    </form>\r\n                                    <label id=\"alert_label\" className=\"Forms-alert-label\"></label>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </ContextConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles,{withTheme:true})(PasswordRecovery);","import React, {Component} from 'react';\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport { Redirect } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport '../Styles/Forms.css';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      backgroundColor:'black'\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(1, 0, 2),\r\n      backgroundColor: 'firebrick'\r\n      \r\n    },\r\n    formPosition: {\r\n      position: 'relative',\r\n      width: '30%',\r\n      height: '40%',\r\n      top:'30%',\r\n      left: '35%',\r\n      backgroundColor:'black',\r\n      padding:'0px 20px 20px 20px'\r\n    }, \r\n    formElements: {\r\n        backgroundColor:'white',\r\n        borderRadius: '5px',\r\n    }\r\n});\r\n\r\nclass PasswordChange extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            logged: false,\r\n            redirect:false,\r\n            userId:-1,\r\n            oldPassword:\"\",\r\n            newPassword:\"\",\r\n            repeatedPassword:\"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        var token = localStorage.getItem('token');\r\n        var logged = false;\r\n        if(token != null)\r\n        {\r\n            logged = true;\r\n            this.setState({\r\n                userId: parseInt(jwt_decode(token).id)\r\n            })\r\n        }\r\n            \r\n        this.setState({\r\n            logged: logged\r\n        })\r\n    }\r\n\r\n    onClick = () =>{\r\n        let alertLbl = document.getElementById(\"alert_label\");\r\n        if (this.state.newPassword !== this.state.repeatedPassword){\r\n            alertLbl.textContent = \"Hasła nie są takie same\";\r\n            return;\r\n        }\r\n        const passwordRegex = /(?=.*[A-Z])(?=.*[^A-Za-z0-9]).{6,30}/;\r\n        if(!passwordRegex.test(this.state.oldPassword)){\r\n            alertLbl.textContent = \"Stare hasło się nie zgadza\";\r\n            return;\r\n        }\r\n        if (!passwordRegex.test(this.state.newPassword)){\r\n            alertLbl.textContent = \"Hasło musi zawierać co najmniej jedną dużą literę, jeden znak specjalny oraz mieć od 6 do 30 znaków\"\r\n        } \r\n        else{\r\n            var data={\r\n                UserId: this.state.userId,\r\n                OldPassword: this.state.oldPassword,\r\n                NewPassword: this.state.newPassword\r\n            }\r\n            this.changePasswordStatus(data);\r\n        }\r\n    }\r\n\r\n    async changePasswordStatus(data) {\r\n        const result = await this.props.onClick(data);\r\n        if(result === true){\r\n            alert(\"hasło zostało zmienione\");\r\n            this.setState({\r\n                redirect: true\r\n            })\r\n        }\r\n        else{\r\n            // miejsce na komunikat\r\n            let alertLbl = document.getElementById(\"alert_label\");\r\n            alertLbl.textContent = \"Stare hasło się nie zgadza\";\r\n        }\r\n    }\r\n\r\n    onChange = (e) =>{\r\n        let alertLbl = document.getElementById(\"alert_label\");\r\n        if(alertLbl.textContent !== \"\")\r\n            alertLbl.textContent = \"\";\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { redirect } = this.state;\r\n        const {classes} = this.props\r\n\r\n        if (redirect === true)\r\n            return <Redirect to=\"/\"/>\r\n        if(this.state.logged)\r\n        return(\r\n            <ContextConsumer>\r\n                {\r\n                    language => {\r\n                        return (\r\n                            <div className={classes.formPosition}>\r\n                                <div className={classes.paper}>\r\n                                <form className={classes.form} noValidate>\r\n                                    <TextField\r\n                                        variant='filled'\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"oldPassword\"\r\n                                        label={language.dictionary.OldPassword}\r\n                                        type=\"password\"\r\n                                        autoFocus\r\n                                        className={classes.formElements}\r\n                                        onChange = {(e) => this.onChange(e)}\r\n                                    />\r\n                                    <TextField\r\n                                        variant='filled'\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"newPassword\"\r\n                                        label={language.dictionary.NewPassword}\r\n                                        type=\"password\"\r\n                                        autoFocus\r\n                                        className={classes.formElements}\r\n                                        onChange = {(e) => this.onChange(e)}\r\n                                    />\r\n                                    <TextField\r\n                                        variant='filled'\r\n                                        margin=\"normal\"\r\n                                        required\r\n                                        fullWidth\r\n                                        id=\"repeatedPassword\"\r\n                                        label={language.dictionary.RepeatNewPassword}\r\n                                        type=\"password\"\r\n                                        autoFocus\r\n                                        className={classes.formElements}\r\n                                        onChange = {(e) => this.onChange(e)}\r\n                                    />\r\n                                    <Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.submit}\r\n                                    onClick={(e) => this.onClick()}\r\n                                    >\r\n                                    Zmień Hasło\r\n                                    </Button>\r\n                                </form>\r\n                                <label id=\"alert_label\" className=\"Forms-alert-label\"></label>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </ContextConsumer>\r\n        );\r\n        else return(\r\n            <ContextConsumer>\r\n                {\r\n                    language => {\r\n                        return (\r\n                            <div className=\"Forms-div\">\r\n                                <h1>{language.dictionary.OnlyRegistered}</h1>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </ContextConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles,{withTheme:true})(PasswordChange);","import React, {Component} from 'react';\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport { Redirect } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport '../Styles/Forms.css';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      backgroundColor:'black'\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(1, 0, 2),\r\n      backgroundColor: 'firebrick'\r\n      \r\n    },\r\n    formPosition: {\r\n      position: 'relative',\r\n      width: '30%',\r\n      height: '40%',\r\n      top:'30%',\r\n      left: '35%',\r\n      backgroundColor:'black',\r\n      padding:'0px 20px 20px 20px'\r\n    }, \r\n    formElements: {\r\n        backgroundColor:'white',\r\n        borderRadius: '5px',\r\n    }\r\n});\r\n\r\nclass PasswordReset extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            logged: false,\r\n            redirect:false,\r\n            userId:-1,\r\n            newPassword:\"\",\r\n            repeatedPassword:\"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        var token = localStorage.getItem('token');\r\n        var logged = false;\r\n        if(token != null)\r\n        {\r\n            logged = true;\r\n            this.setState({\r\n                userId: parseInt(jwt_decode(token).id)\r\n            })\r\n        }\r\n            \r\n        this.setState({\r\n            logged: logged\r\n        })\r\n    }\r\n\r\n    onClick = () =>{\r\n        let alertLbl = document.getElementById(\"alert_label\");\r\n        if (this.state.newPassword !== this.state.repeatedPassword){\r\n            alertLbl.textContent = \"Hasła nie są takie same\";\r\n            return;\r\n        }\r\n        const passwordRegex = /(?=.*[A-Z])(?=.*[^A-Za-z0-9]).{6,30}/;\r\n        if (!passwordRegex.test(this.state.newPassword)){\r\n            alertLbl.textContent = \"Hasło musi zawierać co najmniej jedną dużą literę, jeden znak specjalny oraz mieć od 6 do 30 znaków\"\r\n        } \r\n        else{\r\n            var data={\r\n                UserId: this.state.userId,\r\n                NewPassword: this.state.newPassword\r\n            }\r\n            this.resetPasswordStatus(data);\r\n        }\r\n    }\r\n\r\n    async resetPasswordStatus(data) {\r\n        const result = await this.props.onClick(data);\r\n        if(result === true){\r\n            alert(\"hasło zostało zmienione\");\r\n            this.setState({\r\n                redirect: true\r\n            })\r\n        }\r\n    }\r\n\r\n    onChange = (e) =>{\r\n        let alertLbl = document.getElementById(\"alert_label\");\r\n        if(alertLbl.textContent !== \"\")\r\n            alertLbl.textContent = \"\";\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { redirect } = this.state;\r\n        const {classes} = this.props\r\n\r\n        if (redirect === true)\r\n            return <Redirect to=\"/\"/>\r\n        if(this.state.logged)\r\n        return(\r\n            <ContextConsumer>\r\n                {\r\n                    language => {\r\n                        return (\r\n                            <div className={classes.formPosition}>\r\n                                <div className={classes.paper}>\r\n                                    <form className={classes.form} noValidate>\r\n                                        <TextField\r\n                                            variant='filled'\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"newPassword\"\r\n                                            label={language.dictionary.NewPassword}\r\n                                            type=\"password\"\r\n                                            autoFocus\r\n                                            className={classes.formElements}\r\n                                            onChange = {(e) => this.onChange(e)}\r\n                                        />\r\n                                        <TextField\r\n                                            variant='filled'\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"repeatedPassword\"\r\n                                            label={language.dictionary.RepeatNewPassword}\r\n                                            type=\"password\"\r\n                                            autoFocus\r\n                                            className={classes.formElements}\r\n                                            onChange = {(e) => this.onChange(e)}\r\n                                        />\r\n                                        <Button\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.submit}\r\n                                        onClick={(e) => this.onClick()}\r\n                                        >\r\n                                        {language.dictionary.ResetPassword}\r\n                                        </Button>\r\n                                    </form>\r\n                                    <label id=\"alert_label\" className=\"Forms-alert-label\"></label>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </ContextConsumer>\r\n        );\r\n        else return(\r\n            <ContextConsumer>\r\n                {\r\n                    language => {\r\n                        return (\r\n                            <div className=\"Forms-div\">\r\n                                <h1>{language.dictionary.OnlyRegistered}</h1>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </ContextConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles,{withTheme:true})(PasswordReset);","import styled from 'styled-components'\r\nimport {Radio, Slider, Checkbox } from '@material-ui/core'\r\nimport { Pagination } from '@material-ui/lab';\r\nimport {grey, red} from '@material-ui/core/colors'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport PaginationItem from '@material-ui/lab/PaginationItem';\r\n\r\nexport const WhiteRadio = styled(Radio)`\r\n  color: ${grey[50]};\r\n  &.Mui-checked {\r\n    color: ${red[800]};\r\n  }\r\n`;\r\n\r\nexport const CustomSlider = withStyles({\r\n    root: {\r\n        color: \"firebrick\",\r\n        height: 3,\r\n        padding: \"13px 0\",\r\n    },\r\n    track: {\r\n        height: 4,\r\n        borderRadius: 22,\r\n    },\r\n    rail: {\r\n        color:'white'\r\n    },\r\n    markLabel: {\r\n        color:'white'\r\n    },\r\n    thumb: {\r\n        height: 20,\r\n        width: 20,\r\n        backgroundColor: \"firebrick\",\r\n        border: \"1px solid firebrick\",\r\n        marginTop: -9,\r\n        marginLeft: -11,\r\n        color: \"#fff\",\r\n    },\r\n})(Slider);\r\n\r\nexport const CustomCheckbox = withStyles({\r\n    root: {\r\n      color: '#f50057',\r\n      '&$checked': {\r\n        color: 'firebrick',\r\n      }\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport const StyledPagination = withStyles({\r\n    root:\r\n    {\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    },\r\n    ul:\r\n    {\r\n        textAlign: 'center',\r\n        backgroundColor: 'black'\r\n    }\r\n})(Pagination);\r\n\r\nexport const StyledPaginationItem = withStyles({\r\n    root:\r\n    {\r\n        color: 'white'\r\n    },\r\n    page:\r\n    {\r\n        '&.Mui-selected': {\r\n            backgroundColor: 'firebrick',\r\n            '&:hover': {\r\n                backgroundColor: 'gray'\r\n            }\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'gray'\r\n        }\r\n    }\r\n})(PaginationItem);\r\n","import React, {Component} from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport '../Styles/Forms.css';\r\nimport '../Styles/PersonalData.css';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Text from '../languages/Text'\r\n\r\nimport {\r\n    Grid,\r\n    FormLabel,\r\n    RadioGroup,\r\n    Typography\r\n    } from '@material-ui/core';\r\nimport {WhiteRadio,CustomSlider} from '../Components/StyledComponents'\r\nimport jwt_decode from 'jwt-decode';\r\nimport axios from 'axios';\r\naxios.defaults.baseURL = 'http://localhost:5000/';\r\naxios.defaults.headers.get[\"Access-Control-Allow-Origin\"] = \"https://localhost:5001/\";\r\n\r\n    const styles = theme => ( \r\n    {\r\n      paper: {\r\n        marginTop: '8px 0px 0px 0px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        \r\n      }, \r\n      formControl: {\r\n        margin: '10px 0px  10px 0px',\r\n        minWidth: '20%',\r\n        position:'absolute',\r\n        left:'30%',\r\n        backgroundColor:'transparent'\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: '1px'\r\n      },\r\n      submit: {\r\n        margin: '10px 0px 2px 0px',\r\n        backgroundColor: 'firebrick'\r\n        \r\n      },\r\n      formPosition: {\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        width: '33%',\r\n        backgroundColor:'black',\r\n        padding:'0px 20px 20px 20px'\r\n      }, \r\n      formElements: {\r\n          backgroundColor:'white',\r\n          borderRadius: '5px',\r\n          minWidth:'20%',\r\n          display:'flex',\r\n          \r\n      },\r\n      radio: {\r\n        '&$checked': {\r\n          color: 'white'\r\n        }\r\n      },\r\n      checked: {\r\n          borderColor:'white'\r\n          //backgroundColor:'white'\r\n      },\r\n      styledAlert: {\r\n        '&.MuiAlert-filledError': {\r\n          backgroundColor: 'firebrick'\r\n        }\r\n      },\r\n      styledSnackbar: {\r\n        '&.MuiSnackbar-root': {\r\n          maxWidth: '30%'\r\n        }\r\n      }\r\n    })\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" backgroundColor='firebrick' {...props}/>;\r\n    }\r\n\r\nclass PersonalData extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userId: null,\r\n            status: false,\r\n            errorMessage:'',\r\n            details:\r\n            {   \r\n                Gender: \"\",\r\n                Weight: NaN,\r\n                Height: NaN,\r\n                SportClass: 33,\r\n                Experience: NaN,\r\n                Age: NaN,\r\n                Diet: \"\",\r\n                Sleep: 50,\r\n                Stress: 50,\r\n                Ssa: false,\r\n                BenchPress: NaN,\r\n                Squat: NaN,\r\n                Deadlift: NaN,\r\n                StartVolume: 50\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log(this.props.userId)\r\n        const token = localStorage.getItem('token');\r\n        \r\n        if (token!==null) {\r\n\r\n            const config = {\r\n                headers: {\r\n                  \"Content-type\": \"application/json\",\r\n                  Accept: \"application/json\",\r\n                },\r\n              };\r\n\r\n            let id;\r\n            if (this.props.location===undefined) {\r\n            id = parseInt(jwt_decode(token).id);\r\n            console.log(id+\"ID pobrane\")\r\n            this.setState({ //temp\r\n                ...this.state,\r\n                userId: id\r\n            })\r\n            }\r\n            else {\r\n            id = this.props.location.state.AthleteId\r\n            console.log(id+\"ID pobrane\")\r\n            this.setState({ //temp\r\n                ...this.state,\r\n                userId: id,\r\n                readOnly: true\r\n            })\r\n            }\r\n            \r\n            \r\n            axios.get(`api/auth/gettrainingdata/${id}`, config)\r\n            .then(response=>{\r\n                \r\n                console.log(response.data.data)\r\n\r\n                let newDetails = this.state.details;\r\n\r\n                newDetails = {\r\n                    Gender: response.data.data.gender.trim(), //trimy są tymczasowo; wyszukiwanie po tablicach z nazwami pewnie też -> w bazie można trzymać wartości\r\n                    Weight: response.data.data.weight,\r\n                    Height: response.data.data.height,\r\n                    SportClass: response.data.data.sportClass.trim(), //sportClassValue.find(e=>e.label===response.data.data.sportClass.trim()).value,\r\n                    Experience: response.data.data.experience,\r\n                    Age: response.data.data.age,\r\n                    Diet: response.data.data.diet.trim(),\r\n                    Sleep: response.data.data.sleep,\r\n                    Stress: response.data.data.stress.trim(),//stressValue.find(e=>e.label===response.data.data.stress.trim()).value,\r\n                    Ssa: response.data.data.ssa,\r\n                    BenchPress: response.data.data.benchPress,\r\n                    Squat: response.data.data.squat,\r\n                    Deadlift: response.data.data.deadlift,\r\n                    StartVolume: response.data.data.startVolume.trim()//startVolumeValue.find(e=>e.label===response.data.data.startVolume.trim()).value\r\n                };\r\n\r\n                this.setState({\r\n                ...this.state,//\r\n                userId: id,\r\n                details: newDetails\r\n                })\r\n\r\n                \r\n            })\r\n            .catch((error)=>console.log(error))\r\n        }\r\n    }\r\n\r\n    onClick = () =>{\r\n        const details = this.state.details;\r\n\r\n        //#region wiek\r\n        if( isNaN(details.Age) ){\r\n            this.setState({\r\n                errorMessage:'uzupełnij wiek'\r\n            })\r\n            return;\r\n        }\r\n        if (details.Age <= 0 ){\r\n            this.setState({\r\n                errorMessage:'wiek musi być większy niż zero'\r\n            })\r\n            return;\r\n        }\r\n        //#endregion wiek\r\n\r\n        //#region doświadczenie\r\n        if( isNaN(details.Experience) ){\r\n            this.setState({\r\n                errorMessage:'uzupełnij doświadczenie'\r\n            })\r\n            return;\r\n        }\r\n        if( details.Experience <= 0 ){\r\n            this.setState({\r\n                errorMessage:'doświadczenie nie może być ujemne'\r\n            })\r\n            return;\r\n        }\r\n        //#endregion doświadczenie\r\n\r\n        //#region waga\r\n        if( isNaN(details.Weight) ){\r\n            this.setState({\r\n                errorMessage:'uzupełnij wagę'\r\n            })\r\n            return;\r\n        }\r\n        if( details.Weight <= 0 ){\r\n            this.setState({\r\n                errorMessage:'waga musi być większa niż zero'\r\n            })\r\n            return;\r\n        }\r\n        //#endregion waga\r\n        \r\n        //#region wzrost\r\n        if( isNaN(details.Height) ){\r\n            this.setState({\r\n                errorMessage:'uzupełnij wzrost'\r\n            })\r\n            return;\r\n        }\r\n        if(details.Height <= 0){\r\n            this.setState({\r\n                errorMessage:'wzrost musi być większy niż zero'\r\n            })\r\n            return;\r\n        }\r\n        //#endregion wzrost\r\n\r\n        //#region przysiad\r\n        if( isNaN(details.Squat) ){\r\n            this.setState({\r\n                errorMessage:'uzupełnij przysiad'\r\n            })\r\n            return;\r\n        }\r\n        if(details.Squat <= 0){\r\n            this.setState({\r\n                errorMessage:'przysiad musi być większy niż zero'\r\n            })\r\n            return;\r\n        }\r\n        //#endregion przysiad\r\n\r\n        //#region wyciskanie\r\n        if( isNaN(details.BenchPress) ){\r\n            this.setState({\r\n                errorMessage:'uzupełnij wyciskanie'\r\n            })\r\n            return;\r\n        }\r\n        if(details.BenchPress <= 0){\r\n            this.setState({\r\n                errorMessage:'wyciskanie musi być większe niż zero'\r\n            })\r\n            return;\r\n        }\r\n        //#endregion wyciskanie\r\n\r\n        //#region martwy ciąg\r\n        if( isNaN(details.Deadlift) ){\r\n            this.setState({\r\n                errorMessage:'uzupełnij martwy ciąg'\r\n            })\r\n            return;\r\n        }\r\n        if(details.Deadlift <= 0){\r\n            this.setState({\r\n                errorMessage:'martwy ciąg musi być większy niż zero'\r\n            })\r\n            return;\r\n        }\r\n        //#endregion martwy ciąg\r\n        \r\n        //#region płeć\r\n        if(details.Gender.length === 0){\r\n            this.setState({\r\n                errorMessage:'musisz wybrać płeć'\r\n            })\r\n            return;\r\n        }\r\n        //#endregion płeć\r\n\r\n        //#region SSA\r\n        if(details.Ssa.length === 0){\r\n            this.setState({\r\n                errorMessage:'musisz wybrać SSA'\r\n            })\r\n            return;\r\n        }\r\n        //#endregion SSA\r\n        \r\n        //#region odżywianie\r\n        if(details.Diet.length === 0){\r\n            this.setState({\r\n                errorMessage:'musisz wybrać odżywianie'\r\n            })\r\n            return;\r\n        }\r\n        //#endregion odżywianie\r\n        \r\n        let detailsToSend = this.state.details;\r\n        detailsToSend.Ssa = JSON.parse(detailsToSend.Ssa);\r\n\r\n        //console.log(this.props.location.registrationData); -> prawd. nie ma takiego propsa póki co\r\n        console.log('details',detailsToSend);\r\n        \r\n        const {userId} = this.state;//.userId;\r\n\r\n        if(userId===null)\r\n            this.registerUser(this.props.location.registrationData,detailsToSend); /////////////////////Wysyłanie////////////////\r\n        else\r\n            this.editPersonalData(userId, detailsToSend);\r\n    }\r\n\r\n    async registerUser(registrationData,details){\r\n        await this.props.confirmForm(registrationData,details);\r\n\r\n        this.setState({\r\n            status: true\r\n        })\r\n    }\r\n\r\n    /*async onPersonalDataChange(userId, details) { //=> Settings => PersonalData\r\n        var body = {\r\n            UserId: userId,\r\n            TrainingData: details//{...details}\r\n        };\r\n        console.log(\"Wysyłam: \"+body)\r\n\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        };\r\n    \r\n        axios.put('api/Auth/editTrainingData', body, config)\r\n        .then(response=>console.log(response))\r\n        .catch(error=>console.log(error))\r\n    \r\n    \r\n      }*/\r\n\r\n    async editPersonalData(userId, details) {\r\n        console.log(userId)\r\n        await this.props.editPersonalData(userId, details); //this.onPersonalDataChange(userId, details)\r\n\r\n        alert(\"Zmieniono dane w bazie.\");//Snackbar itp.\r\n    }\r\n\r\n    handleChangeInput = (e) => {\r\n        const name = e.target.name\r\n        this.setState((prev) =>{\r\n            const prevDetails = prev.details\r\n            prevDetails[name] = parseInt(e.target.value)\r\n            return {\r\n                ...this.state,\r\n                details : prevDetails\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangeRadio = (e) => {\r\n        const name = e.target.name\r\n        console.log(name)\r\n        this.setState((prev) =>{\r\n            const prevDetails = prev.details\r\n            if (name===\"Ssa\")//\r\n                prevDetails[name] = !prevDetails[name]//e.target.value\r\n            else\r\n            prevDetails[name] = e.target.value\r\n            return {\r\n                ...this.state,\r\n                details : prevDetails\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangeSlider = (e,value,name) =>{\r\n        this.setState((prev) =>{\r\n            const prevDetails = prev.details\r\n            prevDetails[name] = value\r\n            return {\r\n                ...this.state,\r\n                details : prevDetails\r\n            }\r\n        })\r\n    }\r\n\r\n    // valueLabelFormat(value) {\r\n    //     return stressValue.findIndex((stressValue) => stressValue.value === value) + 1;\r\n    // }\r\n    \r\n    handleFilterClose = (event,reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n          }\r\n        this.setState({\r\n            errorMessage:''\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {classes} = this.props\r\n        const {errorMessage, status} = this.state;\r\n        if (status === true)\r\n            return <Redirect to=\"/login\"/>\r\n\r\n        const {userId} = this.state;\r\n        console.log(this.state.details)\r\n        return(\r\n            <ContextConsumer>\r\n            {\r\n                language => {\r\n                    const stressValue = [\r\n                        {\r\n                           value: 0,\r\n                           label: language.dictionary.Low \r\n                        },\r\n                        {\r\n                            value:50,\r\n                            label: language.dictionary.Medium \r\n                         },\r\n                         {\r\n                            value:100,\r\n                            label: language.dictionary.High \r\n                         },\r\n                    ];\r\n                    const sleepValue = [\r\n                    {\r\n                        value: 0,\r\n                        label:'< 5h' \r\n                    },\r\n                    {\r\n                        value:50,\r\n                        label:'5-7h '\r\n                        },\r\n                        {\r\n                        value:100,\r\n                        label:'>7h' \r\n                        },\r\n                    ];\r\n                    const sportClassValue = [\r\n                        {\r\n                            value:0,\r\n                            label:'III'\r\n                        },\r\n                        {\r\n                            value:33,\r\n                            label:'II'\r\n                        },\r\n                        {\r\n                            value:66,\r\n                            label:'I'\r\n                        },\r\n                        {\r\n                            value:99,\r\n                            label:'M'\r\n                        }\r\n                    ];\r\n                    const startVolumeValue = [\r\n                        {\r\n                            value:0,\r\n                            label: language.dictionary.Low\r\n                        },\r\n                        {\r\n                            value:50,\r\n                            label:language.dictionary.Medium\r\n                        },\r\n                        {\r\n                            value:100,\r\n                            label: language.dictionary.High\r\n                        }\r\n                    ]\r\n                    return(\r\n                        <div className={classes.formPosition} style={{top:`${userId === null ?'10%':'20%'}`}} >\r\n                            <Snackbar className={classes.styledSnackbar} open={errorMessage!==''}\r\n                                      autoHideDuration={3000} onClose={this.handleFilterClose}>\r\n                                <Alert className={classes.styledAlert} onClose={this.handleFilterClose} severity=\"error\">\r\n                                    {errorMessage}\r\n                                </Alert>\r\n                            </Snackbar>\r\n                            <div className={classes.paper}> \r\n                            {\r\n                                userId === null?\r\n                                <Typography component=\"h1\" variant=\"h4\" style={{color: 'white',marginBottom:'25px'}}>\r\n                                    {language.dictionary.FillInFormBelow}\r\n                                </Typography>:\r\n                                null\r\n                            }\r\n            \r\n                            <form className={classes.form} noValidate>\r\n                                <Grid container spacing={1}  justify='space-between' alignItems='center'>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            type=\"number\"\r\n                                            variant='filled'\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            label={language.dictionary.Age}\r\n                                            name=\"Age\"\r\n                                            id=\"Age\"\r\n                                            autoFocus\r\n                                            color='white'\r\n                                            className={classes.formElements}\r\n                                            value={this.state.details.Age}\r\n                                            onChange={(e) => this.handleChangeInput(e)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            type=\"number\"\r\n                                            variant='filled'\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            label={language.dictionary.Experience_years}\r\n                                            name=\"Experience\"\r\n                                            id=\"Experience\"\r\n                                            autoFocus\r\n                                            color='white'\r\n                                            className={classes.formElements}\r\n                                            value={this.state.details.Experience}\r\n                                            onChange={(e) => this.handleChangeInput(e)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            type=\"number\"\r\n                                            variant='filled'\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            label={language.dictionary.Weight + \" (kg)\"}\r\n                                            name=\"Weight\"\r\n                                            id=\"Weight\"\r\n                                            autoFocus\r\n                                            color='white'\r\n                                            className={classes.formElements}\r\n                                            value={this.state.details.Weight}\r\n                                            onChange={(e) => this.handleChangeInput(e)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            type=\"number\"\r\n                                            variant='filled'\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            label={language.dictionary.Height + \" (cm)\"}\r\n                                            name=\"Height\"\r\n                                            id=\"Height\"\r\n                                            autoFocus\r\n                                            color='white'\r\n                                            className={classes.formElements}\r\n                                            value={this.state.details.Height}\r\n                                            onChange={(e) => this.handleChangeInput(e)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <TextField\r\n                                            type=\"number\"\r\n                                            variant='filled'\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            label={language.dictionary.Squat + \" (kg)\"}\r\n                                            name=\"Squat\"\r\n                                            id=\"Squat\"\r\n                                            autoFocus\r\n                                            color='white'\r\n                                            className={classes.formElements}\r\n                                            value={this.state.details.Squat}\r\n                                            onChange={(e) => this.handleChangeInput(e)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <TextField\r\n                                            type=\"number\"\r\n                                            variant='filled'\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            label={language.dictionary.BenchPress + \" (kg)\"}\r\n                                            name=\"BenchPress\"\r\n                                            id=\"BenchPress\"\r\n                                            autoFocus\r\n                                            color='white'\r\n                                            className={classes.formElements}\r\n                                            value={this.state.details.BenchPress}\r\n                                            onChange={(e) => this.handleChangeInput(e)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                        <TextField\r\n                                            type=\"number\"\r\n                                            variant='filled'\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            label={language.dictionary.Deadlift + \" (kg)\"}\r\n                                            name=\"Deadlift\"\r\n                                            id=\"Deadlift\"\r\n                                            autoFocus\r\n                                            color='white'\r\n                                            className={classes.formElements}\r\n                                            value={this.state.details.Deadlift}\r\n                                            onChange={(e) => this.handleChangeInput(e)}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={5}>\r\n                                        <Typography id=\"discrete-slider-restrict\" gutterBottom style={{color:'white'}}>\r\n                                            {language.dictionary.StressLevel}\r\n                                        </Typography>\r\n                                        <CustomSlider\r\n                                            aria-labelledby=\"discrete-slider-restrict\"\r\n                                            step={null}\r\n                                            marks={stressValue}\r\n                                            value={this.state.details.Stress}\r\n                                            onChangeCommitted={(e,val) => this.handleChangeSlider(e,val,\"Stress\")}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={5}>\r\n                                        <Typography id=\"discrete-slider-restrict\" gutterBottom style={{color:'white'}}>\r\n                                            {language.dictionary.Sleep}\r\n                                        </Typography>\r\n                                        <CustomSlider\r\n                                            aria-labelledby=\"discrete-slider-restrict\"\r\n                                            step={null}\r\n                                            marks={sleepValue}\r\n                                            value={this.state.details.Sleep}\r\n                                            onChangeCommitted={(e,val) => this.handleChangeSlider(e,val,\"Sleep\")}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={5}>\r\n                                        <Typography id=\"discrete-slider-restrict\" gutterBottom style={{color:'white'}}>\r\n                                            {language.dictionary.StartingVolume}\r\n                                        </Typography>\r\n                                        <CustomSlider\r\n                                            aria-labelledby=\"discrete-slider-restrict\"\r\n                                            step={null}\r\n                                            marks={startVolumeValue}\r\n                                            value={this.state.details.StartVolume}\r\n                                            onChangeCommitted={(e,val) => this.handleChangeSlider(e,val,\"StartVolume\")}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={5}>\r\n                                        <Typography id=\"discrete-slider-restrict\" gutterBottom style={{color:'white'}}>\r\n                                            {language.dictionary.SportClass}\r\n                                        </Typography>\r\n                                        <CustomSlider\r\n                                            aria-labelledby=\"discrete-slider-restrict\"\r\n                                            step={null}\r\n                                            marks={sportClassValue}\r\n                                            value={this.state.details.SportClass}\r\n                                            onChangeCommitted={(e,val) => this.handleChangeSlider(e,val,\"SportClass\")}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{textAlign:'center'}}>\r\n                                        <FormControl>\r\n                                            <FormLabel component=\"legend\" style={{color:'white'}}>{language.dictionary.Gender}</FormLabel>\r\n                                            <RadioGroup aria-label=\"Gender\" name=\"Gender\" column value={this.state.details.Gender}  onChange={(e) => this.handleChangeRadio(e)} >\r\n                                                <FormControlLabel value=\"K\" control={<WhiteRadio/>} label={language.dictionary.Woman} style={{color:'white'}} />\r\n                                                <FormControlLabel value=\"M\" control={<WhiteRadio/>} label={language.dictionary.Man}   style={{color:'white'}} />\r\n                                            </RadioGroup>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} style={{textAlign:'center'}}>\r\n                                        <FormControl>\r\n                                            <FormLabel component=\"legend\" style={{color:'white'}}>SSA</FormLabel>\r\n                                            <RadioGroup aria-label=\"SSA\" name=\"Ssa\" column value={this.state.details.Ssa}  onChange={(e) => this.handleChangeRadio(e)} >\r\n                                                <FormControlLabel value={true}  control={<WhiteRadio/>} label={language.dictionary.Yes} style={{color:'white'}} />\r\n                                                <FormControlLabel value={false} control={<WhiteRadio/>} label={language.dictionary.No}  style={{color:'white'}} />\r\n                                            </RadioGroup>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} style={{textAlign:'center'}}>\r\n                                        <FormControl>\r\n                                            <FormLabel component=\"legend\" style={{color:'white', textAlign:'center'}}>{language.dictionary.Nutrition}</FormLabel>\r\n                                            <RadioGroup aria-label=\"Diet\" name=\"Diet\" row value={this.state.details.Diet} onChange={(e) => this.handleChangeRadio(e)} >\r\n                                                <FormControlLabel value=\"Niedostateczne\" control={<WhiteRadio/>} label={language.dictionary.Insufficient} style={{color:'white'}} />\r\n                                                <FormControlLabel value=\"Podstawowe\" control={<WhiteRadio/>} label={language.dictionary.Basic} style={{color:'white'}} />\r\n                                                <FormControlLabel value=\"Pełne\" control={<WhiteRadio/>} label={language.dictionary.Full}  style={{color:'white'}} />\r\n                                            </RadioGroup>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.submit}\r\n                                    onClick={this.onClick}\r\n                                >\r\n                                    {\r\n                                        userId === null? language.dictionary.Register: language.dictionary.Edit\r\n                                    }\r\n                                </Button>\r\n                            </form>\r\n                        </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n            </ContextConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles,{withTheme:true}) (PersonalData);","export default __webpack_public_path__ + \"static/media/mainPage.61d11ec6.jpg\";","import React, {Component} from 'react';\r\nimport jwt_decode from 'jwt-decode';\r\nimport axios from 'axios';\r\nimport './Styles/Home.css';\r\nimport mainImage from './Assets/mainPage.jpg'\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/';\r\n\r\nclass Home extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        role: 'none',\r\n        personalData: [],\r\n        trainingData: []\r\n        };\r\n    }\r\n\r\n    async componentDidMount (){\r\n        var token = localStorage.getItem('token');\r\n        var role = \"none\";\r\n        if(token != null)\r\n        {\r\n            role = jwt_decode(token).role;\r\n            const config = {\r\n                headers: {\r\n                  \"Content-type\": \"application/json\",\r\n                  Accept: \"application/json\",\r\n                },\r\n            };\r\n            if(role === 'user')\r\n            {\r\n                await axios.get(\"api/Auth/getUser/\" + jwt_decode(token).id, config)\r\n                .then((response) => {\r\n                    console.log(\"response\",response.data);\r\n                    let personalData = [];\r\n                    personalData.push(response.data.user.firstName,response.data.user.lastName);\r\n                    this.setState({\r\n                        trainingData: response.data.user.trainingData,\r\n                        personalData: personalData\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"error\",error);\r\n                });\r\n            }\r\n        }\r\n        this.setState({\r\n            role: role\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const role = this.state.role;\r\n        let content;\r\n        switch(role)\r\n        {\r\n            case 'none':\r\n                content = \r\n                    <div className=\"Home-div\"></div>\r\n                break;\r\n            case 'user':\r\n                const personalData = this.state.personalData;\r\n                content = \r\n                <div className=\"Home-div\">\r\n                    <h1 style={{color: \"white\", textAlign: \"center\"}}>Welcome User: {personalData[0] + personalData[1]}</h1>\r\n                </div>\r\n                break;\r\n            case 'admin':\r\n                content =\r\n                    <div className=\"Home-div\">\r\n                        <h1 className=\"Home-h1\">Welcome in TrenApp</h1>\r\n                    </div>\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return(\r\n            <div style={{width:'100vh', position:'relative'}}>{content}</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport '../Styles/Forms.css';\r\nimport '../Styles/Braverman.css';\r\nimport axios from 'axios';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { CustomCheckbox } from '../Components/StyledComponents';\r\nimport { FormControlLabel, Button, withStyles } from '@material-ui/core';\r\naxios.defaults.baseURL = 'http://localhost:5000/';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    formPosition: {\r\n        margin: 'auto',\r\n        width: '50%',\r\n        marginLeft: '30%',\r\n        marginRight: '20%',\r\n        backgroundColor:'black',\r\n        padding:'0px 20px 20px 20px'\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(1, 0, 2),\r\n      backgroundColor: 'firebrick'\r\n    },\r\n    FormControlLabel:{\r\n        '&.MuiFormControlLabel-root':{\r\n            color: 'white'\r\n        }\r\n    }\r\n  });\r\n\r\nclass BravermanForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            questionList: [],\r\n            counter: 0,\r\n            logged: false\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.category !== this.props.category) {\r\n          this.fetchData();\r\n        }\r\n    }\r\n    \r\n    componentDidMount (){\r\n        var token = localStorage.getItem('token');\r\n        var logged = false;\r\n        if(token != null)\r\n        {\r\n            logged = true;\r\n            this.setState({\r\n                logged: logged\r\n            })\r\n        }\r\n        if( logged )\r\n            this.fetchData();\r\n    }\r\n\r\n    fetchData = () =>\r\n    {\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Accept: 'application/json',\r\n                withCredentials: true,\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                'Access-Control-Expose-Headers': '*'\r\n            }\r\n        }\r\n        axios.get('api/Braverman/' + this.props.category,config)\r\n        .then( x => {\r\n            console.log(\"response\",x.data)\r\n            // set new token to refresh expire time\r\n            localStorage.setItem('token',x.headers['newtoken'])\r\n            this.setState(() => {\r\n                let qList = x.data.question\r\n                qList.sort(this.SortByProp(\"type\"));\r\n                return { questionList: qList, counter: 0};\r\n            })\r\n        })\r\n    }\r\n\r\n    SortByProp = (prop) =>{    \r\n        return function(a, b) {    \r\n            if (a[prop] > b[prop]) {    \r\n                return 1;    \r\n            } else if (a[prop] < b[prop]) {    \r\n                return -1;    \r\n            }    \r\n            return 0;    \r\n        }    \r\n    }  \r\n\r\n    changeClicks = (event) => {\r\n        let c = this.state.counter;\r\n        if (event.target.checked === true) {\r\n            this.setState(()=>{\r\n                return {counter: c+1};\r\n            })\r\n        }\r\n        else {\r\n            this.setState(()=>{\r\n                return {counter: c-1};\r\n            })\r\n        }\r\n    }\r\n\r\n    changeType = (type) =>{\r\n        this.setState({\r\n            type:type\r\n        })\r\n    }\r\n\r\n    onButtonClick = () => {\r\n        this.props.Submit(this.state.counter);\r\n    }\r\n\r\n    render() {\r\n        var qList = this.state.questionList;\r\n        const {classes } = this.props\r\n        let type = '';\r\n        if(this.state.logged)\r\n        return (\r\n             <ContextConsumer>\r\n                 {\r\n                     language => {\r\n                         return (\r\n                            <div className={classes.formPosition}>\r\n                            <div className={classes.paper}>\r\n                                <form className={classes.form} noValidate>\r\n                                    {qList.map((x, key) => {\r\n                                        return <div key={x.id}>\r\n                                            {type===x.type ? (\r\n                                                <FormControlLabel className={classes.FormControlLabel}\r\n                                                    control={<CustomCheckbox onChange={this.changeClicks}\r\n                                                                            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                                                                            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}/>}\r\n                                                    label={x.question}\r\n                                                />\r\n                                            ) : (\r\n                                            <div>\r\n                                                <label className=\"Braverman-bigLabel\">{x.type}</label><br/>\r\n                                                <FormControlLabel className={classes.FormControlLabel}\r\n                                                    control={<CustomCheckbox onChange={this.changeClicks} name=\"checkbox\" \r\n                                                                            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                                                                            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}/>}\r\n                                                    label={x.question}\r\n                                                />\r\n                                                <script>{type=x.type}</script>\r\n                                            </div>\r\n                                            )}\r\n                                        </div>\r\n                                    })}\r\n                                    <Button\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.submit}\r\n                                            onClick={this.onButtonClick}\r\n                                        >\r\n                                            {language.dictionary.GoNext}\r\n                                    </Button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n                     }\r\n                 }\r\n             </ContextConsumer>\r\n        );\r\n        else return(\r\n            <ContextConsumer>\r\n                {\r\n                    language => {\r\n                        return (\r\n                            <div className=\"Forms-div\">\r\n                            <h1>{language.dictionary.OnlyRegistered}</h1>\r\n                        </div>\r\n                        )\r\n                    }\r\n                }\r\n            </ContextConsumer>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(BravermanForm);\r\n\r\n","import React, {Component} from 'react';\r\nimport BravermanForm from './BravermanForm';\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\naxios.defaults.baseURL = \"http://localhost:5000/\";\r\n\r\nclass BravermanFileForm extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            PersonalTrainingDataId:-1,\r\n            category: \r\n            [\r\n                { name: 'dopamina1', counter: 0 },\r\n                { name: 'acetyloholina1',counter: 0 },\r\n                { name: 'gaba1',counter: 0 },\r\n                { name: 'serotonina1',counter: 0 },\r\n                { name: 'dopamina2', counter: 0 },\r\n                { name: 'acetyloholina2',counter: 0 },\r\n                { name: 'gaba2',counter: 0 },\r\n                { name: 'serotonina2',counter: 0 }\r\n            ],\r\n            category_nr: 0,\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        this.setState({\r\n            PersonalTrainingDataId: this.props.location.state.PersonalTrainingDataId\r\n        })\r\n    }\r\n\r\n    async SendBraverman(data){\r\n        const body = {\r\n            PersonalTrainingDataId : this.state.PersonalTrainingDataId,\r\n            Info: {\r\n                Dopamine1: data[0].counter,\r\n                Serotonin1: data[1].counter,\r\n                Acetylocholine1: data[2].counter,\r\n                Gaba1: data[3].counter,\r\n                Dopamine2: data[4].counter,\r\n                Serotonin2: data[5].counter,\r\n                Acetylocholine2: data[6].counter,\r\n                Gaba2: data[7].counter,\r\n            }\r\n        }\r\n        const config = {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n                withCredentials: true,\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                'Access-Control-Expose-Headers': '*'\r\n            },\r\n        }\r\n        await axios.post(\"api/Braverman/addBravermanInfo\", body, config)\r\n            .then((response)=>{\r\n                localStorage.setItem('token',response.headers['newtoken'])\r\n                this.setState({\r\n                    redirect: true\r\n                })\r\n            })\r\n            .catch((error)=>{console.log('error',error)});\r\n    }\r\n\r\n    submit = (counter) =>\r\n    {\r\n        let cat_nr = this.state.category_nr;\r\n        let categories = this.state.category;\r\n        categories[cat_nr].counter = counter;\r\n        console.log(\"category: \",categories[cat_nr]);\r\n        if (cat_nr===7) {\r\n            this.SendBraverman(categories);\r\n        }\r\n        else {\r\n            this.setState (() => {\r\n                return {category_nr: cat_nr+1, category: categories};\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { redirect } = this.state;\r\n        if (redirect === true)\r\n            return <Redirect to=\"/settings\"/>\r\n        let nr = this.state.category_nr;\r\n        return(\r\n            <div>\r\n                <BravermanForm Submit={this.submit} category = {this.state.category[nr].name}></BravermanForm>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BravermanFileForm;\r\n","import React, { Component, createRef } from 'react';\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport '../Styles/Forms.css';\r\nimport '../Styles/PersonalData.css';\r\nimport axios from \"axios\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Button,\r\n    FormControl,\r\n    FormLabel,\r\n    RadioGroup,\r\n    FormControlLabel ,\r\n    Typography,\r\n    Tooltip,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow\r\n} from '@material-ui/core';\r\nimport {WhiteRadio} from '../Components/StyledComponents'\r\n\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst StyledFormLabel = withStyles({     \r\n    label:\r\n    {\r\n      color:\"white\"\r\n    }\r\n      \r\n})(FormControlLabel);\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: 'firebrick',\r\n        color: 'white',\r\n        border: '1px solid black'\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n        color:'white',\r\n        backgroundColor:'rgb(32, 32, 31);',\r\n        border: '1px solid black'\r\n    },\r\n  }))(TableCell);\r\n\r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\n  const StyledPaper = withStyles((theme) => ({\r\n      root: {\r\n          backgroundColor:'black'\r\n      }\r\n  }))(Paper)\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      \r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(1, 0, 2),\r\n      backgroundColor: 'firebrick'\r\n      \r\n    },\r\n    formPosition: {\r\n      position: 'relative',\r\n      width: '30%',\r\n      height: '40%',\r\n      top:'30%',\r\n      left: '35%',\r\n      backgroundColor:'black',\r\n      padding:'0px 20px 20px 20px'\r\n    }, \r\n    formElements: {\r\n        backgroundColor:'white',\r\n        borderRadius: '5px',\r\n    }\r\n  });\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" backgroundColor='#4caf50' {...props}/>;\r\n  }\r\nclass PersonalTrainingData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            logged: false,\r\n            status: false,\r\n            readOnly: false,\r\n            data:{\r\n                personalTrainingDataId: -1,\r\n                injuries: \"\",\r\n                anthropometry: \"\",\r\n                stickingPointSquat: \"\",\r\n                stickingPointBenchpress: \"\",\r\n                stickingPointDeadLift: \"\",\r\n                trainer:\"\",\r\n                braverman: {}\r\n            },\r\n            listOfTrainers:[]\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    loadTrainers=()=>\r\n    {\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Accept: 'application/json',\r\n                withCredentials: true,\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                'Access-Control-Expose-Headers': '*'\r\n            }\r\n        }\r\n        axios.get('api/trainingplan/trainers',config)\r\n        .then( x => {\r\n            // set new token to refresh expire time\r\n            localStorage.setItem('token',x.headers['newtoken'])\r\n            console.log(x.data);\r\n            this.setState(()=>{return {listOfTrainers:x.data.trainers};})\r\n        })\r\n        .catch(error=>console.log(error));\r\n    }\r\n    sendForm=async ()=>{\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Accept: 'application/json',\r\n                withCredentials: true,\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                'Access-Control-Expose-Headers': '*'\r\n            }\r\n        }\r\n       // let json = JSON.parse(this.state.data);\r\n       // console.log(\"json\",json);\r\n        let data = this.state.data;\r\n        let dto = \r\n        {\r\n            \"UserId\": jwtDecode(localStorage.getItem('token')).id,\r\n            \"data\": {\r\n                \"injuries\": data.injuries,\r\n                \"bravermanId\": data.bravermanId,\r\n                \"anthropometry\": data.anthropometry,\r\n                \"stickingPointSquat\": data.stickingPointSquat,\r\n                \"stickingPointBenchpress\": data.stickingPointBenchpress,\r\n                \"stickingPointDeadLift\": data.stickingPointDeadLift,\r\n                \"trainerId\": data.trainerId,\r\n            }\r\n        }\r\n        let str = JSON.stringify(dto);\r\n        console.log(\"dto\",dto);\r\n        console.log(\"str\",str);\r\n        await axios.post('api/auth/editpersonalTrainingData/',dto,config)\r\n        .then( x => {\r\n            localStorage.setItem('token',x.headers['newtoken'])\r\n            console.log(\"udalo sie wyslac dane\");\r\n            this.setState(prevstate=>\r\n                {\r\n                    let state = prevstate;\r\n                    state.successmsg=\"wysłano nowe dane\";\r\n                    return {state};\r\n                });\r\n            //console.log('getpersonalTrainingData',x.data.data);\r\n            //this.setState(()=>{return {data:x.data.data};})\r\n        })\r\n        .catch(\r\n            (error)=>\r\n            {\r\n                this.setState(prevstate=>\r\n                {\r\n                    //console.log(\"i am in setstate error\");\r\n                    let state = prevstate;\r\n                    state.errormsg=\"błąd\";\r\n                    return {state};\r\n                });\r\n                console.log(error);\r\n                \r\n            }\r\n            \r\n        \r\n        );\r\n    \r\n    }\r\n    \r\n    loadData=()=>\r\n    {\r\n      \r\n        \r\n       \r\n        //json = JSON.stringify(json);\r\n        \r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Accept: 'application/json',\r\n                withCredentials: true,\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                'Access-Control-Expose-Headers': '*'\r\n            }\r\n        }\r\n        let encrypted = localStorage.getItem('token');\r\n        let token = jwtDecode(encrypted);\r\n        console.log(\"token - userid\");\r\n        console.log(token);\r\n        let json = Number(token.id);\r\n        axios.post('api/auth/getpersonalTrainingData/',json,config)\r\n        .then( x => {\r\n            localStorage.setItem('token',x.headers['newtoken'])\r\n            console.log('getpersonalTrainingData',x.data.data);\r\n            this.setState(()=>{return {data:x.data.data};})\r\n        })\r\n        .catch(error=>console.log(error));\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        var token = localStorage.getItem('token');\r\n        var logged = false;\r\n        if(token != null)\r\n        logged = true;\r\n        this.setState({\r\n            logged: logged\r\n        });\r\n    this.loadData();\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState((prevState)=>{\r\n            let newdata = prevState.data;\r\n            newdata[event.target.id]=event.target.value;\r\n            return {data: newdata};\r\n        });\r\n    }\r\n    handleSubmit(event) {\r\n        if(this.state.data.stickingPointSquat===\"\")\r\n        return;\r\n        if(this.state.data.stickingPointBenchpress===\"\")\r\n        return;\r\n        if(this.state.data.stickingPointDeadLift===\"\")\r\n        return;\r\n        this.sendForm();\r\n        /*this.setState({\r\n            status: true\r\n        })*/\r\n\r\n        //console.log(this.state);\r\n    }\r\n    mychangeRadioPrzysiad=(value,event)=>{\r\n        this.setState(async (state)=>{\r\n            let prevstate = state;\r\n            prevstate.data.stickingPointSquat=value;\r\n            console.log(prevstate);\r\n            return await {prevstate};\r\n        });\r\n        console.log(\"saving\",this.state.data);\r\n        //this.sendForm();\r\n    }\r\n    mychangeRadioWyciskanie=(value,event)=>{\r\n        this.setState(async (state)=>{\r\n            let prevstate = state;\r\n            prevstate.data.stickingPointBenchpress=value;\r\n            console.log(prevstate);\r\n            return await {prevstate};\r\n        });\r\n        console.log(\"saving\",this.state.data);\r\n        //this.sendForm();\r\n    }\r\n    mychangeRadioMartwyCiag=(value,event)=>{\r\n        this.setState(async (state)=>{\r\n            let prevstate = state;\r\n            prevstate.data.stickingPointDeadLift=value;\r\n            console.log(prevstate);\r\n            return await {prevstate};\r\n        });\r\n        console.log(\"saving\",this.state.data);\r\n        //this.sendForm();\r\n    }\r\n    //TODO dodac pobieranie bravermana z bazy danych i uzupelnienie elementami\r\n    handleFilterClose = (event,reason) => {\r\n     \r\n          this.setState(prevstate=>\r\n            {\r\n                let state = prevstate;\r\n                state.successmsg=\"\";\r\n                state.errormsg=\"\";\r\n                return {state};\r\n            });\r\n    }\r\n    render() {\r\n        //let personaldata = null;\r\n        //if(this.state.personaldata!=undefined)\r\n          let  personaldata = this.state?.data;\r\n//            else personaldata = null;\r\n        const { status, data} = this.state;\r\n        //const {stickingPointSquat,stickingPointDeadLift,stickingPointBenchpress} = data\r\n        const {classes} = this.props\r\n        \r\n        const successMessage = this.state?.successmsg||\"\";\r\n        const errorMessage = this.state?.errormsg||\"\";\r\n\r\n        if (status === true)\r\n            return <Redirect to=\"/\" />\r\n        if(this.state.logged && this.state.role!==\"user\")\r\n        return (\r\n            <ContextConsumer>\r\n                {\r\n                    language => {\r\n                        return (\r\n                            <div className={classes.formPosition}>\r\n                                <form >\r\n                                    <Grid spacing={2} container alignItems='center' justify='center' >\r\n                                        <Grid item xs={12} >\r\n                                            <Tooltip title={language.dictionary.MostImportantInjuries}>\r\n                                                <TextField \r\n                                                    variant='filled'\r\n                                                    margin=\"normal\"\r\n                                                    label={language.dictionary.Injuries}\r\n                                                    id='injuries'\r\n                                                    value={personaldata?.injuries}\r\n                                                    required\r\n                                                    fullWidth\r\n                                                    autoFocus\r\n                                                    disabled={this.state.readOnly}\r\n                                                    multiline\r\n                                                    className={classes.formElements}\r\n                                                    onChange = {(e) => this.handleChange(e)}>\r\n                                                        \r\n                                                </TextField>\r\n                                            </Tooltip>\r\n                                        \r\n                                        </Grid>\r\n                                        <Grid item xs={12} >\r\n                                                                                 {/* Nie wiem jak to przetłumaczyć xD */}\r\n                                            <Tooltip title=\"Proporcje ciała, długości kończyn\">\r\n                                                <TextField \r\n                                                    variant='filled'\r\n                                                    margin=\"normal\"\r\n                                                    label={language.dictionary.Anthropometry}\r\n                                                    id='anthropometry'\r\n                                                    value={personaldata?.anthropometry}\r\n                                                    required\r\n                                                    fullWidth\r\n                                                    autoFocus\r\n                                                    disabled={this.state.readOnly}\r\n                                                    multiline\r\n                                                    className={classes.formElements}\r\n                                                    onChange = {(e) => this.handleChange(e)}>\r\n                                                </TextField>\r\n                                            </Tooltip>\r\n                                            \r\n                                        </Grid>\r\n                                        <Grid item xs ={12} >\r\n                                            <Typography component='h6' variant='h5' >\r\n                                                {language.dictionary.Weaknesses}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={4} >\r\n                                        <FormControl disabled={this.state.readOnly} >\r\n                                            <FormLabel component=\"legend\" style={{color:'white'}}>{language.dictionary.Squad}</FormLabel>\r\n                                                <RadioGroup aria-label={language.dictionary.Squad} name=\"przysiad\"  onChange={this.handleChange}>\r\n                                                    <FormControlLabel value=\"na dole\" onChange={(value)=>this.mychangeRadioPrzysiad(\"na dole\",value)} checked={personaldata?.stickingPointSquat ==\"na dole\"?true:false} control={<WhiteRadio />} label={language.dictionary.onTheBottom} style={{color:'white'}} />\r\n                                                    <FormControlLabel value=\"w srodku\" onChange={(value)=>this.mychangeRadioPrzysiad(\"w srodku\",value)} checked={personaldata?.stickingPointSquat ==\"w srodku\"?true:false} control={<WhiteRadio />} label={language.dictionary.inTheMiddle} style={{color:'white'}}/>\r\n                                                    <FormControlLabel value=\"na gorze\" onChange={(value)=>this.mychangeRadioPrzysiad(\"na gorze\",value)} checked ={personaldata?.stickingPointSquat ==\"na gorze\"?true:false} control={<WhiteRadio />} label={language.dictionary.onTop} style={{color:'white'}} />\r\n                                                    <FormControlLabel value=\"gorny grzbiet\" onChange={(value)=>this.mychangeRadioPrzysiad(\"gorny grzbiet\",value)} checked ={personaldata?.stickingPointSquat ==\"gorny grzbiet\"?true:false} control={<WhiteRadio />} label={language.dictionary.upperRidge} style={{color:'white'}} />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid> \r\n                                        <Grid item xs={4} >\r\n                                        <FormControl disabled={this.state.readOnly} >\r\n                                            <FormLabel component=\"legend\" style={{color:'white'}}>{language.dictionary.BenchPress}</FormLabel>\r\n                                                <RadioGroup aria-label={language.dictionary.BenchPress} name=\"wyciskanie\" column onChange={this.handleChange}>\r\n                                                    <FormControlLabel value=\"Na dole\" \r\n                                                    onChange={(value)=>this.mychangeRadioWyciskanie(\"na dole\",value)}\r\n                                                    checked={personaldata?.stickingPointBenchpress ==\"na dole\"?true:false} \r\n                                                    control={<WhiteRadio />} label={language.dictionary.onTheBottom} style={{color:'white'}}/>\r\n                                                    <FormControlLabel \r\n                                                    onChange={(value)=>this.mychangeRadioWyciskanie(\"w srodku\",value)} \r\n                                                    checked={personaldata?.stickingPointBenchpress ==\"w srodku\"?true:false}\r\n                                                    value=\"w srodku\" control={<WhiteRadio />} label={language.dictionary.inTheMiddle} style={{color:'white'}} />\r\n                                                    <FormControlLabel\r\n                                                    onChange={(value)=>this.mychangeRadioWyciskanie(\"na gorze\",value)} \r\n                                                    checked={personaldata?.stickingPointBenchpress ==\"na gorze\"?true:false}\r\n                                                    value=\"na gorze\" control={<WhiteRadio />} label={language.dictionary.onTop} style={{color:'white'}}/>\r\n                                                    <FormControlLabel \r\n                                                    onChange={(value)=>this.mychangeRadioWyciskanie(\"gorny grzbiet\",value)} \r\n                                                    checked={personaldata?.stickingPointBenchpress ==\"gorny grzbiet\"?true:false}\r\n                                                    value=\"gorny grzbiet\" control={<WhiteRadio />} label={language.dictionary.upperRidge} style={{color:'white'}} />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid> \r\n                                        <Grid item xs={4} >\r\n                                        <FormControl disabled={this.state.readOnly}>\r\n                                            <FormLabel component=\"legend\" style={{color:'white'}}>{language.dictionary.Deadlift}</FormLabel>\r\n                                                <RadioGroup aria-label={language.dictionary.Deadlift} name=\"MartwyCiag\" column  onChange={this.handleChange}>\r\n                                                    <FormControlLabel \r\n                                                    onChange={(value)=>this.mychangeRadioMartwyCiag(\"na dole\",value)} \r\n                                                    checked={personaldata?.stickingPointDeadLift ==\"na dole\"?true:false}\r\n                                                    value=\"na dole\" control={<WhiteRadio />} label={language.dictionary.onTheBottom} style={{color:'white'}}/>\r\n                                                    <FormControlLabel \r\n                                                    onChange={(value)=>this.mychangeRadioMartwyCiag(\"pod kolanem\",value)} \r\n                                                    checked={personaldata?.stickingPointDeadLift ==\"pod kolanem\"?true:false}\r\n                                                    value=\"pod kolanem\" control={<WhiteRadio />} label={language.dictionary.underTheKnee} style={{color:'white'}}/>\r\n                                                    <FormControlLabel \r\n                                                    onChange={(value)=>this.mychangeRadioMartwyCiag(\"za kolanem\",value)} \r\n                                                    checked={personaldata?.stickingPointDeadLift ==\"za kolanem\"?true:false}\r\n                                                    value=\"za kolanem\" control={<WhiteRadio />} label={language.dictionary.behindTheKnee} style={{color:'white'}}/>\r\n                                                    <FormControlLabel \r\n                                                    onChange={(value)=>this.mychangeRadioMartwyCiag(\"chwyt\",value)} \r\n                                                    checked={personaldata?.stickingPointDeadLift ==\"chwyt\"?true:false}                                                    \r\n                                                    value=\"chwyt\"  control={<WhiteRadio />} label={language.dictionary.grip} style={{color:'white'}}/>\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography component ='h5' variant='h5' align='inherit' >\r\n                                                {language.dictionary.BravermannTest}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={6}>\r\n                                            <Typography align='right' >\r\n                                                <Link to={{\r\n                                                    pathname: '/bravermantest',\r\n                                                    state: {\r\n                                                        PersonalTrainingDataId: data && data.personalTrainingDataId ? data.personalTrainingDataId : -1\r\n                                                    }}}\r\n                                                >\r\n                                                    <Button \r\n                                                        fullWidth\r\n                                                        variant=\"contained\"\r\n                                                        color=\"secondary\"\r\n                                                        disabled={this.state.readOnly}\r\n                                                        className={classes.submit}>\r\n                                                            {language.dictionary.CompleteTheTest}\r\n                                                    </Button>\r\n                                                </Link>\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} >\r\n                                            <TableContainer component={StyledPaper}  >\r\n                                                <Table>\r\n                                                    <TableHead>\r\n                                                        <TableRow>\r\n                                                            <StyledTableCell align='center'>{language.dictionary.Serotonin}</StyledTableCell>\r\n                                                            <StyledTableCell align='center'>{language.dictionary.Acetylcholine}</StyledTableCell>\r\n                                                            <StyledTableCell align='center'>{language.dictionary.Dopamine}</StyledTableCell>\r\n                                                            <StyledTableCell align='center'>GABA</StyledTableCell>\r\n                                                        </TableRow>\r\n                                                    </TableHead>\r\n                                                    <TableBody>\r\n                                                        <StyledTableRow>\r\n                                                            <StyledTableCell align='center'>{data && data.braverman ? (data.braverman.serotonin1 + data.braverman.serotonin2) : 0}</StyledTableCell>\r\n                                                            <StyledTableCell align='center'>{data && data.braverman ? (data.braverman.acetylocholine1 + data.braverman.acetylocholine2) : 0}</StyledTableCell>\r\n                                                            <StyledTableCell align='center'>{data && data.braverman ? (data.braverman.dopamine1 + data.braverman.dopamine2) : 0}</StyledTableCell>\r\n                                                            <StyledTableCell align='center'>{data && data.braverman ? (data.braverman.gaba1 + data.braverman.gaba2) : 0}</StyledTableCell>\r\n                                                        </StyledTableRow>\r\n                                                    </TableBody>\r\n                                                </Table>\r\n                                            </TableContainer>\r\n                                        </Grid>\r\n                                    \r\n                                        <Grid item xs={12}>\r\n                                            <Button\r\n                                                fullWidth\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                className={classes.submit}\r\n                                                disabled={this.state.readOnly}\r\n                                                onClick={(e) => this.handleSubmit()}\r\n                                                >\r\n                                                {language.dictionary.Edit}\r\n                                            </Button>\r\n                                        </Grid> \r\n                                    </Grid>\r\n\r\n\r\n                                    {/* <p className=\"PersonalData-p\">\r\n                                        <label className=\"PersonalData-label\">Wybierz trenera: </label>\r\n                                        <select className=\"PersonalData-select\" onChange={this.handleChange} id=\"trainer\">\r\n                                            {this.state.listOfTrainers.map\r\n                                                ((value,key)=>\r\n                                                {\r\n                                                    return <option value={value.id} key={key}>{value.name}{\" \"}{value.lastName}</option>\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </p> */}\r\n\r\n                                </form>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </ContextConsumer>\r\n        );\r\n        else return(\r\n            <ContextConsumer>\r\n                {\r\n                    language => {\r\n                        return (\r\n                            <div className=\"Forms-div\">\r\n                                <h1>{language.dictionary.OnlyRegistered}</h1>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </ContextConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme:true})(PersonalTrainingData);\r\n","import React, { Component } from 'react';\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport { Redirect } from 'react-router-dom';\r\nimport '../Styles/Forms.css';\r\n\r\nclass MesocycleForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            logged: false,\r\n            status:false,\r\n            days:-1\r\n        }\r\n        //this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        var token = localStorage.getItem('token');\r\n        var logged = false;\r\n        if(token != null)\r\n            logged = true;\r\n        this.setState({\r\n            logged: logged\r\n        })\r\n    }\r\n\r\n    handleChange=(nr,event)=> {\r\n        //event.target.value.\r\n        this.setState({\r\n            days: nr\r\n        });\r\n        console.log(\"days: \",this.state.days);\r\n\r\n    }\r\n    handleSubmit(event) {\r\n        \r\n        \r\n        this.setState({\r\n            status: true\r\n        })\r\n\r\n        //console.log(this.state);\r\n\r\n    }\r\n\r\n    render() {\r\n        const { status } = this.state.status;\r\n        if (status === true)\r\n            return <Redirect to=\"/\" />\r\n\r\n        if(this.state.logged)\r\n        {\r\n            let description;\r\n            if(this.state.days!==-1)\r\n            {\r\n                description=\r\n                <div>\r\n                    <p>\r\n                        <label className=\"Forms-label\">wybrano {this.state.days} dni</label>\r\n                    </p>\r\n                    <button className=\"Forms-button\" onClick={this.handleSubmit}>zatwierdź</button>\r\n                </div>\r\n            }\r\n            else\r\n            {\r\n                description= \r\n                <div>\r\n                    <label className=\"Forms-label\">nie wybrano liczby dni</label>\r\n                </div>\r\n            }\r\n            \r\n            return (\r\n                <ContextConsumer>\r\n                    {\r\n                        language => {\r\n                            return (\r\n                                <div className=\"Forms-div\">\r\n                                    <p>\r\n                                        <label className=\"Forms-label\">{language.dictionary.trainingDaysPerWeek}</label>\r\n                                        <button onClick={()=>this.handleChange(3)}>3</button>\r\n                                        <button onClick={()=>this.handleChange(4)}>4</button>\r\n                                    </p>\r\n                                    <div>{description}</div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }\r\n                </ContextConsumer> \r\n            );\r\n        }\r\n        else return(\r\n            <ContextConsumer>\r\n                {\r\n                    language => {\r\n                        return (\r\n                            <div className=\"Forms-div\">\r\n                                <h1>{language.dictionary.OnlyRegistered}</h1>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </ContextConsumer>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default MesocycleForm;\r\n","import React, { Component } from 'react';\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport '../Styles/Forms.css';\r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport {\r\n    Button,\r\n    Grid,\r\n    TextField //zamiast inputa również może\r\n} from '@material-ui/core';\r\nimport { Hidden } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst styles = theme => ({\r\n    button:{\r\n        margin: theme.spacing(1, 0, 2),\r\n        backgroundColor: 'firebrick'\r\n    },\r\n    header: {\r\n        position:'relative',\r\n        height:'30px'\r\n    },\r\n    toggler :{\r\n        position:'absolute',\r\n        right:'0%',\r\n        height:'30px',\r\n        marginRight:'5px',\r\n        marginTop:'-5px',\r\n        backgroundColor:'rgb(32, 32, 31);',\r\n        fontVariant:'normal'\r\n    },\r\n    active: {\r\n        color:'firebrick'\r\n    }, //needed so that the &$active tag works\r\n    completed: {\r\n        color:'firebrick'\r\n    },\r\n    disabled: {\r\n        color:'firebrick'\r\n    },\r\n    stepLabelActiveComplete: {\r\n        color:'gray'\r\n    },\r\n    labelContainer: {\r\n        color:'firebrick',\r\n        \"& $alternativeLabel\": {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    tableCellStyle : {\r\n        backgroundColor:'rgb(32, 32, 31);',\r\n        color:'white'\r\n    },\r\n})\r\n\r\nconst BootstrapButton = withStyles({\r\n    root: {\r\n      boxShadow: 'none',\r\n      textTransform: 'none',\r\n        \r\n      padding: '6px 12px',\r\n     \r\n      '&:hover': {\r\n        boxShadow: 'none',\r\n      },\r\n      '&:focus': {\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n      },\r\n    },\r\n    label :{\r\n        textVariant:\"normal\"\r\n    }\r\n  })(Button);\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/';\r\n\r\nclass TrainingPlan3days extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AthleteId: -1,\r\n            Days: 3,\r\n            Exercises: [],//pobrana i gotowa lista do rozdzielenia\r\n            logged: false,\r\n            role: \"\",\r\n            TrainerId: 0,\r\n            defaultAthleteIdSetted: false\r\n        }\r\n        //this.postPlan = this.postPlan.bind(this); ///\r\n    }\r\n\r\n\r\n    async componentDidMount (){\r\n\r\n        ///\r\n        //this.props.postplan(this.postPlan)\r\n\r\n        console.log(this.props)\r\n        if (this.props.idFromProps!==null) {\r\n            console.log(this.props.idFromProps)\r\n            this.setState({\r\n            AthleteId: this.props.idFromProps\r\n            })\r\n        }\r\n        \r\n\r\n        await this.setToken();\r\n        if( this.state.logged )\r\n        {\r\n            this.fetchData();\r\n        }\r\n        \r\n    }\r\n\r\n    async setToken(){\r\n        var token = localStorage.getItem('token');\r\n        var role = this.state.role;\r\n        if (token!==null)\r\n            role = jwt_decode(token).role;\r\n        var logged = false;\r\n        if(token != null)\r\n        {\r\n            logged = true;\r\n            this.setState({\r\n                logged: logged,\r\n                role: role,\r\n                TrainerId: jwt_decode(token).id\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    fetchData = () =>\r\n    {\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Accept: 'application/json',\r\n                withCredentials: true,\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                'Access-Control-Expose-Headers': '*'\r\n            }\r\n        }\r\n\r\n        axios.get('api/trainingplan/create',config)\r\n        .then( x => {\r\n            // set new token to refresh expire time\r\n            localStorage.setItem('token',x.headers['newtoken'])\r\n            this.setState(() => {\r\n                let eList = x.data.excercises;\r\n                let result = [];\r\n                // data for table\r\n                console.log(eList)\r\n                for(var i in eList)\r\n                    result.push([i, eList[i]]);\r\n                return { Exercises: result};\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error\",error);\r\n        });\r\n        \r\n    }\r\n\r\n    // when option in selection change\r\n    onSelectionChange = (event) =>{\r\n       /* var id = event.target.id;\r\n        //var selectedOption = event.target.value;\r\n        var columns = document.getElementById(\"tr\"+id).cells;\r\n        for(let i = 2 ; i < columns.length ; i++)\r\n        {\r\n            columns[i].innerHTML = <input placeholder=\"Wprowadź dane\"></input>\r\n        }*/\r\n    }\r\n\r\n    onAthleteSelectionChange = (event) => {\r\n        this.setState({\r\n            AthleteId: event.target.value\r\n        })\r\n     console.log(event.target.value)\r\n    }\r\n\r\n    postPlan = () => {\r\n\r\n        console.log(\"Postplan\")\r\n        //let plan = this.state.plan;\r\n        /*axios.post('api/trainingplan/postplan', plan, config)\r\n        .then( x => {\r\n            // set new token to refresh expire time\r\n            localStorage.setItem('token',x.headers['newtoken'])\r\n            this.setState(() => {\r\n                let eList = x.data.excercises;\r\n                let result = [];\r\n                // data for table\r\n                console.log(eList)\r\n                for(var i in eList)\r\n                    result.push([i, eList[i]]);\r\n                return { Exercises: result};\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error\",error);\r\n        });*/\r\n    }\r\n\r\n    render() {\r\n\r\n        var eList = this.state.Exercises;\r\n\r\n        const {classes } = this.props////\r\n        //document.querySelectorAll(\".input\").forEach(i=>i.style.backgroundColor = \"black\") ////\r\n        /*var inputs = document.getElementsByTagName('input');\r\n        for (var i = 0; i<inputs.length; i++) {\r\n            inputs[i].style.backgroundColor = \"black\"\r\n            inputs[i].style.color = \"white\"\r\n        }*/\r\n        if(this.state.logged && this.state.role!==\"user\")\r\n        return (\r\n            <ContextConsumer>\r\n                {\r\n                    language => {\r\n                        return (\r\n                            <div className=\"Forms-div\">\r\n                                <Grid container justify='center' alignItems='center' spacing={1} style ={{width:'55%',marginTop:'20px',marginLeft:'25%'}}>\r\n                                    <Grid item xs ={14} container justify='center' alignItems='center' >\r\n                                        <Button\r\n                                            name=\"postPlanButton\"\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            className={classes.button}\r\n                                            disabled=\"true\"\r\n                                            onClick={this.props.postplan(this.postPlan)}\r\n                                        >\r\n                                            {language.dictionary.SendPlan}\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item xs={14}>\r\n                                        <table className=\"Forms-table\" id=\"divToPrint\" ref={this.componentRef}>\r\n                                            {/* Day I */}\r\n                                            <tbody className=\"Forms-tbody1\">\r\n                                                <tr style={{backgroundColor:'firebrick',color:'white'}}>\r\n                                                    <th>{language.dictionary.Category}</th>\r\n                                                    <th>{language.dictionary.ExcerciseName}</th>\r\n                                                    <th>{language.dictionary.ProgressionMethod}</th>\r\n                                                    <th>{language.dictionary.Sets}</th>\r\n                                                    <th>{language.dictionary.Reps}</th>\r\n                                                    <th>Tempo</th>\r\n                                                    <th>{language.dictionary.Break}</th>\r\n                                                    <th>{language.dictionary.Comments}</th>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th  style={{backgroundColor:'firebrick',color:'white'}} colSpan=\"8\" className={classes.header} >\r\n                                                        {language.dictionary.Day} I\r\n                                                    </th> \r\n                                                </tr>\r\n                                                {eList.map((x,key)=>{\r\n                                                    if(x[0]!==\"deadliftAccesory\" && x[0]!==\"benchpressAccesory\")\r\n                                                    {\r\n                                                        return(\r\n                                                            <tr id={\"trday1\"+key} key={\"day1\"+key} className={classes.tableCellStyle}>\r\n                                                                <td>{x[0]}</td>\r\n                                                                <td>\r\n                                                                <Autocomplete\r\n                                                                id=\"combo-box-demo\"\r\n                                                                options={x[1]}\r\n                                                                getOptionLabel={(option) => option.excerciseName}\r\n                                                                style={{ backgroundColor:'firebrick',color:'white', width: 300 }}\r\n                                                                renderInput={(params) => <TextField style={{ backgroundColor:'firebrick',color:'white' }}  {...params} label=\"Wybierz\" variant=\"outlined\" />}\r\n                                                                />\r\n                                                                </td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    }\r\n                                                    else return null;\r\n                                                })}\r\n                                            </tbody>\r\n                                            {/* Day II */}\r\n                                            <tbody className=\"Forms-tbody2\">\r\n                                                <tr>\r\n                                                    <th  style={{backgroundColor:'firebrick',color:'white'}} colSpan=\"8\" className={classes.header} >\r\n                                                        {language.dictionary.Day} II\r\n                                                    </th> \r\n                                                </tr>\r\n                                                {eList.map((x,key)=>{\r\n                                                    if(x[0]!==\"squatAccesory\" && x[0]!==\"benchpressAccesory\")\r\n                                                    {\r\n                                                        return(\r\n                                                            <tr id={\"trday2\"+key} key={\"day2\"+key} className={classes.tableCellStyle}>\r\n                                                                <td>{x[0]}</td>\r\n                                                                <td>\r\n                                                                <Autocomplete\r\n                                                                id=\"combo-box-demo\"\r\n                                                                options={x[1]}\r\n                                                                getOptionLabel={(option) => option.excerciseName}\r\n                                                                style={{ backgroundColor:'firebrick',color:'white', width: 300 }}\r\n                                                                renderInput={(params) => <TextField style={{ backgroundColor:'firebrick',color:'white' }}  {...params} label=\"Wybierz\" variant=\"outlined\" />}\r\n                                                                />\r\n                                                                </td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    }\r\n                                                    else return null;\r\n                                                })}\r\n                                            </tbody>\r\n                                            {/* Day III */}\r\n                                            <tbody className=\"Forms-tbody3\">\r\n                                                <tr>\r\n                                                    <th  style={{backgroundColor:'firebrick',color:'white'}} colSpan=\"8\" className={classes.header} >\r\n                                                        {language.dictionary.Day} III\r\n                                                    </th> \r\n                                                </tr>\r\n                                                {eList.map((x,key)=>{\r\n                                                    if(x[0]!==\"squatAccesory\" && x[0]!==\"deadliftAccesory\")\r\n                                                    {\r\n                                                        return(\r\n                                                            <tr id={\"trday3\"+key} key={\"day3\"+key} className={classes.tableCellStyle}>\r\n                                                                <td>{x[0]}</td>\r\n                                                                <td>\r\n                                                                <Autocomplete\r\n                                                                id=\"combo-box-demo\"\r\n                                                                options={x[1]}\r\n                                                                getOptionLabel={(option) => option.excerciseName}\r\n                                                                style={{ backgroundColor:'firebrick',color:'white', width: 300 }}\r\n                                                                renderInput={(params) => <TextField style={{ backgroundColor:'firebrick',color:'white' }}  {...params} label=\"Wybierz\" variant=\"outlined\" />}\r\n                                                                />\r\n                                                                </td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                                <td><input style={{backgroundColor:'black',color:'white'}}></input></td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    }\r\n                                                    else return null;\r\n                                                })}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </Grid>\r\n                            </Grid>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </ContextConsumer>\r\n        );\r\n        else\r\n        return(\r\n            <ContextConsumer>\r\n                {\r\n                    language => {\r\n                        return (\r\n                            <div className=\"Forms-div\">\r\n                                <h1>{language.dictionary.OnlyRegistered}</h1>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </ContextConsumer>\r\n        )\r\n    }\r\n}\r\n\r\n//export default TrainingPlan3days;\r\nexport default withStyles(styles, {withTheme: true})(TrainingPlan3days);\r\n\r\n","import PropTypes from 'prop-types';\r\nimport {useContext} from 'react'\r\nimport { LanguageContext} from '../languages/LanguageContext'\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Button\r\n} from '@material-ui/core'\r\n\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport {CustomSlider} from '../Components/StyledComponents'\r\n\r\nconst Slider = withStyles({\r\n    rail: {\r\n        color: 'firebrick'\r\n    },\r\n    markLabel: {\r\n        color: 'black'\r\n    },\r\n})(CustomSlider)\r\n\r\nconst RpeSliders = (props) => {\r\n    //Funkcyjny\r\n    const context = useContext(LanguageContext)\r\n    const {onSave,closeModalFn} = props \r\n    let {excercises} = props\r\n\r\n    if (Array.isArray(excercises) === false) {\r\n        excercises = []\r\n    }\r\n    const generateSliderValue = () => {\r\n        let sliderValue = []\r\n        for (let i = 1; i <= 10; i += 0.5) {\r\n            sliderValue.push({\r\n                value: i,\r\n                label: `${i%1===0?i:''}`\r\n            })\r\n        }\r\n        return sliderValue\r\n    }\r\n\r\n    const onClick = () => {\r\n        onSave()\r\n    }\r\n    const sliderValue = generateSliderValue()\r\n\r\n    return(\r\n        <div>\r\n        {\r\n            excercises.map((value,index) => {\r\n                return (\r\n                    <Grid container spacing={1} justify='space-between' alignItems='center' key={index}>\r\n                        <Grid item xs={2}>\r\n                            <Typography component='h5'>\r\n                            { value.excercise.excerciseName} \r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <Typography component='h5'>\r\n                                { value.weight} kg\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <Typography component='h5'>\r\n                                { value.sets}x{value.reps}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <Slider\r\n                                min={1}\r\n                                max={10}\r\n                                aria-labelledby=\"discrete-slider-restrict\"\r\n                                defaultValue={5}\r\n                                step={null}\r\n                                marks={sliderValue}\r\n                            />\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n            \r\n        })}        \r\n        <Grid container spacing={1} justify='center' alignItems='center'>\r\n            <Grid item xs={8}>\r\n                <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style={{margin: '10px 0px 2px 0px',backgroundColor: 'firebrick',}}\r\n                        onClick={onClick}\r\n                    >\r\n                       {context.dictionary.Save}\r\n                </Button>\r\n            </Grid>\r\n        </Grid>    \r\n                    \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nRpeSliders.propTypes = {\r\n    closeModalFn:PropTypes.func.isRequired,\r\n    excercises:PropTypes.array.isRequired,\r\n    onSave:PropTypes.func.isRequired\r\n}\r\nRpeSliders.defaultProps = {\r\n  excercises:[]  \r\n}\r\n\r\nexport default RpeSliders;","import {useContext} from 'react'\r\nimport { LanguageContext} from '../languages/LanguageContext'\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Radio,\r\n    Button,\r\n    RadioGroup,\r\n    Typography,\r\n    FormControl,\r\n    FormLabel,\r\n    FormControlLabel,\r\n    Tooltip,\r\n    Grid} from '@material-ui/core'\r\nconst RpeQuestionnaire = (props) => {\r\n\r\n    const context = useContext(LanguageContext)\r\n    const {excercises,closeModalFn} = props\r\n\r\n    const onClick = () => {\r\n\r\n    }\r\n\r\n    const handleChangeRadio = (e) => {\r\n\r\n    }\r\n    return(\r\n        <div>          \r\n        {\r\n            excercises.map((value,index) => {\r\n                return (\r\n                    <Grid container spacing={1} justify='space-between' alignItems='center' key={index}>\r\n                        <Grid item xs={12}>\r\n                            <Typography component='h5' style={{fontWeight:'bold'}}>\r\n                            { value.excercise.excerciseName} \r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <FormControl>\r\n                                <FormLabel component=\"legend\" > {context.dictionary.WhatWrong}</FormLabel>\r\n                                <RadioGroup aria-label=\"Gender\" name=\"Gender\" row  onChange={(e) => handleChangeRadio(e)} >\r\n                                    <FormControlLabel value=\"Weight\" control={<Radio />} label={context.dictionary.ToHeavy} />\r\n                                    <FormControlLabel value=\"Volume\" control={<Radio />} label={context.dictionary.ToHeightVolume} />\r\n                                    <Tooltip title={context.dictionary.Trouble} >\r\n                                        <FormControlLabel value=\"Excercise\"  control={<Radio/>} label={context.dictionary.PreviousExcercise} />\r\n                                    </Tooltip>\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                )\r\n            \r\n        })}        \r\n        <Grid container spacing={1} justify='center' alignItems='center'>\r\n            <Grid item xs={8}>\r\n                <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style={{margin: '10px 0px 2px 0px',backgroundColor: 'firebrick',}}\r\n                        onClick={onClick}\r\n                    >\r\n                       {context.dictionary.Save}\r\n                </Button>\r\n            </Grid>\r\n        </Grid>    \r\n                    \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nRpeQuestionnaire.propTypes = {\r\n    closeModalFn:PropTypes.func.isRequired,\r\n    excercises:PropTypes.array.isRequired\r\n}\r\nRpeQuestionnaire.defaultProps = {\r\n    excercises:[]  \r\n  }\r\nexport default RpeQuestionnaire","import PropTypes from 'prop-types';\r\nimport {useState} from 'react'\r\nimport RpeSlider from './RpeSliders'\r\nimport RpeQuestionnaire from './RpeQuestionnaire'\r\n\r\n\r\nconst RpeForm = (props) =>   {\r\n//Funkcyjny\r\n    const [questionnaire,setQuestionnaire] = useState(false)\r\n\r\n    const {excercises,closeModalFn} = props\r\n    \r\n    const onClickSave = () => {\r\n        setQuestionnaire(true)\r\n    }\r\n\r\n    return (\r\n        questionnaire === false \r\n            ? <RpeSlider  excercises = {excercises} closeModalFn = {closeModalFn} onSave={() => onClickSave()}/>\r\n            : <RpeQuestionnaire excercises = {excercises} closeModalFn = {closeModalFn}/>\r\n    )\r\n\r\n}\r\nRpeForm.propTypes = {\r\n    closeModalFn:PropTypes.func.isRequired,\r\n    excercises:PropTypes.array.isRequired\r\n}\r\nRpeForm.defaultProps = {\r\n  excercises:[]  \r\n}\r\n\r\nexport default RpeForm;","import React, { Component } from 'react';\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport '../Styles/Forms.css';\r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\nimport {exportComponentAsPDF} from 'react-component-export-image';\r\nimport * as htmlToImage from 'html-to-image';\r\nimport download from 'downloadjs';\r\nimport RpeForm from './RpeForm'\r\nimport {\r\n    Stepper,\r\n    Step,\r\n    StepButton,\r\n    Button,\r\n    Grid,\r\n    StepLabel,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent\r\n} from '@material-ui/core';\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/';\r\n\r\nconst styles = theme => ({\r\n    button:{\r\n        margin: theme.spacing(1, 0, 2),\r\n        backgroundColor: 'firebrick'\r\n    },\r\n    header: {\r\n        position:'relative',\r\n        height:'30px'\r\n    },\r\n    toggler :{\r\n        position:'absolute',\r\n        right:'0%',\r\n        height:'30px',\r\n        marginRight:'5px',\r\n        marginTop:'-5px',\r\n        backgroundColor:'rgb(32, 32, 31);',\r\n        fontVariant:'normal'\r\n    },\r\n    stepperRoot:{\r\n        backgroundColor:'black',\r\n        color:'white',\r\n        \"& $completed\": {\r\n            color: \"firebrick\"\r\n        },\r\n        \"& $active\": {\r\n            color: \"firebrick\"\r\n        },\r\n        \"& $disabled\": {\r\n            color: \"blue\"\r\n        }\r\n    },\r\n    step: {\r\n        color:'gray',\r\n        \"& $completed\": {\r\n            color: \"white\"\r\n        },\r\n        \"& $active\": {\r\n            color: \"firebrick\"\r\n        },\r\n        \"& $disabled\": {\r\n            color: \"blue\"\r\n        }\r\n    },\r\n    active: {\r\n        color:'firebrick'\r\n    }, //needed so that the &$active tag works\r\n    completed: {\r\n        color:'firebrick'\r\n    },\r\n    disabled: {\r\n        color:'firebrick'\r\n    },\r\n    stepLabelActiveComplete: {\r\n        color:'gray'\r\n    },\r\n    labelContainer: {\r\n        color:'firebrick',\r\n        \"& $alternativeLabel\": {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    tableCellStyle : {\r\n        backgroundColor:'rgb(32, 32, 31);',\r\n        color:'white'\r\n    },\r\n})\r\n\r\nconst BootstrapButton = withStyles({\r\n    root: {\r\n      boxShadow: 'none',\r\n      textTransform: 'none',\r\n        \r\n      padding: '6px 12px',\r\n     \r\n      '&:hover': {\r\n        boxShadow: 'none',\r\n      },\r\n      '&:focus': {\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n      },\r\n    },\r\n    label :{\r\n        textVariant:\"normal\"\r\n    }\r\n  })(Button);\r\n\r\nclass TrainingPlan3days extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            plan: [],\r\n            selectedWeek: -1,\r\n            logged: false,\r\n            role: \"\",\r\n            id: 0,\r\n            openModal:false,\r\n            modalInitValue:{}\r\n        }\r\n        this.componentRef = React.createRef();\r\n    }\r\n\r\n    async componentDidMount (){\r\n        let token = localStorage.getItem('token');\r\n        const {idFromProps} = this.props\r\n        if (token!==null)\r\n        {\r\n            this.setState({\r\n                logged: true,\r\n                role: jwt_decode(token).role,\r\n                id: idFromProps ?? jwt_decode(token).id\r\n            })\r\n            await this.fetchData();\r\n        }\r\n    }\r\n\r\n    async fetchData ()\r\n    {\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Accept: 'application/json',\r\n                withCredentials: true,\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                'Access-Control-Expose-Headers': '*'\r\n            }\r\n        }\r\n\r\n        await axios.post('api/trainingplan/getplan', 13, config)\r\n        .then ((response) => {\r\n            if(response.headers['newtoken'] !== undefined) {\r\n                localStorage.setItem('token',response.headers['newtoken']);\r\n            }\r\n            let plan = response.data.plan;\r\n            this.setState({\r\n                plan: plan,\r\n                selectedWeek: plan.length-1,\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"error\",error);\r\n        });        \r\n    }\r\n\r\n    changeWeek = (e) =>{\r\n        this.setState({\r\n            selectedWeek: e.target.value-1\r\n        })\r\n    }\r\n\r\n    getStepps = () => {\r\n        let steps = []\r\n        for(let i=1;i<=5;i++){\r\n            steps.push('Tydzień '+i)\r\n        }\r\n\r\n        return steps;\r\n    }\r\n\r\n    handleStep = (index) => () => {\r\n        this.setState({\r\n            selectedWeek:index\r\n        })\r\n    }\r\n\r\n    closeModal = () => {\r\n\t\tthis.setState({\r\n\t\t\topenModal: false,\r\n\t\t\tmodalInitValue: {},\r\n\t\t});\r\n\t}\r\n\r\n\tonClick = (day) => {\r\n        const {plan,selectedWeek} = this.state\r\n\t\tvar data = plan[selectedWeek].exercises.filter(x => x.dayId === day )\r\n        var filtered = data.filter( x => x.weight !== 0 && x.weight !== null)\r\n\r\n        this.setState({\r\n            openModal:true,\r\n            modalInitValue:filtered\r\n        })\r\n\r\n\t}\r\n\r\n    PNGClick = () =>{\r\n        var buttons = document.getElementsByName(\"rateRPEButton\");\r\n        buttons.forEach(element => {\r\n            element.style.visibility = \"hidden\";\r\n        });\r\n        htmlToImage.toPng(document.getElementById('divToPrint'))\r\n        .then(function (dataUrl) {\r\n            //console.log(dataUrl)\r\n            buttons.forEach(element => {\r\n                element.style.visibility = \"visible\";\r\n            });\r\n            download(dataUrl, 'plan.png');\r\n        });\r\n    }\r\n\r\n    PDFClick = () =>{\r\n        var buttons = document.getElementsByName(\"rateRPEButton\");\r\n        buttons.forEach(element => {\r\n            element.style.visibility = \"hidden\";\r\n        });\r\n        const pdfOptions = {\r\n            fileName: 'plan',\r\n            pdfOptions:{\r\n                w: 295,\r\n                h: 208,\r\n                orientation: 'l',\r\n                unit: 'mm'\r\n            }\r\n        }\r\n        exportComponentAsPDF(this.componentRef,pdfOptions)\r\n        .then(()=>{\r\n            buttons.forEach(element => {\r\n                element.style.visibility = \"visible\";\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if( this.state.logged  && this.state.selectedWeek >= 0 )\r\n        {\r\n            const plan = this.state.plan;\r\n            let exerciseList = plan[this.state.selectedWeek].exercises;\r\n\r\n            let eListLength = exerciseList.length;\r\n            let statsArray = new Array(eListLength);\r\n            let emptyField = \"-\";\r\n            for (let i=0; i<eListLength; i++)\r\n                statsArray[i] = new Array(10);\r\n            let i = -1;\r\n            exerciseList.forEach(e => {\r\n                i++;\r\n                statsArray[i][0] = e.dayId;\r\n                statsArray[i][1] = e.excercise.type;\r\n                statsArray[i][2] = e.excercise.excerciseName;\r\n                if (e.excercise.progresMethod!==null)\r\n                    statsArray[i][3] = e.excercise.progresMethod;\r\n                else\r\n                    statsArray[i][3] = emptyField;\r\n                if (e.weight!==null)\r\n                    statsArray[i][4] = e.weight;\r\n                else\r\n                    statsArray[i][4] = emptyField;\r\n                if (e.sets !== null)\r\n                    statsArray[i][5] = e.sets;\r\n                else\r\n                    statsArray[i][5] = e.excercise.sets;\r\n                if (e.reps !== null)\r\n                    statsArray[i][6] = e.reps;\r\n                else\r\n                    statsArray[i][6] = e.excercise.reps;\r\n                statsArray[i][7] = emptyField; //tymczasowo -- tempo\r\n                statsArray[i][8] = emptyField; //tymczasowo -- przerwa\r\n                if (e.comments!==null)\r\n                    statsArray[i][9] = e.comments;\r\n                else\r\n                    statsArray[i][9] = emptyField;\r\n                \r\n            });\r\n            const steps = this.getStepps()\r\n            i = 0;\r\n            const {selectedWeek,openModal,modalInitValue} = this.state\r\n            const {classes } = this.props\r\n            return (\r\n                <ContextConsumer>\r\n                    {\r\n                        language => {\r\n                            return (\r\n                                <div className=\"Forms-div\">\r\n                                    <Dialog\r\n                                        open={openModal}\r\n                                        maxWidth=\"md\"\r\n                                        fullWidth={true}\r\n                                        onBackdropClick={this.closeModal}\r\n                                        onEscapeKeyDown={this.closeModal}\r\n                                    >\r\n                                        <DialogTitle>{language.dictionary.RPERating}</DialogTitle>\r\n                                        <DialogContent>\r\n                                            <RpeForm\r\n                                                closeModalFn = {this.closeModal}\r\n                                                excercises = {modalInitValue}/>\r\n                                        </DialogContent>\r\n                                    </Dialog>\r\n                                    <Grid container justify='center' alignItems='center' spacing={1} style ={{width:'55%',marginTop:'20px',marginLeft:'25%'}}>\r\n                                        <Grid item xs={12}>\r\n                                            <Stepper nonLinear activeStep={selectedWeek} classes={{root:classes.stepperRoot}}  >\r\n                                                {\r\n                                                    steps.map((label,index) => (\r\n                                                        <Step key={label} \r\n                                                            classes={{\r\n                                                                root: classes.step,\r\n                                                                active:classes.stepLabelActiveComplete,\r\n                                                                completed:classes.stepLabelActiveComplete,\r\n                                                            }}>\r\n                                                            <StepButton onClick={plan[index] !==undefined && index < plan.length?this.handleStep(index):null} \r\n                                                                completed={plan[index] !==undefined && index < plan.length -1} \r\n                                                                active={plan[index] !==undefined }\r\n                                                                disabled={index >= plan.length || plan[index] === undefined}>\r\n                                                                    <StepLabel  classes={{\r\n                                                                            label:classes.stepLabelActiveComplete,\r\n                                                                            labelContainer: classes.labelContainer,\r\n                                                                            active: classes.active,\r\n                                                                            disabled: classes.disabled\r\n                                                                        }} StepIconProps={{\r\n                                                                            classes: {\r\n                                                                            root: classes.step,\r\n                                                                            completed: classes.completed,\r\n                                                                            active: classes.active,\r\n                                                                            disabled: classes.disabled\r\n                                                                            }\r\n                                                                        }}>\r\n                                                                        {label}\r\n                                                                        </StepLabel>\r\n\r\n                                                            </StepButton>\r\n                                                        </Step>\r\n                                                        \r\n                                                    ))    \r\n                                                }\r\n                                            </Stepper>\r\n                                        </Grid>\r\n                                        <Grid item xs ={12} >\r\n                                                <table className=\"Forms-table\" id=\"divToPrint\" ref={this.componentRef}>\r\n                                                {/* Day I */}\r\n                                                <tbody className=\"Forms-tbody1\">\r\n                                                    <tr style={{backgroundColor:'firebrick',color:'white'}}>\r\n                                                        <th>{language.dictionary.ExcerciseName}</th>\r\n                                                        <th>{language.dictionary.ProgressionMethod}</th>\r\n                                                        <th>{language.dictionary.Weight2}</th>\r\n                                                        <th>{language.dictionary.Sets}</th>\r\n                                                        <th>{language.dictionary.Reps}</th>\r\n                                                        <th>Tempo</th>\r\n                                                        <th>{language.dictionary.Comments}</th>\r\n                                                    </tr>\r\n                                                    <tr  >\r\n                                                        <th  style={{backgroundColor:'firebrick',color:'white'}} colSpan=\"7\" className={classes.header} >\r\n                                                            {language.dictionary.Day} I\r\n                                                            <BootstrapButton\r\n                                                                name=\"rateRPEButton\"\r\n                                                                variant=\"contained\"\r\n                                                                color=\"secondary\"\r\n                                                                className={classes.toggler}\r\n                                                                onClick={(e) => this.onClick(1)}\r\n                                                                style={{visibility:`${selectedWeek !== plan.length-1?'hidden':'visible'}`}}\r\n                                                            >\r\n                                                                {language.dictionary.RateRPE}\r\n                                                            </BootstrapButton>\r\n                                                        </th>\r\n                                                        \r\n                                                    </tr>\r\n                                                    {statsArray.map((x,key)=>{\r\n                                                        if (x[0]===1)\r\n                                                            {i++;\r\n                                                            return(\r\n                                                                <tr id={\"trday1\"+key} key={\"day1\"+key} className={classes.tableCellStyle} >\r\n                                                                    <td>{x[2]}</td>\r\n                                                                    <td>{x[3]}</td>\r\n                                                                    <td>{x[4]}</td>\r\n                                                                    <td>{x[5]}</td>\r\n                                                                    <td>{x[6]}</td>\r\n                                                                    <td>{x[7]}</td>\r\n                                                                    <td>{x[9]}</td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                            }\r\n                                                        else\r\n                                                            {\r\n                                                            statsArray = statsArray.slice(i);\r\n                                                            i = 0;\r\n                                                            return null;\r\n                                                            }\r\n                                                    })}\r\n                                                </tbody>\r\n                                                {/* Day II */}\r\n                                                <tbody className=\"Forms-tbody2\">\r\n                                                    <tr>\r\n                                                    <th  style={{backgroundColor:'firebrick',color:'white'}} colSpan=\"7\" className={classes.header} >\r\n                                                        {language.dictionary.Day} II\r\n                                                            <BootstrapButton\r\n                                                                name=\"rateRPEButton\"\r\n                                                                variant=\"contained\"\r\n                                                                color=\"secondary\"\r\n                                                                className={classes.toggler}\r\n                                                                onClick={(e) => this.onClick(2)}\r\n                                                                style={{visibility:`${selectedWeek !== plan.length-1?'hidden':'visible'}`}}\r\n                                                            >\r\n                                                                {language.dictionary.RateRPE}\r\n                                                            </BootstrapButton>\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    {statsArray.map((x,key)=>{\r\n                                                        if(x[0]===2)\r\n                                                        {\r\n                                                            i++;\r\n                                                            return(\r\n                                                                <tr id={\"trday2\"+key} key={\"day2\"+key} className={classes.tableCellStyle}>\r\n                                                                    <td>{x[2]}</td>\r\n                                                                    <td>{x[3]}</td>\r\n                                                                    <td>{x[4]}</td>\r\n                                                                    <td>{x[5]}</td>\r\n                                                                    <td>{x[6]}</td>\r\n                                                                    <td>{x[7]}</td>\r\n                                                                    <td>{x[9]}</td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        }\r\n                                                        else \r\n                                                        {\r\n                                                            statsArray = statsArray.slice(i);\r\n                                                            i = 0;\r\n                                                            return null;\r\n                                                        }\r\n                                                    })}\r\n                                                </tbody>\r\n                                                {/* Day III */}\r\n                                                <tbody className=\"Forms-tbody3\">\r\n                                                    <tr>\r\n                                                    <th  style={{backgroundColor:'firebrick',color:'white'}} colSpan=\"7\" className={classes.header} >\r\n                                                        {language.dictionary.Day} III\r\n                                                            <BootstrapButton\r\n                                                                name=\"rateRPEButton\"\r\n                                                                variant=\"contained\"\r\n                                                                color=\"secondary\"\r\n                                                                className={classes.toggler}\r\n                                                                onClick={(e) => this.onClick(3)}\r\n                                                                style={{visibility:`${selectedWeek !== plan.length-1?'hidden':'visible'}`}}\r\n                                                            >\r\n                                                                {language.dictionary.RateRPE}\r\n                                                            </BootstrapButton>\r\n                                                        </th>\r\n                                                    </tr>\r\n                                                    {statsArray.map((x,key)=>{\r\n                                                        if(x[0]===3)\r\n                                                        {\r\n                                                            return(\r\n                                                                <tr id={\"trday3\"+key} key={\"day3\"+key} className={classes.tableCellStyle}>\r\n                                                                    <td>{x[2]}</td>\r\n                                                                    <td>{x[3]}</td>\r\n                                                                    <td>{x[4]}</td>\r\n                                                                    <td>{x[5]}</td>\r\n                                                                    <td>{x[6]}</td>\r\n                                                                    <td>{x[7]}</td>\r\n                                                                    <td>{x[9]}</td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        }\r\n                                                        else return null;\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </table>                                        \r\n                                        </Grid>\r\n                                        <Grid item xs ={12} container justify=\"space-evenly\">\r\n                                            <Button variant=\"contained\"\r\n                                                    color=\"secondary\"\r\n                                                    className={classes.button}  \r\n                                                    onClick={this.PDFClick}>\r\n                                                {language.dictionary.ExportPDF}\r\n                                            </Button>\r\n                                            <Button variant=\"contained\"\r\n                                                    color=\"secondary\"\r\n                                                    className={classes.button}  \r\n                                                    onClick={this.PNGClick}>\r\n                                                {language.dictionary.ExportPNG}\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }\r\n                </ContextConsumer>\r\n            )\r\n        }\r\n        else\r\n            return(\r\n                <ContextConsumer>\r\n                    {\r\n                        language => {\r\n                            return (\r\n                                <div className=\"Forms-div\">\r\n                                    <h1>{language.dictionary.OnlyRegistered}</h1>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }\r\n                </ContextConsumer>\r\n            )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(TrainingPlan3days);","import {useState,useContext} from 'react'\r\nimport {LanguageContext} from '../languages/LanguageContext'\r\nimport Avatar from 'react-avatar-edit'\r\nimport {Button} from '@material-ui/core'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport axios from 'axios'\r\nimport jwt_decode from 'jwt-decode';\r\n\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    submit: {\r\n        margin: theme.spacing(1, 0, 2),\r\n        backgroundColor: 'firebrick'\r\n        \r\n      },\r\n}))\r\n\r\nfunction AvatarForm(props){\r\n//Funkcyjny\r\n    const {image, closeModalFn} = props\r\n    const [localImage,setLocalImage] = useState(image)\r\n    const context = useContext(LanguageContext)\r\n      \r\n    const onCrop = (preview) =>  {\r\n        setLocalImage(preview)\r\n      }\r\n\r\n    const onClick =() => {\r\n        closeModalFn(localImage)\r\n\r\n        const token = localStorage.getItem('token')\r\n        if(token === null || token === undefined) {\r\n            return\r\n        }\r\n        const decode = jwt_decode(token)\r\n        const {id} = decode\r\n        const body = {\r\n            userId:id,\r\n            image: localImage\r\n        }\r\n        const config = {\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n            },\r\n          };\r\n          \r\n        axios.post('api/auth/addphoto',body,config)\r\n        .then(response => {\r\n            console.log(response)\r\n            window.location.reload(false)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const classes = useStyle()\r\n    return (\r\n        <div>\r\n            <Avatar\r\n                width='auto'\r\n                height={295}\r\n                onCrop={onCrop}\r\n                src={localImage}\r\n            />\r\n            <Button\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      className={classes.submit}\r\n                      onClick={(e) => onClick()}\r\n                    >\r\n                        {context.dictionary.Save}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvatarForm","import React,{Component} from 'react'\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport {Redirect} from 'react-router-dom'\r\nimport '../Styles/Forms.css';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\nimport AvatarForm from './AvatarForm';\r\nimport jwtDecode from 'jwt-decode';\r\nimport axios from \"axios\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  TextField,\r\n  Button,\r\n  Fab,\r\n  Avatar,\r\n  Grid\r\n} from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n      marginTop: theme.spacing(0),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      backgroundColor:'black'\r\n      \r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(1, 0, 2),\r\n      backgroundColor: 'firebrick'\r\n      \r\n    },\r\n    formPosition: {\r\n      position: 'relative',\r\n      width: '30%',\r\n      height: '40%',\r\n      top:'30%',\r\n      left: '35%',\r\n      backgroundColor:'black',\r\n      padding:'0px 20px 20px 20px'\r\n    }, \r\n    formElements: {\r\n        backgroundColor:'white',\r\n        borderRadius: '5px',\r\n    },\r\n    large: {\r\n      width: theme.spacing(15),\r\n      height: theme.spacing(15),\r\n      left:'35%',\r\n      marginTop:'10px',\r\n      position:'absolute',\r\n    },\r\n    container: {\r\n      display:'flex',\r\n      position:'relative',\r\n      marginBottom:'20vh',\r\n      marginLeft:'2vw'\r\n    },\r\n    toggler:{\r\n      position:'absolute',\r\n      left:'30%',\r\n      opacity:'0.8'\r\n    }\r\n\r\n  });\r\n\r\nclass EditUserData extends  Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //TODO dodac state\r\n            login:\"\",\r\n            password:\"\",\r\n            repeatedPassword: \"\",\r\n            areDetailsVisible:false,\r\n            errorMessage:'',\r\n            src:'',\r\n            image:null,\r\n            openModal : false,\r\n            readOnly: false,//,\r\n            logged:false\r\n        };\r\n    }\r\n\r\n    onChange = (e) =>{\r\n\r\n        this.setState((prevstate)=>{\r\n          let state = prevstate;  \r\n          \r\n          state.data[e.target.id] = e.target.value;\r\n          return {state};\r\n        })\r\n\r\n    }\r\n    \r\n    handleUploadClick = (e) => {\r\n      var file = e.target.files[0]\r\n      let reader = new FileReader()\r\n      reader.onloadend = () => {\r\n        this.setState({\r\n          image: reader.result,\r\n          openModal:true\r\n        })\r\n      }\r\n      reader.readAsDataURL(file)\r\n    }\r\n    loadData=()=>{\r\n      const config = {\r\n          headers: {\r\n              'Content-type': 'application/json',\r\n              Accept: 'application/json',\r\n              withCredentials: true,\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n              'Access-Control-Expose-Headers': '*'\r\n          }\r\n      }\r\n      let encrypted = localStorage.getItem('token');\r\n      if(encrypted === null || undefined)\r\n      {\r\n        this.setState({\r\n          logged:true\r\n        })\r\n      }\r\n      let token = jwtDecode(encrypted);\r\n      \r\n      axios.get('api/auth/getBasicData/'+token.id,config)\r\n      .then( x => {\r\n          // set new token to refresh expire time\r\n         // localStorage.setItem('token',x.headers['newtoken'])\r\n          console.log('getpersonalTrainingData',x.data);\r\n          this.setState((prevstate)=>\r\n          {\r\n            let state = prevstate;\r\n            state.data = x.data;\r\n            return {state};\r\n          })\r\n      })\r\n      .catch(error=>console.log(error));\r\n  }\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n  sendForm=async ()=>{\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Accept: 'application/json',\r\n            withCredentials: true,\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            'Access-Control-Expose-Headers': '*'\r\n        }\r\n    }\r\n   // let json = JSON.parse(this.state.data);\r\n   // console.log(\"json\",json);\r\n    let data = this.state.data;\r\n    let dto = \r\n    {\r\n        \"Id\": jwtDecode(localStorage.getItem('token')).id,\r\n        \"FirstName\":data.firstName,\r\n        \"LastName\":data.lastName,\r\n        \"Email\":data.email\r\n    }\r\n    let str = JSON.stringify(dto);\r\n    \r\n    await axios.put('api/auth/editBasicData/',dto,config)\r\n    .then( x => {\r\n        console.log(\"udalo sie wyslac dane\");\r\n        this.setState(prevstate=>\r\n            {\r\n                let state = prevstate;\r\n                state.successmsg=\"wysłano nowe dane\";\r\n                return {state};\r\n            });\r\n    })\r\n    .catch(\r\n        (error)=>\r\n        {\r\n            this.setState(prevstate=>\r\n            {\r\n                //console.log(\"i am in setstate error\");\r\n                let state = prevstate;\r\n                state.errormsg=\"błąd\";\r\n                return {state};\r\n            });\r\n            console.log(error);    \r\n        }\r\n    );\r\n}\r\n\r\n    closeModal = (photo = null) => {\r\n      if(photo!==null) {\r\n        this.setState({\r\n          openModal:false,\r\n          image:photo\r\n        })\r\n      } \r\n      else {\r\n        this.setState({\r\n          openModal:false\r\n        })\r\n      }\r\n\r\n    }\r\n    sendClick=()=>\r\n    {\r\n      this.sendForm();\r\n    }\r\n    render () {\r\n      \r\n        const {classes} = this.props\r\n        const {image,openModal, logged} = this.state;\r\n        const userData = this.state?.data;\r\n        console.log(image)\r\n        if(logged === true) {\r\n          return (\r\n            <Redirect to=\"/login\" />\r\n          )\r\n        }\r\n        return (\r\n          <ContextConsumer>\r\n            {\r\n              language => {\r\n                return (\r\n                  <div className={classes.formPosition}>\r\n                  <Dialog\r\n                    open={openModal}\r\n                    maxWidth=\"sm\"\r\n                    fullWidth={true}\r\n                    onBackdropClick={this.closeModal}\r\n                    onEscapeKeyDown={this.closeModal}\r\n                  >\r\n                  <DialogContent>\r\n                    <AvatarForm\r\n                      closeModalFn={this.closeModal}\r\n                      image = {image}\r\n                    />\r\n                  </DialogContent>\r\n                </Dialog>\r\n\r\n            <div className={classes.paper}>\r\n          \r\n              <form className={classes.form} noValidate>\r\n                <Grid container spacing={0} justify='center' alignItems='center' >\r\n                    <Grid item xs={12} >\r\n                      <div className={classes.container}>\r\n                        <Avatar src={/*image === null && openModal===false ?\"../Assets/person.png\":image*/userData?.photo||\"../Assets/person.png\"} className={classes.large} ></Avatar>\r\n                        <div className={classes.toggler}>\r\n                          <input\r\n                              accept=\"image/*\"\r\n                              className={classes.input}\r\n                              id=\"contained-button-file\"\r\n                              type=\"file\"\r\n                              onChange={this.handleUploadClick}\r\n                              hidden\r\n                              value ={openModal === false?'':''}\r\n                            />\r\n                          \r\n                          <label htmlFor=\"contained-button-file\">\r\n                            <Fab component=\"span\" className={classes.button}>\r\n                              <AddPhotoAlternateIcon />\r\n                            </Fab>\r\n                          </label>\r\n                        </div>\r\n                        \r\n                      </div>\r\n                          \r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant='filled'\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"name\"\r\n                    value={userData?.firstName||\"\"}\r\n                    label={language.dictionary.Name}\r\n                    autoFocus\r\n                    disabled={this.state.readOnly}\r\n                    className={classes.formElements}\r\n                    onChange = {(e) => this.onChange(e)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant='filled'\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"surname\"\r\n                    value={userData?.lastName||\"\"}\r\n                    label={language.dictionary.Surname}\r\n                    autoFocus\r\n                    disabled={this.state.readOnly}\r\n                    className={classes.formElements}\r\n                    onChange = {(e) => this.onChange(e)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant='filled'\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    value={userData?.email||\"\"}\r\n                    label=\"Email\"\r\n                    autoFocus\r\n                    disabled={this.state.readOnly}\r\n                    className={classes.formElements}\r\n                    onChange = {(e) => this.onChange(e)}\r\n                  />\r\n                </Grid>\r\n                 <Grid item xs={12}>\r\n                    <TextField\r\n                      variant='filled'\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"login\"\r\n                      value={userData?.name||\"\"}\r\n                      label={language.dictionary.UserName}\r\n                      autoFocus\r\n                      disabled\r\n                      className={classes.formElements}\r\n                      onChange = {(e) => this.onChange(e)}\r\n                    />\r\n                 </Grid>\r\n                  <Grid>\r\n                  <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    disabled={this.state.readOnly}\r\n                    className={classes.submit}\r\n                    onClick={(e) => this.sendClick()}\r\n                  >\r\n                    {language.dictionary.Edit}\r\n                  </Button>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n        </div>\r\n                )\r\n              }\r\n            }\r\n          </ContextConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles,{withTheme:true})(EditUserData);","import {useState, useContext,useEffect} from 'react';\r\nimport {LanguageContext} from '../languages/LanguageContext'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport {CgGym} from 'react-icons/cg'\r\nimport {GiSkeleton} from 'react-icons/gi'\r\nimport PersonalData from './PersonalData'\r\nimport EditUserData from './EditUserData'\r\nimport PersonalTrainingData from './PersonalTrainingData'\r\nimport PropTypes from 'prop-types';\r\nimport jwtDecode from 'jwt-decode';\r\nimport axios from \"axios\";\r\nimport {\r\n    Tab ,\r\n    Tabs,\r\n    Paper,\r\n    Box,\r\n    Typography } from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor:'black',\r\n        marginTop:'20px'\r\n    },\r\n    tabItem: {\r\n        // backgroundColor:'firebrick',\r\n        color:'white'\r\n    },\r\n    IconStyle: {\r\n        width:'25px',\r\n        height:'25px'\r\n    },\r\n    content: {\r\n        marginTop:'30px',\r\n        backgroundColor:'black'\r\n    }\r\n    }));\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    \r\n    return (\r\n        <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n        >\r\n        {value === index && (\r\n            <Box p={3} >\r\n                <Typography style={{color:'white',backgroundColor:'black'}}>{children}</Typography>\r\n            </Box>\r\n        )}\r\n        </div>\r\n    );\r\n    }\r\n    \r\n    TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n    };\r\n\r\nconst SettingsTrainer = (props) => {\r\n//Funkcyjny\r\n    const context = useContext(LanguageContext)\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = useState(0);\r\n\r\n    function a11yProps(index) {\r\n        return {\r\n          id: `full-width-tab-${index}`,\r\n          'aria-controls': `full-width-tabpanel-${index}`,\r\n        };\r\n      }\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n      };\r\n   \r\n    return (\r\n        <div>\r\n             <Paper className={classes.root}>\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"secondary\"\r\n                    textColor=\"secondary\"\r\n                    centered\r\n\r\n                >\r\n                    <Tab icon={<AccountCircleIcon className={classes.IconStyle }/>} label={context.dictionary.PersonalData} className={classes.tabItem} {...a11yProps(0)}  />\r\n                    \r\n                </Tabs>\r\n                </Paper>\r\n                <div className={classes.content}>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'black'}} >\r\n                        <EditUserData/>\r\n                    </TabPanel>\r\n                    \r\n                </div>                \r\n        </div>        \r\n      );\r\n}\r\n\r\nexport default SettingsTrainer;","import React, { useContext } from 'react';\r\nimport { languageOptions } from './LanguageOptions';\r\nimport { LanguageContext } from './LanguageContext';\r\nimport Flag from 'react-flagkit'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    list__navbar__element:{\r\n        marginLeft: '5px',\r\n        backgroundColor: 'rgb(32, 32, 31)'\r\n    },\r\n    inlineAnchor : {\r\n        verticalAlign: 'middle',\r\n        marginLeft: '10px',\r\n        backgroundColor: 'rgb(32, 32, 31)',\r\n        cursor:'pointer'\r\n    }\r\n\r\n}))\r\nconst  LanguageSelector = () =>  {\r\n\r\n  const { userLanguage, userLanguageChange } = useContext(LanguageContext);\r\n\r\n  // set selected language by calling context method\r\n  const handleLanguageChange = e => {\r\n      const splitted = e.target.alt.split(' ')\r\n      userLanguageChange(splitted[0])\r\n    };\r\n\r\n\r\n  const classes = useStyle()\r\n  return (\r\n    <li className={classes.list__navbar__element}>\r\n        <Flag\r\n            country=\"GB\"\r\n            className={classes.inlineAnchor}\r\n            role=\"button\"\r\n            onClick={handleLanguageChange}\r\n        />\r\n        <Flag\r\n            country=\"PL\"\r\n            role=\"button\"\r\n            className={classes.inlineAnchor}\r\n            onClick={handleLanguageChange}\r\n        />\r\n    </li>\r\n)\r\n}\r\n\r\nexport default LanguageSelector","import React, { Component } from \"react\";\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport PersonAdd from '@material-ui/icons/PersonAdd';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport '../Styles/Header.css'\r\nimport LanguageSelector from '../languages/LanguageSelector'\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    // static contextType = LanguageContext\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    \r\n    logOut = () => {\r\n        localStorage.removeItem('token');\r\n        window.location.replace(\"/\");\r\n      }\r\n\r\n    isTokenExist = () => {\r\n        const token = localStorage.getItem('token')\r\n        return token !== null\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ContextConsumer>\r\n                {\r\n                    language => {\r\n                        console.log(language)\r\n                        return (\r\n                            <div className=\"headerContent\">\r\n                            <a href=\"/\" className=\"logo\">\r\n                                <img alt=\"Strona Główna\" src=\"https://podsztanga.pl/wp-content/themes/storefront/assets/img/logo-home.png\" height=\"30px\"></img>\r\n                            </a>\r\n                            <div className=\"account_Elements\">\r\n                                {\r\n                                    !this.isTokenExist()? \r\n                                    (\r\n                                        <ul className=\"list__navbar\">\r\n                                            <li className=\"list__navbar__element\"> \r\n                                                <a href=\"/login\">\r\n                                                    <div className=\"inlineAnchor\">\r\n                                                        <PersonIcon className=\"ico\"></PersonIcon>\r\n                                                        <p className=\"anchorInfo\">{language.dictionary.SignIn}</p>\r\n                                                    </div>\r\n                                                </a>\r\n                                            </li>\r\n                                            <li className=\"list__navbar__element\">\r\n                                                <a href=\"/registration\">\r\n                                                    <div className=\"inlineAnchor\">\r\n                                                        <PersonAdd className=\"ico\"/>\r\n                                                        <p className=\"anchorInfo\">{language.dictionary.Register}</p>\r\n                                                    </div>\r\n                                                </a>\r\n                                            </li>\r\n                                            <LanguageSelector/>\r\n                                        </ul>\r\n                                    )\r\n                                    :(\r\n                                        <ul className=\"list__navbar\">\r\n                                            <li className=\"list__navbar__element\">\r\n                                                <div className=\"logOut_button inlineAnchor\" onClick={this.logOut}>\r\n                                                    <ExitToAppIcon className=\"ico\"/>\r\n                                                    <p className=\"anchorInfo\">{language.dictionary.SignOut}</p>\r\n                                                </div>\r\n                                            </li>\r\n                                            <LanguageSelector/>\r\n                                        </ul>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>                    \r\n                        )\r\n                    }\r\n                }\r\n            </ContextConsumer>\r\n        )\r\n    }\r\n}\r\n// Header.contextType = LanguageContext\r\nexport default Header;","import {useContext, useState, useEffect} from 'react'\r\nimport {makeStyles} from '@material-ui/core'\r\nimport {LanguageContext} from '../languages/LanguageContext'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nimport jwt_decode from 'jwt-decode';\r\n// import { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Grid,\r\n    Button, \r\n    Avatar,\r\n    Typography} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formPosition: {\r\n        position: 'absolute',\r\n        width: '10%',\r\n        height: '90%',\r\n        bottom:'0%',\r\n        top: 45,\r\n        borderTop: '1px solid black',\r\n        backgroundColor:'rgb(32, 32, 31);',\r\n        padding:'0px 20px 20px 20px',\r\n      },  \r\n      submit: {\r\n        margin: '10px 0px 2px 0px',\r\n        backgroundColor: 'firebrick',\r\n        \"&:focus\": {\r\n            color: \"red\"\r\n          }\r\n      },\r\n      root:{\r\n            \r\n      },    \r\n      large: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n        left:'30%',\r\n        marginTop:'10px'\r\n      },\r\n}))\r\n\r\nconst Navbar = () => {\r\n//Funkcyjny\r\n\r\n    const [avatar, setAvatar] = useState('../Assets/person.png')\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await axios.get('http://localhost:5000/api/Auth/getPhoto/' +\r\n                                            jwt_decode(localStorage.getItem('token')).id);\r\n            setAvatar(result.data);\r\n        };\r\n        if(localStorage.getItem('token')) \r\n            fetchData()\r\n    });\r\n\r\n    const context = useContext(LanguageContext)\r\n    const classes = useStyles()\r\n\r\n    var token = localStorage.getItem('token')\r\n    if(token === null) {\r\n        return (\r\n            <div className={classes.root}></div>\r\n        )\r\n    }\r\n    const decode = jwt_decode(token);\r\n    const {role ,name , surname} = decode\r\n\r\n    return (\r\n        <div className={classes.formPosition} >\r\n            {\r\n                role === 'none'?\r\n                <div></div>:\r\n                role === 'user'?\r\n                    <Grid container spacing={2} justify='center' alignItems='center' className={classes.root}>\r\n                        <Grid item xs={12}>\r\n                            <Avatar src={avatar} className={classes.large} ></Avatar>\r\n                           \r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <p  style={{color:'white',padding:'0px',marginTop:'5px',top:'50%'}} >\r\n                                {(name ==='' || name === undefined?context.dictionary.Name:name) + ' ' +(surname==='' || surname === undefined?context.dictionary.Surname:surname)}{}\r\n                            </p>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Link to=\"/trainingplan/3days/user\">\r\n                                <Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    {context.dictionary.TrainingPlan}\r\n                                </Button>\r\n                            </Link>                            \r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Link to=\"/notifications\">\r\n                                <Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    className={classes.submit}\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    {context.dictionary.Notifications}\r\n                                </Button>\r\n                            </Link>                      \r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Link to=\"/Settings\">\r\n                                <Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.submit}\r\n\r\n                                >\r\n                                    {context.dictionary.Settings}\r\n                                </Button>\r\n                            </Link>                            \r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Link to=\"/trainingplan/3days/user\">\r\n                                <Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    {context.dictionary.Progress}\r\n                                </Button>\r\n                            </Link>                       \r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Link to=\"/trainingplan/3days/user\">\r\n                                <Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    {context.dictionary.Polls}\r\n                                </Button>\r\n                            </Link>                            \r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Link to=\"/passwordchange\">\r\n                                <Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    {context.dictionary.ResetPassword}\r\n                                </Button>\r\n                            </Link>                         \r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    <Grid container spacing={2} justify='center' alignItems='center' className={classes.root}>\r\n                    <Grid item xs={12}>\r\n                        <Avatar src={avatar} className={classes.large} ></Avatar>\r\n                       \r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        <p  style={{color:'white',padding:'0px',marginTop:'5px'}} >\r\n                            {(name ==='' || name === undefined?context.dictionary.Name:name) + ' ' +(surname==='' || surname === undefined?context.dictionary.Surname:surname)}{}\r\n                        </p>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Link to=\"/pupils\">\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                {context.dictionary.Proteges}\r\n                            </Button>\r\n                        </Link>                          \r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Link to=\"/notifications\">\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                className={classes.submit}\r\n                                color=\"secondary\"\r\n                            >\r\n                                {context.dictionary.Notifications}\r\n                            </Button>\r\n                        </Link>                        \r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Link to=\"/SettingsTrainer\">\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className={classes.submit}\r\n\r\n                            >\r\n                                {context.dictionary.Settings}\r\n                            </Button>\r\n                        </Link>                          \r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Link to=\"/excerciseList\">\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                {context.dictionary.ExcerciseDataBase}\r\n                            </Button>\r\n                        </Link>                       \r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Link to=\"/passwordchange\">\r\n                            <Button\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                {context.dictionary.ResetPassword}\r\n                            </Button>\r\n                        </Link>                        \r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useState, useEffect, useContext } from 'react';\r\nimport {LanguageContext} from '../languages/LanguageContext'\r\nimport axios from \"axios\";\r\nimport jwt_decode from 'jwt-decode';\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport { makeStyles,withStyles } from \"@material-ui/core/styles\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {GiMuscleUp} from 'react-icons/gi'\r\nimport { AiOutlineLineChart} from 'react-icons/ai';\r\nimport {FaHammer} from 'react-icons/fa'\r\nimport {BsTable} from 'react-icons/bs'\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport {StyledPagination, StyledPaginationItem} from '../Components/StyledComponents';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Grid,\r\n    Button,\r\n    \r\n    ButtonGroup,\r\n    ClickAwayListener,\r\n    Grow,\r\n    Paper,\r\n    Popper,\r\n    MenuItem,\r\n    MenuList,\r\n    Typography,\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    Avatar,\r\n    Box\r\n    } from '@material-ui/core'\r\n\r\n    const styles = makeStyles ((theme) => (\r\n    {\r\n      heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '45.33%',\r\n        flexShrink: 1,\r\n        marginLeft:'5px'\r\n      },\r\n      submit: {\r\n        margin: '10px 0px 2px 0px',\r\n        backgroundColor: 'firebrick',\r\n      },\r\n      formPosition: {\r\n        position:'fixed',\r\n        width: '35vw',\r\n        height: '40vh',\r\n        left: '35%',\r\n        top:'10%',\r\n        marginBottom: '10%',\r\n        backgroundColor:'black',\r\n        padding:'0px 20px 20px 20px',\r\n      }, \r\n      formElements: {\r\n          backgroundColor:'white',\r\n          borderRadius: '5px',\r\n          minWidth:'20%',\r\n          display:'flex',\r\n          \r\n      },\r\n      pupilElement: {\r\n          backgroundColor: 'rgb(32, 32, 31);'\r\n      },\r\n      small: {\r\n        width: theme.spacing(3.5),\r\n        height: theme.spacing(3.5),\r\n      },\r\n      expandedAcordionDetails: {\r\n          marginTop:'0px',\r\n          padding:'0px'\r\n      },\r\n      rootAcordionDetails: {\r\n          marginTop:'0px',\r\n          padding:'0px 15px 5px 15px'\r\n      },\r\n      rootAcordionSummary: {\r\n          marginBottom:'0px'\r\n      },\r\n      contentAcordionSummary: {\r\n          margin:'10px'\r\n      }\r\n    }\r\n    ))\r\n    \r\n    const StyledTypography = withStyles({\r\n        root:{\r\n            minWidth:'100px',\r\n            marginTop:'3px'\r\n        }\r\n    })(Typography)\r\n\r\n    const filterOptions = ['NOWE','KONIEC PLANU',];\r\n    const sortOptions = ['ALFABETYCZNIE [A-Z]','ALFABETYCZNIE [Z-A]']\r\n\r\nconst  Pupils = () =>  {\r\n    //Funkcyjny\r\n    const context = useContext(LanguageContext)\r\n    const [filterOpen, setfilterOpen] = React.useState(false);\r\n    const filterAnchorRef = React.useRef(null);\r\n    const [filterSelectedIndex, setfilterSelectedIndex] = React.useState(-1);\r\n    const [sortOpen, setSortOpen] = React.useState(false);\r\n    const sortAnchorRef = React.useRef(null);\r\n    const [sortSelectedIndex, setSortSelectedIndex] = React.useState(-1);\r\n    const [searchValue,setSearchValue] = React.useState('')\r\n    const [expanded,setExpanded] = React.useState(false)\r\n    const [usersx, setUsers] = useState([]);\r\n    const [modifiedUsers, setmUsers] = useState([]);\r\n\r\n    let users = [\r\n        {\r\n            id: 13,\r\n            firstName: \"plan\", \r\n            lastName: \"treningowy\", \r\n            mikrocykl: 2\r\n        },{\r\n            id: 12,\r\n            firstName: \"plan1\", \r\n            lastName: \"treningowy1\", \r\n            mikrocykl: 1\r\n        },{\r\n            id: 11,\r\n            firstName: \"adam\", \r\n            lastName: \"testowy\", \r\n            mikrocykl: 1\r\n        },{\r\n            id: 15,\r\n            firstName: \"zenek\", \r\n            lastName: \"arbuz\", \r\n            mikrocykl: 4\r\n        },{\r\n            id: 16,\r\n            firstName: \"krzysiek\", \r\n            lastName: \"rataj\", \r\n            mikrocykl: 3\r\n        }\r\n    ];\r\n\r\n    const [pageUsers,setPage] = React.useState(users.slice(0,3));\r\n    const [pageSize,setSize]=React.useState(4);\r\n    const [pageNR,setPageNR]=React.useState(1);\r\n    const [pageCount,setPageCount] = React.useState(Math.ceil(users.length/pageSize));\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    Accept: 'application/json',\r\n                    withCredentials: true,\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                    'Access-Control-Expose-Headers': '*'\r\n                }\r\n            }\r\n            const result = \r\n                await axios.get('http://localhost:5000/api/trainers/getUsers/' + \r\n                                jwt_decode(localStorage.getItem('token')).id,\r\n                                config);\r\n            localStorage.setItem('token',result.headers['newtoken'])\r\n            console.log('response',result.data.pupils); //coś\r\n            setmUsers(users);\r\n            //setmUsers(result.data.pupils);\r\n            //setUsers(result.data.pupils);\r\n            //setPage(result.data.pupils.slice(0,3));\r\n            //setPageCount(Math.ceil(result.data.pupils.length/pageSize));\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const SortByPropAscending = (prop) =>{    \r\n        return function(a, b) {    \r\n            if (a[prop] > b[prop]) {    \r\n                return 1;    \r\n            } else if (a[prop] < b[prop]) {    \r\n                return -1;    \r\n            }    \r\n            return 0;    \r\n        }    \r\n    }\r\n    \r\n    const SortByPropDescending = (prop) =>{    \r\n        return function(a, b) {    \r\n            if (a[prop] < b[prop]) {    \r\n                return 1;    \r\n            } else if (a[prop] > b[prop]) {    \r\n                return -1;    \r\n            }    \r\n            return 0;    \r\n        }    \r\n    }\r\n\r\n    const handleFilterClick = () => {\r\n        console.info(`You clicked ${filterOptions[filterSelectedIndex]}`);\r\n    };\r\n\r\n    const handleMenuFilterClick = (event, index) => {\r\n        setfilterSelectedIndex(index);\r\n        console.log(filterOptions[index])\r\n        setfilterOpen(false);\r\n\r\n        var filteredUsers =[];\r\n        switch(index){\r\n            case 0:\r\n                console.log('poczatek');\r\n                filteredUsers = users.filter((x)=>{return x.mikrocykl === 1});\r\n                break;\r\n            case 1:\r\n                console.log('koniec');\r\n                filteredUsers = users.filter((x)=>{return x.mikrocykl === 4});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        console.log(filteredUsers);\r\n        setmUsers(filteredUsers);\r\n        setPage(filteredUsers.slice(0,3));\r\n        setPageCount(Math.ceil(filteredUsers.length/pageSize));\r\n    };\r\n\r\n    const handleFilterToogle = () => {\r\n        console.log(filterOpen)\r\n        setfilterOpen((prevfilterOpen) => !prevfilterOpen);\r\n    };\r\n\r\n    const handleFilterClose = (event) => {\r\n        if (filterAnchorRef.current && filterAnchorRef.current.contains(event.target)) {\r\n        return;\r\n        }\r\n\r\n        setfilterOpen(false);\r\n    };\r\n\r\n    const handleSortClick = () => {\r\n        console.info(`You clicked ${sortOptions[sortSelectedIndex]}`);\r\n    };\r\n\r\n    const handleMenuSortClick = (event, index) => {\r\n        setSortSelectedIndex(index);\r\n        console.log(filterOptions[index])\r\n        setSortOpen(false);\r\n\r\n        var sortedUsers =[];\r\n        switch(index){\r\n            case 0:\r\n                console.log('a-z');\r\n                sortedUsers = modifiedUsers.sort(SortByPropAscending(\"lastName\"));\r\n                break;\r\n            case 1:\r\n                console.log('z-a');\r\n                sortedUsers = modifiedUsers.sort(SortByPropDescending(\"lastName\"));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        console.log(sortedUsers);\r\n        setmUsers(sortedUsers);\r\n        setPage(sortedUsers.slice(0,3));\r\n        setPageCount(Math.ceil(sortedUsers.length/pageSize));\r\n    };\r\n\r\n    const handleSortToogle = () => {\r\n        setSortOpen((prevSortOpen) => !prevSortOpen);\r\n    };\r\n\r\n    const handleSortClose = (event) => {\r\n        if (sortAnchorRef.current && sortAnchorRef.current.contains(event.target)) {\r\n        return;\r\n        }\r\n\r\n        setSortOpen(false);\r\n    };\r\n    \r\n    const resetFilters = () => {\r\n        setfilterSelectedIndex(-1);\r\n        setSortSelectedIndex(-1);\r\n        setmUsers(users);\r\n        setPage(users.slice(0,3));\r\n        setPageCount(Math.ceil(users.length/pageSize));\r\n    }\r\n\r\n    const handleExpandChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const getRomanNumber=(number) => {\r\n        if(number === undefined || isNaN(number)) {\r\n            return '0'\r\n        }\r\n        if(number ===1) {\r\n            return 'I'\r\n        }\r\n        else if(number ===2) {\r\n            return 'II'\r\n        }\r\n        else if(number ===3) {\r\n            return 'III'\r\n        }\r\n        else if(number ===4) {\r\n            return 'IV'\r\n        }\r\n        else if(number ===5) {\r\n            return 'V'\r\n        }\r\n    }\r\n\r\n    const PaginationFun=(e,page)=>\r\n      {\r\n        let pageUserslocal=modifiedUsers.slice((page-1)*pageSize,page*pageSize);\r\n        //e.currentTarget.value=page;\r\n        setPage(pageUserslocal);\r\n        setPageNR(page);\r\n        console.log(pageUsers);\r\n    }\r\n\r\n    const Search=()=> {\r\n        \r\n    }\r\n        const classes = styles()\r\n        return (\r\n            <div className={classes.formPosition}>\r\n                    <Grid container  spacing={1}  justify='space-evenly' alignItems='center'  >\r\n                        <Grid item xs={12} >\r\n                                <SearchBar\r\n                                        value={searchValue}\r\n                                        onChange={(newValue) => setSearchValue(newValue)}\r\n                                        onRequestSearch={() => Search()}\r\n                                    />\r\n                        </Grid>\r\n                        <Grid item xs={4} style={{ zIndex:'1' }} >\r\n                            <ButtonGroup variant=\"contained\" color=\"secondary\" ref={filterAnchorRef} aria-label=\"split button\" >\r\n                            <Button color='secondary' onClick={handleFilterClick} className={classes.submit} >{filterSelectedIndex ===-1?context.dictionary.Filter: filterOptions[filterSelectedIndex]}</Button>\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                size=\"small\"\r\n                                aria-controls={filterOpen ? 'split-button-menu' : undefined}\r\n                                aria-expanded={filterOpen ? 'true' : undefined}\r\n                                aria-label={context.dictionary.Filter}\r\n                                aria-haspopup=\"menu\"\r\n                                onClick={handleFilterToogle}\r\n                                className={classes.submit}\r\n                            >\r\n                                <ArrowDropDownIcon />\r\n                            </Button>\r\n                            </ButtonGroup>\r\n                            <Popper open={filterOpen} anchorEl={filterAnchorRef.current} role={undefined} transition disablePortal style={{color:'firebrick'}}>\r\n                                    {({ TransitionProps, placement }) => (\r\n                                <Grow\r\n                                {...TransitionProps}\r\n                                style={{\r\n                                    transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                }}\r\n                                >\r\n                                <Paper>\r\n                                    <ClickAwayListener onClickAway={handleFilterClose}>\r\n                                    <MenuList id=\"split-button-menu\" style={{backgroundColor:'firebrick',minWidth:'100px'}}>\r\n                                        {filterOptions.map((option, index) => (\r\n                                        <MenuItem\r\n                                            key={option}\r\n                                            style={{backgroundColor:'firebrick',color:'white'}}\r\n                                            selected={index === filterSelectedIndex}\r\n                                            onClick={(event) => handleMenuFilterClick(event, index)}\r\n                                            >\r\n                                            {option}\r\n                                        </MenuItem>\r\n                                        ))}\r\n                                    </MenuList>\r\n                                    </ClickAwayListener>\r\n                                </Paper>\r\n                                </Grow>\r\n                            )}\r\n                            </Popper>\r\n                        </Grid> \r\n                        <Grid item xs={5} style={{ zIndex:'1' }} >\r\n                            <ButtonGroup variant=\"contained\" color=\"secondary\" ref={sortAnchorRef} aria-label=\"split button\" >\r\n                            <Button color='secondary' onClick={handleSortClick} className={classes.submit} >{sortSelectedIndex ===-1?context.dictionary.Sort: sortOptions[sortSelectedIndex]}</Button>\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                size=\"small\"\r\n                                aria-controls={sortOpen ? 'split-button-menu' : undefined}\r\n                                aria-expanded={sortOpen ? 'true' : undefined}\r\n                                aria-label={context.dictionary.Sort}\r\n                                aria-haspopup=\"menu\"\r\n                                onClick={handleSortToogle}\r\n                                className={classes.submit}\r\n                            >\r\n                                <ArrowDropDownIcon />\r\n                            </Button>\r\n                            </ButtonGroup>\r\n                            <Popper open={sortOpen} anchorEl={sortAnchorRef.current} role={undefined} transition disablePortal style={{backgroundColor:'firebrick'}}>\r\n                                    {({ TransitionProps, placement }) => (\r\n                                <Grow\r\n                                {...TransitionProps}\r\n                                style={{\r\n                                    transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                }}\r\n                                >\r\n                                <Paper>\r\n                                    <ClickAwayListener onClickAway={handleSortClose}>\r\n                                    <MenuList id=\"split-button-menu\" style={{backgroundColor:'firebrick',minWidth:'100px'}}>\r\n                                        {sortOptions.map((option, index) => (\r\n                                        <MenuItem\r\n                                            key={option}\r\n                                            style={{backgroundColor:'firebrick',color:'white'}}\r\n                                            selected={index === sortSelectedIndex}\r\n                                            onClick={(event) => handleMenuSortClick(event, index)}\r\n                                            >\r\n                                            {option}\r\n                                        </MenuItem>\r\n                                        ))}\r\n                                    </MenuList>\r\n                                    </ClickAwayListener>\r\n                                </Paper>\r\n                                </Grow>\r\n                            )}\r\n                            </Popper>\r\n                        </Grid> \r\n                        <Grid item xs={3} style={{ zIndex:'1' }}>\r\n                            <Button className={classes.submit} color='secondary' variant='contained' fullWidth onClick={() => resetFilters()}>\r\n                                {context.dictionary.RemoveFilters}\r\n                            </Button>\r\n                        </Grid>                             \r\n                    </Grid>\r\n                    <Grid container justify = \"center\" >\r\n                        <StyledPagination count={pageCount} showFirstButton showLastButton defaultPage={1} page={pageNR} \r\n                            onChange={(e,page)=>PaginationFun(e,page)}\r\n                            renderItem={(item)=> \r\n                                <StyledPaginationItem {...item}/>}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    <Grid  container spacing ={1} justify='space-evenly' alignItems='center' style ={{minWidth: '250px',marginTop:'25px'}} >\r\n                        {/* TODO Mapowanie listy uzytkownikow na grida */}\r\n                        {\r\n                            pageUsers.map((value,index) => {\r\n                                return (\r\n                                    <Grid item xs={12} key={index} >\r\n                                        <Accordion expanded={expanded === 'panel'.concat(index)} onChange={handleExpandChange('panel'.concat(index))} variant='outlined' >\r\n                                            <AccordionSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1bh-content\"\r\n                                            id=\"panel1bh-header\"\r\n                                            classes={{root:classes.rootAcordionSummary,content:classes.contentAcordionSummary}}\r\n                                            >\r\n                                                <Box display=\"flex\" flexDirection=\"row\" p={0} m={0}> \r\n                                                    <Avatar src={value.photo === null || value.photo ===undefined?'../Assets/person.png':value.photo } className={classes.small} /> \r\n                                                    <StyledTypography className={classes.heading}  display='inline'>{value.firstName.concat(' ').concat(value.lastName)}</StyledTypography>\r\n                                                </Box>\r\n                                                \r\n                                            </AccordionSummary>\r\n                                            <AccordionDetails classes={{root:classes.rootAcordionDetails}}>\r\n                                                <Grid container xl={12} spacing={0}  justify='flex-start' alignItems='center' >\r\n                                                    <Grid item xs={2}  >\r\n                                                        {/* TODO tutaj dodac obsluge zdjecia z bazy */}\r\n                                                            <Link  \r\n                                                                to={{\r\n                                                                    pathname: '/userProfile',\r\n                                                                    state: {\r\n                                                                        AthleteId: value.id\r\n                                                                    }\r\n                                                                }}\r\n                                                            >\r\n                                                                    <div style={{color:'black',marginTop:'2px',padding:'5px 0px 0px 2px',display:'inline-flex'}}>\r\n                                                                        <p style={{marginTop:'5px'}}>{context.dictionary.Profile}</p>\r\n                                                                        <GiMuscleUp style={{marginTop:'2px',marginLeft:'5px',width:'25px',height:'25px'}}/>                                                                     \r\n                                                                    </div>\r\n                                                            </Link>\r\n                                                                   \r\n                                                    </Grid>\r\n                                                    <Grid item xs={2}>\r\n                                                        {/* TODO do dostylowania buttony */}\r\n                                                            <Link  to={{\r\n                                                                    pathname: '/trainingplan/3days',\r\n                                                                    state: {\r\n                                                                        AthleteId: value.id\r\n                                                                     }}}>\r\n                                                                        <div style={{color:'black',marginTop:'2px',padding:'5px 0px 0px 2px',display:'inline-flex'}}>\r\n                                                                        <p style={{marginTop:'2px'}}>{context.dictionary.Plan}</p>\r\n                                                                        <FaHammer style={{marginTop:'2px',marginLeft:'5px',width:'25px',height:'25px'}}/>                                                                     \r\n                                                                        </div>\r\n                                                            </Link>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={3} >\r\n                                                            <Link  to={{\r\n                                                                    pathname: '/trainingplan/3days',\r\n                                                                    state: {\r\n                                                                        AthleteId: value.id\r\n                                                                     }}}>\r\n                                                                        <div style={{color:'black',marginTop:'2px',padding:'5px 0px 0px 2px',display:'inline-flex'}}>\r\n                                                                        <p style={{marginTop:'2px'}}>{context.dictionary.Progress}</p>\r\n                                                                        <AiOutlineLineChart style={{marginTop:'2px',marginLeft:'5px',width:'25px',height:'25px'}} />                                                                    \r\n                                                                        </div>\r\n                                                                </Link>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={5}>\r\n                                                       <Typography component='h6' display='inline' >\r\n                                                            <BsTable  style={{marginTop:'2px',marginRight:'5px',width:'15px',height:'15px'}}/>\r\n                                                            {context.dictionary.MesocyclePhase}: {getRomanNumber(value.mikrocykl)}\r\n                                                       </Typography>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </AccordionDetails>\r\n                                        </Accordion>\r\n                                    </Grid>\r\n                                )                               \r\n                            })\r\n                        }                       \r\n                    </Grid>              \r\n            </div>\r\n        )\r\n    }\r\n   \r\nexport default Pupils;","import React, {Component} from 'react';\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport '../Styles/Forms.css';\r\nimport axios from \"axios\";\r\nimport jwt_decode from 'jwt-decode';\r\nimport TrainingPlan3days  from'./TrainingPlan3days';\r\naxios.defaults.baseURL = 'http://localhost:5000/';\r\n\r\nclass TrainerProfile extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data:null\r\n        };\r\n        //this.load = this.loadPlan.bind(this);\r\n        // bindowanie funkcji asynchronicznych\r\n    }\r\n    \r\n\r\n    \r\n    async loadUsers()\r\n    {\r\n        const config = {\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n               Accept: \"application/json\",\r\n               withCredentials: true,\r\n               Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n               'Access-Control-Expose-Headers': '*'\r\n            },\r\n          };\r\n          let data = localStorage.getItem('token');\r\n          \r\n          data = jwt_decode(data);\r\n          console.log(\"token\",data.id);\r\n          let id = Number(data.id);\r\n\r\n          let jsonID = JSON.parse(id);\r\n          console.log(jsonID);\r\n          //console.log(\"token\",jwt_decode(data));\r\n          await axios\r\n            .get(\"api/trainers/getUsers/\"+id ,config)\r\n            .then((response) =>{\r\n                localStorage.setItem('token',response.headers['newtoken'])\r\n                this.setState(()=>{\r\n                    return {data:response.data}\r\n                })\r\n                console.log(response);\r\n               /* var token = localStorage.getItem('token');\r\n                var role = \"none\";\r\n                if(token != null)\r\n                {\r\n                    //how to decode token\r\n                    console.log(\"token\",jwt_decode(token));\r\n                    role = jwt_decode(token).role;\r\n                }*/\r\n            }).catch(error=>{console.log(error)});\r\n    }\r\n    \r\n    \r\n\r\n    componentDidMount=()=>\r\n    {\r\n        this.loadUsers();\r\n    }\r\n\r\n    \r\n    render=()=>\r\n    {\r\n        return (\r\n            <ContextConsumer>\r\n                {\r\n                    language => {\r\n                        return (\r\n                            <div>\r\n                                {this.state.data==null ? language.dictionary.DataNotLoaded:\r\n                                <div>                        \r\n                                    <select>\r\n                                        {this.state.data.pupils.map((value,id)=>\r\n                                        {\r\n                                            console.log(value);\r\n                                            return <option key={id}>\r\n                                                \r\n                                                    {value.firstName}\r\n                                                    {\" \"}\r\n                                                    {value.lastName}\r\n                                                \r\n                                                \r\n                                            </option>\r\n                                        }\r\n                                        )}\r\n                                    </select>\r\n                                    <TrainingPlan3days/>\r\n                                </div>}\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </ContextConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TrainerProfile;","import './Styles/Footer.css'\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport { Icon} from '@iconify/react';\r\nimport spotifyIcon from '@iconify-icons/mdi/spotify';\r\n\r\n\r\nfunction Footer ()  {\r\n    return (\r\n        <div className=\"footer\" >\r\n            <div className=\"phantomStyle\" />\r\n            <div className=\"footerStyle\">\r\n                <div className=\"footerContent\">\r\n                    <p className=\"footerContent__paragraph\">Follow us</p>\r\n                    <ul className=\"list\">\r\n                        <li className=\"list__element\"><a href=\"https://www.facebook.com/podsztanga\"><FacebookIcon /></a></li>\r\n                        <li className=\"list__element\"><a href=\"https://www.youtube.com/user/Jurand123\"><YouTubeIcon/></a></li>\r\n                        <li className=\"list__element\"><a href=\"https://www.instagram.com/podsztanga.pl/\"><InstagramIcon/></a></li>\r\n                        <li className=\"list__element\"><a href=\"https://open.spotify.com/show/2OkkyY7eODV29b2iW7lV0q?si=rHjvFxTFQfOPR6PbDXVQpg\"><Icon icon={spotifyIcon} height=\"25px\"/> </a> </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Footer;","import {useState, useContext,useEffect} from 'react';\r\nimport {LanguageContext} from '../languages/LanguageContext'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport {CgGym} from 'react-icons/cg'\r\nimport {GiSkeleton} from 'react-icons/gi'\r\nimport PersonalData from './PersonalData'\r\nimport EditUserData from './EditUserData'\r\nimport PersonalTrainingData from './PersonalTrainingData'\r\nimport PropTypes from 'prop-types';\r\nimport jwtDecode from 'jwt-decode';\r\nimport axios from \"axios\";\r\nimport {\r\n    Tab ,\r\n    Tabs,\r\n    Paper,\r\n    Box,\r\n    Typography } from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor:'black',\r\n        marginTop:'20px'\r\n    },\r\n    tabItem: {\r\n        // backgroundColor:'firebrick',\r\n        color:'white'\r\n    },\r\n    IconStyle: {\r\n        width:'25px',\r\n        height:'25px'\r\n    },\r\n    content: {\r\n        marginTop:'30px',\r\n        backgroundColor:'black'\r\n    }\r\n    }));\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n    \r\n    return (\r\n        <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n        >\r\n        {value === index && (\r\n            <Box p={3} >\r\n                <Typography style={{color:'white',backgroundColor:'black'}}>{children}</Typography>\r\n            </Box>\r\n        )}\r\n        </div>\r\n    );\r\n    }\r\n    \r\n    TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n    };\r\n\r\nconst Settings = (props) => {\r\n//Funkcyjny\r\n    const context = useContext(LanguageContext)\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = useState(0);\r\n\r\n    useEffect(() => {\r\n            console.log(props)\r\n        });\r\n\r\n    function a11yProps(index) {\r\n        return {\r\n          id: `full-width-tab-${index}`,\r\n          'aria-controls': `full-width-tabpanel-${index}`,\r\n        };\r\n      }\r\n  \r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n      };\r\n   \r\n    return (\r\n        <div>\r\n             <Paper className={classes.root}>\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"secondary\"\r\n                    textColor=\"secondary\"\r\n                    centered\r\n\r\n                >\r\n                    <Tab icon={<AccountCircleIcon className={classes.IconStyle }/>} label={context.dictionary.BasicData} className={classes.tabItem} {...a11yProps(0)}  />\r\n                    <Tab icon={<CgGym className={classes.IconStyle }/>} label={context.dictionary.PersonalData} className={classes.tabItem}  {...a11yProps(1)}  />\r\n                    <Tab icon = {<GiSkeleton className={classes.IconStyle }/>} label={context.dictionary.TrainingData} className={classes.tabItem}  {...a11yProps(2)}  />\r\n                </Tabs>\r\n                </Paper>\r\n                <div className={classes.content}>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'black'}} >\r\n                        <EditUserData/>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction}>\r\n                        <PersonalData editPersonalData={props.editPersonalData.bind(this)}/>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={2} dir={theme.direction}>\r\n                        <PersonalTrainingData/>\r\n                    </TabPanel>\r\n                </div>                \r\n        </div>        \r\n      );\r\n}\r\n\r\nexport default Settings;","import {useState,useContext} from 'react'\r\nimport NumberFormat from 'react-number-format';\r\nimport {LanguageContext} from '../languages/LanguageContext'\r\n\r\n\r\nconst NumberInfoField = (props) =>  {\r\n\r\n    const context = useContext(LanguageContext)\r\n    const [value,setValue] = useState('')\r\n    \r\n      return (\r\n        <NumberFormat\r\n          placeholder={context.dictionary['Variant%']}\r\n          isNumericString={true}\r\n          format='##%'\r\n          value={value}\r\n          onValueChange={vals => setValue(vals.formattedValue)}\r\n          {...props}\r\n        />\r\n      );\r\n    }\r\nexport default NumberInfoField;","import React,{useContext,useEffect,useState} from 'react';\r\nimport {LanguageContext} from '../languages/LanguageContext'\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Form,Field } from 'formik';\r\nimport axios from 'axios'\r\nimport { FormikTextField } from 'formik-material-fields';\r\nimport { TextField } from 'formik-material-ui';\r\nimport { Button,MenuItem, Select } from '@material-ui/core'\r\nimport * as Yup from 'yup';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport NumberInfoField from './NumberInfoField'\r\n\r\n//const isObjectEmpty = obj => Object.keys(obj).length===0;\r\nconst isObjectEmpty = obj => {\r\n    for (var key in obj){\r\n        if (obj[key]!==\"\" && obj[key]!==0)\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formStyle: {\r\n        marginBottom: '16px',\r\n        background: 'white',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    submit: {\r\n        marginTop: '32px' ,\r\n        backgroundColor:'firebrick'\r\n    },\r\n\r\n})) \r\n\r\n\r\n\r\nfunction ExcerciseForm(props) {\r\n    //Funkcyjny\r\n    const context = useContext(LanguageContext)\r\n    const [Muscle,setMuscle] = useState([])\r\n    const { excercise , closeModalFn } = props;\r\n    const types = [{value:'Squat',label:context.dictionary.Squad},{value:'Benchpress',label:context.dictionary.BenchPress},{value:'Deadlift',label:context.dictionary.Deadlift}\r\n                    ,{value:'Bodybuilding',label:context.dictionary.Bodybuilding},{value:'Prehab',label:context.dictionary.Prehab},{value:'Core',label:context.dictionary.Core}]\r\n    const progressMethod = [context.dictionary.ConstantWeight,context.dictionary.BodyWeight,context.dictionary.Band,context.dictionary.Kettle,context.dictionary.RampClosed]\r\n    const stickySQBP=[context.dictionary.onTheBottom,context.dictionary.inTheMiddle,context.dictionary.onTop,context.dictionary.upperRidge]\r\n    const stickyDL=[context.dictionary.onTheBottom,context.dictionary.underTheKnee,context.dictionary.behindTheKnee,context.dictionary.grip]\r\n    const initialValues = {\r\n        Id:excercise.id,\r\n        excerciseName: excercise.excerciseName,\r\n        type:excercise.type,\r\n        lift: excercise.lift,\r\n        stickyPoint: excercise.stickyPoint,\r\n        progresMethod: excercise.progresMethod,\r\n        sets: excercise.sets,\r\n        reps:excercise.reps,\r\n        description:excercise.description,\r\n        Muscle:[],\r\n        Variant:0\r\n    };\r\n    console.log(excercise)\r\n\r\n    useEffect(() => {\r\n        const config = {\r\n            headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            withCredentials: true,\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            'Access-Control-Expose-Headers': '*'\r\n            },\r\n        };\r\n        if(Muscle.length === 0)\r\n        axios.get('/api/excercises/getAllMuscle',config)\r\n            .then(response => {\r\n                localStorage.setItem('token',response.headers['newtoken'])\r\n                const{data} = response.data\r\n                setMuscle(data)\r\n            })\r\n    })\r\n\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        excerciseName: Yup.string().required(context.dictionary.Required),\r\n        type: Yup.string().required(context.dictionary.Required),\r\n        lift: Yup.string(),\r\n        stickyPoint: Yup.string(),\r\n        progresMethod: Yup.string().required(context.dictionary.Required),\r\n        sets: Yup.number().positive(context.dictionary.greaterThan0),\r\n        reps: Yup.string(),\r\n        description: Yup.string(),\r\n        Muscle: Yup.array()\r\n            .of(\r\n                Yup.number()\r\n            ),\r\n        Variant:Yup.number()\r\n    });\r\n\r\n    const addExcercise = async (values) =>{\r\n        const config = {\r\n            headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            withCredentials: true,\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            'Access-Control-Expose-Headers': '*'\r\n            },\r\n        };\r\n        let result = false;\r\n        await axios.post('/api/excercises/add', values, config)\r\n        .then((response)=>{\r\n            localStorage.setItem('token',response.headers['newtoken'])\r\n            alert(context.dictionary.ExcerciseAdded); //temp\r\n            result = true;\r\n        })\r\n        .catch(()=>{\r\n            alert(context.dictionary.Error + \" \" + context.dictionary.ExcerciseNotAdded); //temp\r\n            result = false;\r\n        })\r\n\r\n        return result;\r\n    }\r\n\r\n    const updateExcercise = async (values) =>{\r\n        const config = {\r\n            headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            withCredentials: true,\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            'Access-Control-Expose-Headers': '*'\r\n            },\r\n        };\r\n        let result = false;\r\n        await axios.put('/api/excercises', values, config)\r\n        .then((response)=>{\r\n            localStorage.setItem('token',response.headers['newtoken'])\r\n            alert(context.dictionary.ExcerciseEdited); //temp\r\n            result = true;\r\n        })\r\n        .catch(()=>{\r\n            alert(context.dictionary.Error + \" \" + context.dictionary.ExcerciseNotEdited); //temp\r\n            result = false;\r\n        })\r\n\r\n        return result;\r\n    }\r\n\r\n    const handleSubmit = async (values) => {\r\n        let success = false;\r\n        console.log(excercise)\r\n        if(isObjectEmpty(excercise)) {\r\n            success = await addExcercise(values);\r\n        } else {\r\n            success = await updateExcercise(values);\r\n        }\r\n        if (success)\r\n            closeModalFn();\r\n    }\r\n  \r\n    const removePolishLetter = (str) => {\r\n        return str\r\n            .replace(/[ą]/g,\"a\")\r\n            .replace(/[ó]/g,\"o\")\r\n            .replace(/[ś]/g,\"s\")\r\n            .replace(/[ę]/g,\"e\")\r\n    }\r\n\r\n    const classes = useStyles()\r\n    \r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={() =>  validationSchema}\r\n            onSubmit={handleSubmit}\r\n            enableReinitialize\r\n        >\r\n            {formik => (\r\n                <Form className={classes.formStyle}>\r\n                    <FormikTextField\r\n                        type=\"text\"\r\n                        id=\"excerciseName\"\r\n                        name=\"excerciseName\"\r\n                        label={context.dictionary.ExcerciseName}\r\n                    />\r\n                    <Field\r\n                        component={TextField}\r\n                        select\r\n                        id=\"type\"\r\n                        name=\"type\"\r\n                        margin='normal'\r\n                        label={context.dictionary.Type}\r\n                        >\r\n                        {\r\n                            types.map((type,index) => {\r\n                                return (\r\n                                    <MenuItem\r\n                                        key={`type${index}`}\r\n                                        value={removePolishLetter(type.value)}>\r\n                                            {type.label}\r\n                                    </MenuItem>\r\n\r\n                                )\r\n                            })\r\n                        }\r\n                    </Field>\r\n                    {formik.values.type==='Bodybuilding' && (\r\n                        <Field\r\n                            component={TextField}\r\n                            select\r\n                            name=\"Muscle\"\r\n                            id=\"Muscle\"\r\n                            SelectProps={{\r\n                                multiple: true,\r\n                              }}\r\n                            >\r\n                            {\r\n                                Muscle.map(elem => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={`muscle${elem.id}`}\r\n                                            value={elem.id}\r\n                                        >\r\n                                            {elem.muscleName}\r\n                                        </MenuItem>                                    \r\n                                    )\r\n\r\n                                })\r\n                            }\r\n                            \r\n                        </Field>\r\n                        // <SelectField\r\n                        //     id=\"Muscle\"\r\n                        //     margin='normal'\r\n                        //     name=\"Muscle\"\r\n                        //     options={Muscle}\r\n                        //     values={formik.values.Muscle}\r\n                        //     isMulti={true}\r\n                        //     onChange={formik.setFieldValue}\r\n                        //     onBlur={formik.setFieldTouched}\r\n                        //     touched={formik.touched.fieldOfResearch}\r\n                        //     error={formik.errors.fieldOfResearch}\r\n                        //     isClearable={true}\r\n                        //     backspaceRemovesValue={true}\r\n                        //     />\r\n                    )}\r\n                    {(formik.values.type=== 'Squat'|| formik.values.type === 'Benchpress' || formik.values.type === 'Deadlift') &&                  ( \r\n                                                <Field\r\n                                                component={TextField}\r\n                                                select\r\n                                                id=\"lift\"\r\n                                                name=\"lift\"\r\n                                                margin='normal'\r\n                                                label={context.dictionary.Type}\r\n                                                >\r\n                                                <MenuItem value='Basic'>{context.dictionary.Basic}</MenuItem>\r\n                                                <MenuItem value='Accesory'>{context.dictionary.Accessory}</MenuItem>\r\n                                                <MenuItem value='Variant'>{context.dictionary.Variant}</MenuItem>\r\n                                            </Field>)}\r\n                    {((formik.values.type=== 'Squat' || formik.values.type === 'Benchpress') && formik.values.lift !=='Accesory' ) && (\r\n                            <Field\r\n                            component={TextField}\r\n                            select\r\n                            id=\"stickyPoint\"\r\n                            name=\"stickyPoint\"\r\n                            margin='normal'\r\n                            label={context.dictionary.Weaknesses}\r\n                            >\r\n                            {\r\n                                stickySQBP.map((type,index) => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={`sticky${index}`}\r\n                                            value={removePolishLetter(type)}>\r\n                                                {type}\r\n                                        </MenuItem>\r\n\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Field>)}\r\n                        {(( formik.values.type === 'Deadlift') && formik.values.lift ==='Variant' ) && (\r\n                            <Field\r\n                            component={TextField}\r\n                            select\r\n                            id=\"stickyPoint\"\r\n                            name=\"stickyPoint\"\r\n                            margin='normal'\r\n                            label={context.dictionary.Weaknesses}\r\n                            >\r\n                            {\r\n                                stickyDL.map((type,index) => {\r\n                                    return (\r\n                                        <MenuItem\r\n                                            key={`sticky${index}`}\r\n                                            value={removePolishLetter(type)}>\r\n                                                {type}\r\n                                        </MenuItem>\r\n\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Field>)}\r\n                        {((formik.values.type=== 'Deadlift' || formik.values.type=== 'Squat' || formik.values.type === 'Benchpress') && formik.values.lift !== 'Accesory' ) && (\r\n                        //     <Field\r\n                        //         component={<NumberFormat format=\"##\" suffix=\" %\"/>}\r\n                        //         id=\"Variant\"\r\n                        //         name=\"Variant\"\r\n                        //         margin='normal'\r\n                        //         label={context.dictionary['Variant%']}\r\n                        //     >\r\n                        // </Field>\r\n                        <NumberInfoField\r\n                            placeholder={context.dictionary['Variant%']}\r\n                            value={formik.values.Variant}\r\n                            onValueChange={val => formik.setFieldValue(\"Variant\",val.floatValue)}\r\n                        />\r\n                        )}\r\n\r\n                    <Field\r\n                        component={TextField}\r\n                        select\r\n                        id=\"progresMethod\"\r\n                        name=\"progresMethod\"\r\n                        margin='normal'\r\n                        label={context.dictionary.ProgressionMethod}>\r\n                        {\r\n                            progressMethod.map((type,index) => {\r\n                                return (\r\n                                    <MenuItem\r\n                                        key={`progress${index}`}\r\n                                        value={type}>\r\n                                            {type}\r\n                                    </MenuItem>\r\n\r\n                                )\r\n                            })\r\n                        }\r\n                    </Field>\r\n                    <FormikTextField\r\n                        type='number'\r\n                        id=\"sets\"\r\n                        name=\"sets\"\r\n                        label={context.dictionary.Sets}\r\n                        margin=\"normal\"\r\n                    />\r\n                    <FormikTextField\r\n                        id=\"reps\"\r\n                        name=\"reps\"\r\n                        label={context.dictionary.Reps}\r\n                        margin=\"normal\"\r\n                    />\r\n                    <FormikTextField\r\n                        id=\"description\"\r\n                        name=\"description\"\r\n                        label={context.dictionary.Description}\r\n                        margin=\"normal\"\r\n                        multiline\r\n                        rows={5}\r\n                    />\r\n                    <Button\r\n                        className={classes.submit}\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        disabled={!formik.isValid}\r\n                    >\r\n                        {context.dictionary.Save}\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nExcerciseForm.propTypes = {\r\n    closeModalFn: PropTypes.func.isRequired,\r\n    excercise: PropTypes.shape({\r\n        excerciseName: PropTypes.string,\r\n        type:PropTypes.string,\r\n        lift:PropTypes.string,\r\n        stickyPoint: PropTypes.string,\r\n        progresMethod: PropTypes.string,\r\n        sets: PropTypes.number,\r\n        reps:PropTypes.string,\r\n        description: PropTypes.string,\r\n        Muscle:PropTypes.array,\r\n        Variant:PropTypes.number\r\n    }),\r\n};\r\n\r\n// when we are adding a new movie we don't have to pass any props\r\nExcerciseForm.defaultProps = {\r\n    excercise: {\r\n        excerciseName: '',\r\n        type:'',\r\n        lift:'',\r\n        stickyPoint: '',\r\n        progresMethod: '',\r\n        sets: 0,\r\n        reps:'',\r\n        description:'',\r\n        Muscle:[],\r\n        Variant:0\r\n    },\r\n};\r\n\r\nexport default ExcerciseForm;","import React, {Component} from 'react'\r\nimport {ContextConsumer, LanguageContext} from '../languages/LanguageContext'\r\nimport axios from 'axios'\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport '../Styles/ExercisesList.css';\r\nimport PropTypes from 'prop-types';\r\nimport {Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button} from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { TableFooter } from '@material-ui/core';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/';\r\n\r\nconst styles = theme => ({\r\n    table: {\r\n        minWidth: 750, \r\n    },\r\n    submit: {\r\n        margin: theme.spacing(1, 0, 2),\r\n        backgroundColor: 'firebrick'\r\n    }\r\n});\r\n\r\nconst StyledTableSortLabel = withStyles({\r\n  root: {\r\n    '&:hover': {\r\n        color: 'firebrick',\r\n        opacity: 0.5,\r\n      '& $icon': {\r\n        opacity: 0.5,\r\n      },\r\n    },\r\n    '&$active': {\r\n      color: 'firebrick',\r\n      '&& $icon': {\r\n        opacity: 1,\r\n        color: 'firebrick'\r\n      },\r\n    },\r\n  },\r\n  active: {},\r\n  icon: {}\r\n})(TableSortLabel);\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: 'rgb(32, 32, 31)',\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n  \r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n}))(TableRow);\r\n\r\nconst StyledTablePagination = withStyles({\r\n    root: {\r\n        color: 'white',\r\n    },\r\n    selectIcon: {\r\n        color: 'white'\r\n    },\r\n    actions: {\r\n        '&& .MuiIconButton-root.Mui-disabled':{\r\n            color: 'gray'\r\n        }\r\n    }\r\n})(TablePagination);\r\n\r\nconst StyledEditIcon = withStyles({\r\n    root:{\r\n        '&:hover':{\r\n            color: 'firebrick',\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n})(EditIcon);\r\n\r\nconst StyledDeleteIcon = withStyles({\r\n    root:{\r\n        '&:hover':{\r\n            color: 'firebrick',\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n})(DeleteIcon);\r\n\r\nconst EnhancedTableHead = (props) =>{\r\n    const { data, order, orderBy, onRequestSort } = props;\r\n    const languageContext = React.useContext(LanguageContext);\r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {data.map((headCell) => {\r\n                if(!headCell.hide){\r\n                    return(\r\n                        <StyledTableCell\r\n                            key={headCell.field}\r\n                            align={headCell.alignleft ? 'left' : 'center'}\r\n                            sortDirection={orderBy === headCell.field ? order : false}\r\n                            width={headCell.width}\r\n                            >\r\n                            <StyledTableSortLabel\r\n                                active={orderBy === headCell.field}\r\n                                direction={orderBy === headCell.field ? order : 'asc'}\r\n                                onClick={createSortHandler(headCell.field)}\r\n                                >\r\n                                {headCell.label}\r\n                            </StyledTableSortLabel>\r\n                        </StyledTableCell>\r\n                    )\r\n                }\r\n                else return null;\r\n            })}\r\n            <StyledTableCell>{languageContext.dictionary.Edit}</StyledTableCell>\r\n            <StyledTableCell>{languageContext.dictionary.Delete}</StyledTableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n}\r\n  \r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst descendingComparator = (a, b, orderBy) =>{\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst stableSort = (array, comparator) =>{\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst getComparator = (order, orderBy) =>{\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nconst config = {\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n        Accept: 'application/json',\r\n        withCredentials: true,\r\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        'Access-Control-Expose-Headers': '*'\r\n    }\r\n}\r\n\r\nclass ExcercisesList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data : {\r\n                columns:[\r\n                    {field:'id',hide:true},\r\n                    {field:'excerciseName',headerName:'Nazwa ćwiczenia', width:300},\r\n                    {field:'type',headerName:'Typ',width:200},\r\n                    {field:'lift',headerName:'Rodzaj',width:200},\r\n                    {field:'stickyPoint',headerName:'Słabe strony',width:300},\r\n                    {field:'progresMethod',headerName:'Metoda Progresji',width:300},\r\n                    {field:'sets',headerName:'Serie',hide:true,width:100},\r\n                    {field:'reps',headerName:'Powtórzenia',hide:true,width:'100px'},\r\n\r\n                ],\r\n                columns2:[\r\n                    {field:'id', hide:true},\r\n                    {field:'excerciseName', alignleft: true, label:'Nazwa ćwiczenia', width: '28%'},\r\n                    {field:'type', alignleft: false, label:'Typ', width: '18%'},\r\n                    {field:'lift', alignleft: false, label:'Rodzaj', width:'14%'},\r\n                    {field:'stickyPoint', alignleft: false, label:'Słabe strony', width:'14%'},\r\n                    {field:'progresMethod',  alignleft: false,label:'Metoda Progresji', width:'18%'}\r\n                ],\r\n                rows:[]\r\n            },\r\n            page: 0,\r\n            rowsPerPage: 5,\r\n            order: 'asc',\r\n            orderBy: '',\r\n            selectedId: '',\r\n            modalDelete: false\r\n        }\r\n    }\r\n\r\n    handleRequestSort = (event, property) => {\r\n        const isAsc = this.state.orderBy === property && this.state.order === 'asc';\r\n        this.setState({\r\n            order: isAsc ? 'desc' : 'asc',\r\n            orderBy: property\r\n        })\r\n    };\r\n\r\n    handleChangePage = (event, newPage) => {\r\n        this.setState({\r\n            page: newPage\r\n        })\r\n    };\r\n    \r\n    handleChangeRowsPerPage = (event) => {\r\n        this.setState({\r\n            page: 0,\r\n            rowsPerPage: +event.target.value\r\n        })\r\n    };\r\n\r\n    async componentDidMount() {\r\n        var token  = localStorage.getItem('token')\r\n\r\n        if(token!==null) {\r\n           await this.fetchData()\r\n        }\r\n    }\r\n\r\n    fetchData = async () => {\r\n        await axios.get('api/excercises/getall',config)\r\n        .then(resp => {\r\n            const {excercises} = resp.data\r\n            localStorage.setItem('token',resp.headers['newtoken'])\r\n            this.setState((prev) => {\r\n                const {data} = prev\r\n                data.rows = excercises\r\n                return {data}\r\n            })\r\n        }).catch(err=> {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    EditClick = (event, exercise) =>{\r\n        console.log('edit click',exercise)\r\n        this.props.changeFormValuesFn(exercise);\r\n    }\r\n\r\n    DeleteClick = (event, id) =>{\r\n        this.setState({\r\n            modalDelete: true,\r\n            selectedId: id\r\n        })\r\n    }\r\n\r\n    handleCloseDelete = () =>{\r\n        this.setState({\r\n            modalDelete: false\r\n        })\r\n    }\r\n\r\n    handleDeleteAction = async () =>{\r\n        let success = false;\r\n        console.log('chcesz usunac',this.state.selectedId)\r\n        success = await this.deleteExcercise();\r\n        if(success)\r\n            this.handleCloseDelete();\r\n    }\r\n\r\n    deleteExcercise = async () =>{\r\n        let result = false;\r\n        await axios.delete('/api/excercises/delete/' + this.state.selectedId, config)\r\n        .then((response)=>{\r\n            localStorage.setItem('token',response.headers['newtoken'])\r\n            alert(\"usunięto\"); //temp\r\n            result = true;\r\n        })\r\n        .catch(()=>{\r\n            alert(\"Error - nie usunięto\"); //temp\r\n            result = false;\r\n        })\r\n\r\n        return result;\r\n    }\r\n\r\n    render () {\r\n        const {data, page, rowsPerPage, order, orderBy} = this.state\r\n        const {classes } = this.props\r\n\r\n        return (\r\n        <ContextConsumer>\r\n            {\r\n            language =>{\r\n                return(\r\n                    <div className='main_div'>\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table} aria-label=\"customized table\">\r\n                                <EnhancedTableHead\r\n                                    data={data.columns2}\r\n                                    classes={classes}\r\n                                    order={order}\r\n                                    orderBy={orderBy}\r\n                                    onRequestSort={this.handleRequestSort}\r\n                                    rowCount={data.rows.length}\r\n                                />\r\n                                <TableBody>\r\n                                {stableSort(data.rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                                    <StyledTableRow key={row.id}>\r\n                                        <StyledTableCell component=\"th\" scope=\"row\">\r\n                                            {row.excerciseName}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.type}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.lift}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.stickyPoint}</StyledTableCell>\r\n                                        <StyledTableCell align=\"right\">{row.progresMethod}</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\"><StyledEditIcon onClick={ (event) => this.EditClick(event,row)}/></StyledTableCell>\r\n                                        <StyledTableCell align=\"center\"><StyledDeleteIcon onClick={ (event) => this.DeleteClick(event,row.id)}/></StyledTableCell>\r\n                                    </StyledTableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                                <TableFooter style={{backgroundColor: 'rgb(32, 32, 31)'}}>\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={7} style={{padding: '0'}}>\r\n                                            <StyledTablePagination\r\n                                                className={classes.test}\r\n                                                rowsPerPageOptions={[5, 10, 15]}\r\n                                                component=\"div\"\r\n                                                count={data.rows.length}\r\n                                                rowsPerPage={rowsPerPage}\r\n                                                page={page}\r\n                                                onChangePage={this.handleChangePage}\r\n                                                onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                                            />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableFooter>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <Dialog\r\n                            PaperProps={{\r\n                                style: {\r\n                                backgroundColor: 'rgb(32, 32, 31)',\r\n                                marginLeft: '15%',\r\n                                color: 'white'\r\n                                },\r\n                            }}\r\n                            open={this.state.modalDelete}\r\n                            onBackdropClick={this.handleCloseDelete}\r\n                            onEscapeKeyDown={this.handleCloseDelete}\r\n                        >\r\n                            <DialogTitle>{language.dictionary.ExcerciseDelete}</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText\r\n                                    style={{color: 'white'}}\r\n                                    tabIndex={-1}\r\n                                >\r\n                                    {language.dictionary.AskConfirmDeleteExercise}\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.submit} \r\n                                        onClick={this.handleDeleteAction}>\r\n                                    {language.dictionary.Yes}\r\n                                </Button>\r\n                                <Button variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        className={classes.submit} \r\n                                        onClick={this.handleCloseDelete}>\r\n                                    {language.dictionary.No}\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </div>\r\n                )\r\n            }\r\n            }\r\n        </ContextConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(ExcercisesList);","import React ,{Component} from 'react';\r\nimport {ContextConsumer} from '../languages/LanguageContext'\r\nimport { Container, Typography, Fab, Dialog, DialogTitle, DialogContent } from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Add } from '@material-ui/icons';\r\nimport ExcerciseForm from '../Forms/ExcerciseForm'\r\nimport ExcercisesList from '../Components/ExcercisesList'\r\n\r\nconst isObjectEmpty = obj => Object.keys(obj).length === 0;\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        top: '85vh',\r\n        right: '2vw',\r\n    },\r\n    header : {\r\n        padding: '24px 0',\r\n        borderBottom: '1px solid #DDD',\r\n        textTransform: 'uppercase',\r\n        color:'white',\r\n\t\tmarginLeft: '15%'\r\n    }\r\n\r\n})\r\n\r\nconst StyledFab = withStyles({\r\n    secondary:{\r\n        backgroundColor:'firebrick'\r\n    }\r\n})(Fab)\r\n\r\nclass ExcerciseView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            openModal:false,\r\n            formInitValues:{}\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n\t\tthis.setState({\r\n\t\t\topenModal: false,\r\n\t\t\tformInitValues: {},\r\n\t\t});\r\n\t}\r\n\r\n\topenModal = (newExcercise = true) => {\r\n\t\tif(newExcercise) {\r\n\t\t\tthis.setState({\r\n\t\t\t\topenModal: true,\r\n\t\t\t\tformInitValues: {}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\topenModal: true,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n    changeFormInitValues = newValues => {\r\n\t\tthis.setState({\r\n\t\t\tformInitValues: newValues,\r\n\t\t});\r\n\t\t\r\n\t\tthis.openModal(false);\r\n\t}\r\n\r\n    render() {\r\n        const {classes } = this.props\r\n\t\treturn (\r\n\t\t\t<ContextConsumer>\r\n\t\t\t\t{\r\n\t\t\t\t\tlanguage => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\t\t\t\topen={this.state.openModal}\r\n\t\t\t\t\t\t\t\t\tmaxWidth=\"sm\"\r\n\t\t\t\t\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\t\t\t\t\tonBackdropClick={this.closeModal}\r\n\t\t\t\t\t\t\t\t\tonEscapeKeyDown={this.closeModal}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DialogTitle>{isObjectEmpty(this.state.formInitValues) ? language.dictionary.ExcerciseAdd : language.dictionary.Edit}</DialogTitle>\r\n\t\t\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t\t\t<ExcerciseForm\r\n\t\t\t\t\t\t\t\t\t\t\tcloseModalFn={this.closeModal}\r\n\t\t\t\t\t\t\t\t\t\t\texcercise={this.state.formInitValues}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Container maxWidth=\"lg\">\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h4\" component=\"h1\" className={classes.header}>{language.dictionary.Excercises}</Typography>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<ExcercisesList changeFormValuesFn={this.changeFormInitValues} />\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<StyledFab\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.openModal}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.fab} \r\n\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"add\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Add/>\r\n\t\t\t\t\t\t\t\t\t</StyledFab>\r\n\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t</ContextConsumer>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default withStyles(styles,{withTheme:true})(ExcerciseView)","import React, { useState, useContext } from 'react';\r\nimport {LanguageContext} from '../languages/LanguageContext'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {Typography, Grid, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button} from '@material-ui/core';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport {StyledPagination, StyledPaginationItem} from '../Components/StyledComponents'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n\r\nconst styles = makeStyles ((theme) => ({\r\n    header : {\r\n        padding: '24px 0',\r\n        borderBottom: '1px solid #DDD',\r\n        textTransform: 'uppercase',\r\n        color:'white',\r\n        marginBottom: 10,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        width: '80%'\r\n    },\r\n    icon: {\r\n        color: 'firebrick',\r\n        verticalAlign: 'middle'\r\n    },\r\n    card: {\r\n        width: '50%',\r\n        backgroundColor: 'white',\r\n        margin: 'auto',\r\n        marginTop: 10,\r\n        borderRadius: 10\r\n    },\r\n    not_received:{\r\n        backgroundColor: '#ffe6e6'\r\n    },\r\n    inline_div: {\r\n        verticalAlign: 'middle',\r\n        marginLeft: 10,\r\n    },\r\n    inline_p: {\r\n        marginLeft: 5,\r\n        display: 'inline',\r\n        verticalAlign: 'middle',\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(1, 0, 2),\r\n        backgroundColor: 'firebrick'\r\n    }\r\n}))\r\n\r\nconst Notifications = () =>{\r\n\r\n    const [notifications, setNotifications] = useState([\r\n        {\r\n            id: 0,\r\n            content:    `1 - Cras mattis consectetur purus sit amet fermentum.\r\n                        Cras justo odio, dapibus ac facilisis in, egestas eget quam.\r\n                        Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n                        Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\r\n            received: false\r\n        },\r\n        {\r\n            id: 1,\r\n            content: '2- some very very very long text of message number 2',\r\n            received: false\r\n        },\r\n        {\r\n            id: 2,\r\n            content:    `3- Cras mattis consectetur purus sit amet fermentum.\r\n                        Cras justo odio, dapibus ac facilisis in, egestas eget quam.\r\n                        Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n                        Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\r\n            received: true\r\n        },\r\n        {\r\n            id: 3,\r\n            content: '4- some text of message number 4',\r\n            received: false\r\n        },\r\n        {\r\n            id: 4,\r\n            content: '5 - some text text text text text text text text text of message number 5',\r\n            received: false\r\n        },\r\n        {\r\n            id: 5,\r\n            content: '6 - some text of message message message message message message number 6',\r\n            received: true\r\n        },\r\n        {\r\n            id: 6,\r\n            content: '7 - some text of message number 1',\r\n            received: true\r\n        }\r\n    ])\r\n    const context = useContext(LanguageContext)\r\n    const [pageNotifications,setPage] = useState(notifications.slice(0,5));\r\n    const pageSize = 5;\r\n    const [pageNR,setPageNR] = useState(1);\r\n    const pageCount = Math.ceil(notifications.length/pageSize);\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedNotification, setSelectedNotification] = useState({});\r\n    const classes = styles()\r\n\r\n    const PaginationFun=(e,page)=>{\r\n        let pageNotificationslocal=notifications.slice((page-1)*pageSize,page*pageSize);\r\n        setPage(pageNotificationslocal);\r\n        setPageNR(page);\r\n        console.log(pageNotifications);\r\n    }\r\n\r\n    const handleClickOpen = (event,notification) => {\r\n        setSelectedNotification(notification)\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, notification) => {\r\n        if(notification !== 'backdropClick')\r\n            notifications[notifications.findIndex(x => x.id === notification.id)].received = true\r\n        setOpen(false);\r\n    };\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n        const { current: descriptionElement } = descriptionElementRef;\r\n        if (descriptionElement !== null) {\r\n            descriptionElement.focus();\r\n        }\r\n        }\r\n    }, [open]);\r\n\r\n    return(\r\n        <div style={{marginTop: '2%', marginLeft: '15%',marginRight: '2%'}}>\r\n            <Typography variant=\"h4\" component=\"h1\" className={classes.header}>{context.dictionary.Notifications}</Typography>\r\n            <Grid container justify = \"center\" >\r\n                <StyledPagination count={pageCount} showFirstButton showLastButton defaultPage={1} page={pageNR} \r\n                    onChange={(e,page)=>PaginationFun(e,page)}\r\n                    renderItem={(item)=> \r\n                        <StyledPaginationItem {...item}/>}\r\n                />\r\n            </Grid>\r\n            {pageNotifications.map((value,index)=>{\r\n                return(\r\n                    value.received ?\r\n                    <Card className={classes.card} key={index}>\r\n                        <CardActionArea onClick={(event) => handleClickOpen(event,value)}>\r\n                            <CardContent>\r\n                                <div className={classes.inline_div}>\r\n                                    <NotificationsNoneIcon className={classes.icon} fontSize='large'/>\r\n                                    <p className={classes.inline_p}>\r\n                                        {value.content.length>40 ? \r\n                                            value.content.slice(0,40)+\"...\" : \r\n                                            value.content}\r\n                                    </p>\r\n                                </div>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    :\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea onClick={(event) => handleClickOpen(event,value)}>\r\n                            <CardContent className={classes.not_received}>\r\n                                <div className={classes.inline_div}>\r\n                                    <NotificationsActiveIcon className={classes.icon} fontSize='large'/>\r\n                                    <p className={classes.inline_p}>\r\n                                        {value.content.length>40 ? \r\n                                            value.content.slice(0,40)+\"...\" : \r\n                                            value.content}\r\n                                    </p>\r\n                                </div>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                )\r\n            })}\r\n            <Dialog\r\n                PaperProps={{\r\n                    style: {\r\n                      backgroundColor: 'rgb(32, 32, 31)',\r\n                      marginLeft: '15%',\r\n                      color: 'white'\r\n                    },\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n                scroll='paper'\r\n            >\r\n                <DialogTitle id=\"scroll-dialog-title\">Title</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText\r\n                        style={{color: 'white'}}\r\n                        ref={descriptionElementRef}\r\n                        tabIndex={-1}\r\n                    >\r\n                        {selectedNotification.content}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.submit} \r\n                            onClick={(event) => handleClose(event, selectedNotification)}>\r\n                        OK\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import {useState} from  'react'\r\nimport {LanguageContext} from './LanguageContext'\r\nimport {languageList, languageOptions} from './LanguageOptions'\r\n\r\nconst LanguageProvider = ({children}) => {\r\n\r\n    const defaultLanguage = window.localStorage.getItem('rcml-lang')\r\n    const [userLanguage,setUserLanguage] = useState(defaultLanguage || 'PL')\r\n\r\n    const provider = {\r\n        userLanguage,\r\n        dictionary:languageList[userLanguage],\r\n        userLanguageChange: selected => {\r\n            const newLanguage = languageOptions[selected] ? selected : 'PL'\r\n            setUserLanguage(newLanguage);\r\n            window.localStorage.setItem('rcml-lang', newLanguage);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <LanguageContext.Provider value={provider}>\r\n            {children}\r\n        </LanguageContext.Provider>\r\n    )\r\n}\r\n\r\nexport default LanguageProvider;","import {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Form,Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Button,MenuItem} from '@material-ui/core'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport { FormikTextField } from 'formik-material-fields';\r\nimport { TextField  } from 'formik-material-ui';\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { DatePicker } from \"formik-material-ui-pickers\";\r\nimport { pl } from \"date-fns/locale\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button:{\r\n        margin: '20px 10px 0px',\r\n        backgroundColor: 'firebrick'\r\n    },\r\n    formStyle: {\r\n        marginBottom: '16px',\r\n        background: 'white',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n}))\r\n\r\n\r\n\r\nconst CreatePlanForm = (props) => {\r\n\r\n    const {closeModalFn} = props\r\n\r\n    const initialValues = {\r\n        Name:'',\r\n        Phase:'',\r\n        Type:'',\r\n        StartDate:new Date().toLocaleDateString()\r\n    }\r\n    const Phases = [\r\n        {\r\n            value:\"intensyfikacja\",\r\n            label:'intensyfikacja'\r\n        },\r\n        {\r\n            value:\"akumulacja\",\r\n            label:'akumulacja'\r\n        },\r\n        {\r\n            value:\"peak\",\r\n            label:'peak'\r\n        }\r\n    ]\r\n    const Types= [\r\n        {\r\n            value:\"trzydniowy\",\r\n            label:'trzydniowy'\r\n        },        \r\n        {\r\n            value:\"czterodniowy\",\r\n            label:'czterodniowy'\r\n        }\r\n    ]\r\n    const validationSchema = Yup.object().shape({\r\n        Name:Yup.string(),\r\n        Phase:Yup.string().required(\"Faza jest wymagana\"),\r\n        Type:Yup.string().required('typ planu jest wymagany'),\r\n        StartDate:Yup.date()\r\n        .min(new Date())\r\n        .max(new Date(\"2050-01-01T00:00:00\"))\r\n        .required(\"Required\"),\r\n    })\r\n\r\n    const handleSubmit = () => {\r\n\r\n    }\r\n\r\n    //TODO context\r\n    const classes = useStyles()\r\n    return (\r\n        <Formik\r\n            initialValues = {initialValues}\r\n            onSubmit = {handleSubmit}\r\n            validationSchema ={validationSchema}\r\n            render = {({ \r\n                submitForm, \r\n                isSubmitting, \r\n                values, \r\n                setFieldValue, \r\n                isValid,\r\n                handleChange, \r\n                handleBlur,\r\n                 }) => (\r\n                <Form className={classes.formStyle}>\r\n                    <FormikTextField\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        label=\"Nazwa planu\"/>\r\n                    <Field\r\n                        component={TextField}\r\n                        select\r\n                        id=\"Phase\"\r\n                        name=\"Phase\"\r\n                        margin='normal'\r\n                        label=\"Phase\"\r\n                        >\r\n                        {\r\n                            Phases.map((type,index) => {\r\n                                return (\r\n                                    <MenuItem\r\n                                        key={`type${index}`}\r\n                                        value={type.value}>\r\n                                            {type.label}\r\n                                    </MenuItem>\r\n\r\n                                )\r\n                            })\r\n                        }\r\n                    </Field>\r\n                    <Field\r\n                        component={TextField}\r\n                        select\r\n                        id=\"Type\"\r\n                        name=\"Type\"\r\n                        margin='normal'\r\n                        label=\"Type\"\r\n                        >\r\n                        {\r\n                            Types.map((type,index) => {\r\n                                return (\r\n                                    <MenuItem\r\n                                        key={`type${index}`}\r\n                                        value={type.value}>\r\n                                            {type.label}\r\n                                    </MenuItem>\r\n\r\n                                )\r\n                            })\r\n                        }\r\n                        </Field>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={pl}>\r\n                            <Field\r\n                            component={DatePicker}\r\n                            id=\"time\"\r\n                            name=\"time\"\r\n                            margin=\"normal\"\r\n                            format=\"dd-MM-yyyy\"\r\n                            label=\"Data\"\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    <Button\r\n                        className={classes.button}\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        disabled={!isValid}\r\n                    >\r\n                        Przejdz dalej\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nCreatePlanForm.propTypes = {\r\n    closeModalFn: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default CreatePlanForm;\r\n\r\n","import {useState} from 'react'\r\n\r\nimport {\r\n    Grid,\r\n    Button,\r\n    Box,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle\r\n} from '@material-ui/core'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport TrainingPlan3daysUser from '../Forms/TrainingPlan3daysUser'\r\nimport TrainingPlan3days from '../Forms/TrainingPlan3days'\r\nimport CreatePlanForm from '../Forms/CreatePlanForm'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button:{\r\n        margin: '20px 10px 0px',\r\n        backgroundColor: 'firebrick'\r\n    },\r\n}))\r\n\r\nconst TraininingPlanTrainerView = (props) => {\r\n\r\n    const [editDialog,setEditDialog] = useState(false)\r\n    const [editPlan,setEditPlan] = useState(false)\r\n\r\n    const createPlanClick = () => {\r\n        setEditDialog(true)\r\n    }\r\n    const closeEditModalFn = () => {\r\n        setEditDialog(false)\r\n    }\r\n\r\n    const editPlanClick =() => {\r\n        setEditPlan(true)\r\n    }\r\n\r\n    /*const clickPostPlan=() => {\r\n    }*/\r\n\r\n    let [postplan, doPostplan] = useState(0); //Dla testów\r\n    postplan = (postplanF) => {\r\n        postplanF()\r\n    }\r\n    //const {userid} = props\r\n    let userid=13\r\n    const classes = useStyles()\r\n\r\n    //TODO dodac context\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={editDialog}\r\n                maxWidth=\"sm\"\r\n                fullWidth={true}\r\n                onBackdropClick={closeEditModalFn}\r\n                onEscapeKeyDown={closeEditModalFn}\r\n            >\r\n                <DialogTitle>Stworz plan</DialogTitle>\r\n                <DialogContent>\r\n                    <CreatePlanForm\r\n                        closeModalFn = {closeEditModalFn}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Grid container spacing={1} justify='space-between' alignItems='center'> \r\n            <Grid item xs={12}>\r\n                <Box display=\"flex\" justifyContent=\"center\" >\r\n                    <Button variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            onClick={() => editPlanClick()}\r\n                            >\r\n                        Edytuj plan\r\n                    </Button>\r\n                    <Button variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            onClick={() => createPlanClick()}\r\n                            >\r\n                        Stworz nowy plan\r\n                    </Button>\r\n                    {\r\n                        editPlan === true ?\r\n                        <Button variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            onClick={() => doPostplan(prev=>prev+1)}\r\n                            >\r\n                        Wyślij plan\r\n                        </Button>\r\n                    :\r\n                        <Button variant=\"contained\"\r\n                            disabled=\"true\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            onClick={() => doPostplan(prev=>prev+1)}\r\n                            >\r\n                        Wyślij plan\r\n                        </Button>\r\n                    }\r\n                </Box>\r\n            </Grid>\r\n            {\r\n                editPlan === false ?\r\n                <Grid item xs={12} >\r\n                    <TrainingPlan3daysUser idFromProps={userid} />\r\n                </Grid>\r\n                :\r\n                <Grid item xs={12} >\r\n                    <TrainingPlan3days idFromProps={userid} postplan={postplan} />\r\n                </Grid>\r\n            }\r\n\r\n\r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TraininingPlanTrainerView;","import React, { useState, useEffect, useContext} from 'react'\r\nimport {useLocation} from 'react-router-dom'\r\nimport {LanguageContext} from '../languages/LanguageContext'\r\nimport axios from \"axios\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { CustomSlider } from '../Components/StyledComponents'\r\nimport { Grid, TextField, Avatar, Typography } from '@material-ui/core'\r\n\r\nconst styles = makeStyles ((theme) => ({\r\n    paper: {\r\n        marginTop: '8px 0px 0px 0px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center', \r\n    },\r\n    section: {\r\n        width: '100%',\r\n        marginTop: '1px'\r\n    },\r\n    submit: {\r\n        margin: '10px 0px 2px 0px',\r\n        backgroundColor: 'firebrick'\r\n    },\r\n    viewPosition: {\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        width: '30%',\r\n        backgroundColor:'black',\r\n        padding:'0px 20px 20px 20px'\r\n    }, \r\n    formElements: {\r\n        backgroundColor:'white',\r\n        borderRadius: '5px',\r\n        minWidth:'20%',\r\n        display:'flex',\r\n    },\r\n    container: {\r\n        display:'flex',\r\n        position:'relative',\r\n        marginBottom:'12vh',\r\n        marginLeft:'2vw'\r\n    },\r\n    large: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n        left:'35%',\r\n        marginTop:'10px',\r\n        position:'absolute',\r\n    },\r\n    slider: {\r\n        '&.MuiSlider-root.Mui-disabled': {\r\n            color: 'firebrick'\r\n        },\r\n        '& .MuiSlider-thumb.Mui-disabled': {\r\n            width: 20,\r\n            height: 20,\r\n            marginTop: -9,\r\n            marginLeft: -11,\r\n        },\r\n    },\r\n    formControlLabel: {\r\n        '& .MuiFormControlLabel-label.Mui-disabled': {\r\n            color: 'white'\r\n        }\r\n    }\r\n}))\r\n\r\nconst stressValue = [\r\n    {\r\n       value: 0,\r\n       label:'Niski' \r\n    },\r\n    {\r\n        value:50,\r\n        label:'Średni' \r\n     },\r\n     {\r\n        value:100,\r\n        label:'Wysoki' \r\n     },\r\n]\r\nconst sleepValue = [\r\n    {\r\n       value: 0,\r\n       label:'< 5h' \r\n    },\r\n    {\r\n        value:50,\r\n        label:'5-7h '\r\n     },\r\n     {\r\n        value:100,\r\n        label:'>7h' \r\n     },\r\n]\r\nconst sportClassValue = [\r\n    {\r\n        value:0,\r\n        label:'III'\r\n    },\r\n    {\r\n        value:33,\r\n        label:'II'\r\n    },\r\n    {\r\n        value:66,\r\n        label:'I'\r\n    },\r\n    {\r\n        value:99,\r\n        label:'M'\r\n    }\r\n]\r\nconst startVolumeValue = [\r\n    {\r\n        value:0,\r\n        label:'Niska'\r\n    },\r\n    {\r\n        value:50,\r\n        label:'Średnia'\r\n    },\r\n    {\r\n        value:100,\r\n        label:'Wysoka'\r\n    }\r\n]\r\n\r\nconst UserProfile = () =>{\r\n    const context = useContext(LanguageContext)\r\n    const location = useLocation()\r\n    const [basicData,setBasicData] = useState({});\r\n    const [personalData,setPersonalData] = useState({});\r\n    const classes = styles()\r\n\r\n    useEffect(() => {\r\n        const id = location.state.AthleteId\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Accept: 'application/json'\r\n            }\r\n        }\r\n        const fetchBasicData = async () => {\r\n            await axios.get('api/auth/getBasicData/'+id,config)\r\n            .then( response => {\r\n                setBasicData(response.data)\r\n            })\r\n            .catch(error=>console.log(error));\r\n        }\r\n        const fetchPersonalData = async () =>{\r\n            axios.get('api/auth/gettrainingdata/'+id, config)\r\n            .then(response=>{\r\n                const personalData = {\r\n                    Gender: response.data.data.gender.trim(),\r\n                    Weight: response.data.data.weight,\r\n                    Height: response.data.data.height,\r\n                    SportClass: response.data.data.sportClass.trim(),\r\n                    Experience: response.data.data.experience,\r\n                    Age: response.data.data.age,\r\n                    Diet: response.data.data.diet.trim(),\r\n                    Sleep: response.data.data.sleep,\r\n                    Stress: response.data.data.stress.trim(),\r\n                    Ssa: response.data.data.ssa,\r\n                    BenchPress: response.data.data.benchPress,\r\n                    Squat: response.data.data.squat,\r\n                    Deadlift: response.data.data.deadlift,\r\n                    StartVolume: response.data.data.startVolume.trim()\r\n                }\r\n                console.log(personalData)\r\n                setPersonalData(personalData)               \r\n            })\r\n            .catch((error)=>console.log(error))\r\n        }\r\n        fetchBasicData();\r\n        fetchPersonalData();\r\n    }, []);\r\n\r\n    return(\r\n        <div className={classes.viewPosition}>\r\n            <div className={classes.paper}>\r\n                <div className={classes.section}>\r\n                    <Grid container spacing={0} justify='center' alignItems='center' >\r\n                        <Grid item xs={12} >\r\n                            <div className={classes.container}>\r\n                                <Avatar src={basicData?.photo||\"../Assets/person.png\"} className={classes.large}/>\r\n                            </div> \r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant='filled'\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            value={basicData?.firstName||\"\"}\r\n                            label={context.dictionary.Name}\r\n                            className={classes.formElements}\r\n                            InputProps={{readOnly: true}}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant='filled'\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            value={basicData?.lastName||\"\"}\r\n                            label={context.dictionary.Surname}\r\n                            className={classes.formElements}\r\n                            InputProps={{readOnly: true}}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant='filled'\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            value={basicData?.email||\"\"}\r\n                            label=\"Email\"\r\n                            className={classes.formElements}\r\n                            InputProps={{readOnly: true}}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        variant='filled'\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        value={basicData?.name||\"\"}\r\n                        label={context.dictionary.UserName}\r\n                        className={classes.formElements}\r\n                        InputProps={{readOnly: true}}\r\n                        />\r\n                    </Grid>\r\n                </div>\r\n                <div className={classes.section}>\r\n                    <Grid container spacing={1}  justify='space-between' alignItems='center'>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                type=\"number\"\r\n                                variant='filled'\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                value={personalData.Age||\"\"}\r\n                                label={\"wiek\"}\r\n                                className={classes.formElements}\r\n                                InputProps={{readOnly: true}}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                type=\"number\"\r\n                                variant='filled'\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                value={personalData.Experience||\"\"}\r\n                                label={\"doświadczenie (lat)\"}\r\n                                className={classes.formElements}\r\n                                InputProps={{readOnly: true}}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                type=\"number\"\r\n                                variant='filled'\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                value={personalData.Weight||\"\"}\r\n                                label={\"waga\"}\r\n                                className={classes.formElements}\r\n                                InputProps={{readOnly: true}}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                type=\"number\"\r\n                                variant='filled'\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                value={personalData.Height||\"\"}\r\n                                label={\"wzrost(cm)\"}\r\n                                className={classes.formElements}\r\n                                InputProps={{readOnly: true}}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                type=\"number\"\r\n                                variant='filled'\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                value={personalData.Squat||\"\"}\r\n                                label={\"Przysiad (kg)\"}\r\n                                className={classes.formElements}\r\n                                InputProps={{readOnly: true}}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                type=\"number\"\r\n                                variant='filled'\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                value={personalData.BenchPress||\"\"}\r\n                                label={\"Wyciskanie (kg)\"}\r\n                                className={classes.formElements}\r\n                                InputProps={{readOnly: true}}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                type=\"number\"\r\n                                variant='filled'\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                value={personalData.Deadlift||\"\"}\r\n                                label={\"Martwy ciąg (kg)\"}\r\n                                className={classes.formElements}\r\n                                InputProps={{readOnly: true}}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            <Typography id=\"discrete-slider-restrict\" gutterBottom style={{color:'white'}}>\r\n                                Poziom Stresu\r\n                            </Typography>\r\n                            <CustomSlider\r\n                                className={classes.slider}\r\n                                aria-labelledby=\"discrete-slider-restrict\"\r\n                                step={null}\r\n                                marks={stressValue}\r\n                                value={parseInt(personalData.Stress)}\r\n                                disabled\r\n                                />\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            <Typography id=\"discrete-slider-restrict\" gutterBottom style={{color:'white'}}>\r\n                                Sen\r\n                            </Typography>\r\n                            <CustomSlider\r\n                                className={classes.slider}\r\n                                aria-labelledby=\"discrete-slider-restrict\"\r\n                                step={null}\r\n                                marks={sleepValue}\r\n                                value={parseInt(personalData.Sleep)}\r\n                                disabled\r\n                                />\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            <Typography id=\"discrete-slider-restrict\" gutterBottom style={{color:'white'}}>\r\n                                Objętość Startowa\r\n                            </Typography>\r\n                            <CustomSlider\r\n                                className={classes.slider}\r\n                                aria-labelledby=\"discrete-slider-restrict\"\r\n                                step={null}\r\n                                marks={startVolumeValue}\r\n                                value={parseInt(personalData.StartVolume)}\r\n                                disabled\r\n                                />\r\n                        </Grid>\r\n                        <Grid item xs={5}>\r\n                            <Typography id=\"discrete-slider-restrict\" gutterBottom style={{color:'white'}}>\r\n                                Klasa Sportowa\r\n                            </Typography>\r\n                            <CustomSlider\r\n                                className={classes.slider}\r\n                                aria-labelledby=\"discrete-slider-restrict\"\r\n                                step={null}\r\n                                marks={sportClassValue}\r\n                                value={parseInt(personalData.SportClass)}\r\n                                disabled\r\n                                />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                variant='filled'\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                value={personalData.Gender?personalData.Gender===\"M\"?\"Mężczyzna\":\"Kobieta\":\"\"}\r\n                                label={\"płeć\"}\r\n                                className={classes.formElements}\r\n                                InputProps={{readOnly: true}}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                variant='filled'\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                value={personalData.Ssa!=null?personalData.Ssa?\"Tak\":\"Nie\":\"\"}\r\n                                label={\"Ssa\"}\r\n                                className={classes.formElements}\r\n                                InputProps={{readOnly: true}}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant='filled'\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                value={personalData?.Diet||\"\"}\r\n                                label={\"Odżywianie\"}\r\n                                className={classes.formElements}\r\n                                InputProps={{readOnly: true}}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n   \r\nexport default UserProfile;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\r\nimport Registration from \"./Forms/Registration\";\r\nimport Login from \"./Forms/Login\";\r\nimport PasswordRecovery from \"./Forms/PasswordRecovery\";\r\nimport PasswordChange from \"./Forms/PasswordChange\";\r\nimport PasswordReset from \"./Forms/PasswordReset\";\r\nimport PersonalData from \"./Forms/PersonalData\";\r\nimport axios from \"axios\";\r\nimport Home from \"./Home\";\r\nimport BravermanFileForm from \"./Forms/BravermanFileForm\";\r\nimport PersonalTrainingData from \"./Forms/PersonalTrainingData\";\r\nimport MesocycleForm from \"./Forms/MesocycleForm\";\r\nimport TrainingPlan3days from \"./Forms/TrainingPlan3days\";\r\nimport TrainingPlan3daysUser from \"./Forms/TrainingPlan3daysUser\";\r\nimport SettingsTrainer from \"./Forms/settingsTrainer\";\r\nimport Header from './Navs/Header';\r\nimport Navbar from './Navs/Navbar'\r\nimport Pupils from './Forms/Pupils'\r\nimport \"./Styles/App.css\";\r\nimport jwt_decode from 'jwt-decode';\r\nimport TrainerProfile from \"./Forms/TrainerProfile\";\r\nimport Footer from './Footer'\r\nimport Settings from \"./Forms/Settings\";\r\nimport ExcerciseView from './Views/ExcerciseView'\r\nimport Notifications from './Views/Notifications'\r\nimport LanguageProvider from './languages/LanguageProvider'\r\nimport TraininingPlanTrainerView from './Views/TrainingPlanTrainerView'\r\nimport UserProfile from './Views/UserProfile'\r\n\r\naxios.defaults.baseURL = \"https://api-tren-app.herokuapp.com/\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"https://api-tren-app.herokuapp.com/\";\r\naxios.defaults.headers.get[\"Access-Control-Allow-Origin\"] = \"https://api-tren-app.herokuapp.com/\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      role: \"none\",\r\n      isToogled: false,\r\n      isLoading:false\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    var token = localStorage.getItem('token');\r\n    console.log('token',token);\r\n    var role = \"none\";\r\n    if (token != null && token !== undefined) {\r\n      //how to decode token\r\n      //console.log(\"token\", jwt_decode(token));\r\n      role = jwt_decode(token).role;\r\n    }\r\n    this.setState({\r\n      role: role\r\n    })\r\n  }\r\n\r\n  async onRegistration (registationData, details) {\r\n    var body = {\r\n      User: {\r\n        Name: registationData.login,\r\n        Password: registationData.password,\r\n      },\r\n      Data: {\r\n        ...details\r\n        /*Gender: details.Gender,\r\n        Weight: details.Weight,\r\n        Height: details.Height,\r\n        SportClass: details.SportClass,\r\n        Experience: details.Experience,\r\n        Age: details.Age,\r\n        Diet: details.Diet,\r\n        Sleep: details.Sleep,\r\n        Stress: details.Stress,\r\n        Ssa: details.Ssa,\r\n        BenchPress: details.BenchPress,\r\n        Squat: details.Squat,\r\n        Deadlift: details.Deadlift,\r\n        StartVolume: details.StartVolume,*/\r\n      },\r\n    };\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(\"api/Auth/register\", body, config)\r\n      .then((response) => console.log(response))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  async onPersonalDataChange(userId, details) { //=> Settings => PersonalData\r\n    var body = {\r\n      UserId: userId,\r\n      TrainingData: details//{...details}\r\n  };\r\n  console.log(\"Wysyłam: \"+body)\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    axios.put('api/Auth/editTrainingData', body, config)\r\n    .then(response=>console.log(response))\r\n    .catch(error=>console.log(error))\r\n\r\n\r\n  }\r\n\r\n  async onPasswordChange(data) {\r\n    var body = {\r\n      UserId: data.UserId,\r\n      OldPassword: data.OldPassword,\r\n      NewPassword: data.NewPassword\r\n    };\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    let result = false;\r\n    await axios.put(\"/api/Auth/passwordchange\", body, config)\r\n      .then(() => {\r\n        result = true;\r\n      })\r\n      .catch(() => {\r\n        result = false;\r\n      });\r\n    return result;\r\n  };\r\n\r\n  async onPasswordRecover(email) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    let result = false;\r\n    await axios.post(`/api/auth/remindPassword/${email}`, config)\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      result = true;\r\n    })\r\n    .catch(() => {\r\n      result = false;\r\n    })\r\n    return result;\r\n\r\n  }\r\n\r\n  hamburgerHandle = (e) => {\r\n    const istoogled = this.state.isToogled;\r\n    this.setState({\r\n      role: this.state.role,\r\n      isToogled: !istoogled\r\n    })\r\n  }\r\n  render() {\r\n    const role = this.state.role;\r\n    \r\n    return (\r\n      <Router>\r\n      <LanguageProvider>\r\n          <div className=\"pageContainer\">\r\n            <Header/>              \r\n              <Navbar role={role}></Navbar>\r\n              \r\n              <Route exact path=\"/\" render={() =>{\r\n                if(role===undefined || role===null || role ===\"none\") \r\n                  return <Home/>\r\n                  else if(role===\"user\")\r\n                  return <Redirect to=\"/trainingplan/3days/user\"/>\r\n                  else if(role===\"admin\")\r\n                    return <Redirect to= \"/pupils\"/>\r\n                    else return \"błąd\"\r\n              } } />\r\n              <Route exact path=\"/registration\" render={() => <Registration />} />\r\n              <Route\r\n                exact\r\n                path=\"/login\"\r\n                render={() => <Login />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/profile\"\r\n                render={(props) => (\r\n                  <PersonalData confirmForm={this.onRegistration.bind(this)} {...props} />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/passwordchange\"\r\n                render={() => <PasswordChange onClick={this.onPasswordChange.bind(this)} />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/passwordreset\"\r\n                render={() => <PasswordReset onClick={null} />}\r\n              />\r\n              \r\n              <Route \r\n              exact path=\"/forgotpassword\" \r\n              render={() => <PasswordRecovery onClick={this.onPasswordRecover.bind(this)}/>}\r\n              />\r\n              <Route\r\n              \r\n                exact\r\n                path=\"/pupils\"\r\n                render={()=><Pupils/>}>\r\n\r\n              </Route>\r\n              <Route\r\n                exact\r\n                path=\"/bravermantest\"\r\n                render={(props) => <BravermanFileForm {...props}/>}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/personaltrainingdata\"\r\n                render={() => <PersonalTrainingData />}\r\n              />\r\n              <Route exact path=\"/mesocycledays\" render={() => <MesocycleForm />} />\r\n              <Route\r\n                exact\r\n                path=\"/trainingplan/3days\"\r\n                render={(props) => <TraininingPlanTrainerView {...props} />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/trainingplan/3days/user\"\r\n                render={() => <TrainingPlan3daysUser />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/excerciseList\"\r\n                render={() => <ExcerciseView />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/settings\"\r\n                render={() => <Settings editPersonalData={this.onPersonalDataChange.bind(this)} />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/trainerProfile\"\r\n                render={() => <TrainerProfile />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/notifications\"\r\n                render={() => <Notifications />}\r\n              />\r\n               <Route\r\n                exact\r\n                path=\"/settingsTrainer\"\r\n                render={() => <SettingsTrainer editPersonalData={this.onPersonalDataChange.bind(this)}/>}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/userProfile\"\r\n                render={(props) => <UserProfile {...props}/>}\r\n              />\r\n\r\n            <Footer></Footer>\r\n          </div>\r\n      </LanguageProvider>\r\n      </Router>\r\n    );\r\n  }\r\n\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}